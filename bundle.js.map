{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/fast-random/index.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/common.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/mat2.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/mat2d.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/mat3.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/mat4.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/quat.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/quat2.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/vec2.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/vec3.js","webpack:///./node_modules/gl-matrix/lib/gl-matrix/vec4.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/path-browserify/index.js","webpack:///./node_modules/process/browser.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/Camera.ts","webpack:///./src/globals.ts","webpack:///./src/gpu_renderer/Material.ts","webpack:///./src/gpu_renderer/WebglRenderer.ts","webpack:///./src/gpu_renderer/shader.ts","webpack:///./src/gpu_renderer/shaders/quad.frag","webpack:///./src/gpu_renderer/shaders/quad.vert","webpack:///./src/gpu_renderer/shaders/ray_trace.frag","webpack:///./src/gpu_renderer/shaders/ray_trace.vert","webpack:///./src/imgui/bind-imgui.js","webpack:///./src/imgui/imconfig.ts","webpack:///./src/imgui/imgui.ts","webpack:///./src/imgui/imgui_impl.ts","webpack:///./src/main.ts","webpack:///./src/renderer/Hitable.ts","webpack:///./src/renderer/HitableList.ts","webpack:///./src/renderer/Material.ts","webpack:///./src/renderer/Ray.ts","webpack:///./src/renderer/SoftwareRenderer.ts","webpack:///./src/renderer/Sphere.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFY;;AAEZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,SAAS;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACtJA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ,aAAa,mBAAO,CAAC,oDAAW;AAChC,cAAc,mBAAO,CAAC,gDAAS;AAC/B,cAAc,mBAAO,CAAC,gDAAS;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mDAAmD;AACxE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wBAAwB,QAAQ;AAChC;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,cAAc;AACjuDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,GAAG;AACH;AACA,eAAe,SAAS;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC5vDA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACN;AACE;AACF;AACA;AACA;AACE;AACF;AACA;AACA;;;;;;;;;;;;;;ACT5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;AAEA;AACO;AACA;AACA;;AAEP;AACA;AACA;AACA,WAAW,KAAK;AAChB;AACO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACO;AACP;AACA,C;;;;;;;;;;;;ACzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;;AAExC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC,MAAM,qDAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB;AAC7S;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO,mB;;;;;;;;;;;;ACjbP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACO;AACP,gBAAgB,qDAAmB;AACnC,MAAM,qDAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB;AACvd;;AAEA;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO,mB;;;;;;;;;;;;ACneP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;;AAExC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC,MAAM,qDAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU,KAAK;AACf,UAAU,KAAK;AACf;AACA,YAAY,KAAK;AACjB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,UAAU,KAAK;AACf,UAAU,KAAK;AACf;AACA,YAAY,KAAK;AACjB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB;AACttB;;AAEA;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO,mB;;;;;;;;;;;;ACzyBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;;AAExC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC,MAAM,qDAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,UAAU,UAAU;AAChC;AACA;AACA;AACA;;AAEA,YAAY,UAAU,WAAW;AACjC;AACA;AACA;AACA;;AAEA,aAAa,WAAW,WAAW;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,eAAe,WAAW,WAAW;AACrC,eAAe,WAAW,WAAW;AACrC,eAAe,WAAW,YAAY;;AAEtC,iBAAiB,aAAa,aAAa;AAC3C,iBAAiB,aAAa,aAAa;AAC3C,iBAAiB,aAAa,cAAc;;AAE5C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,kDAAgB;AAC5B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,WAAW,WAAW;AACnC,aAAa,WAAW,WAAW;AACnC,aAAa,WAAW,YAAY;;AAEpC;AACA,sBAAsB,wBAAwB;AAC9C,0BAA0B,oBAAoB;AAC9C,0BAA0B,wBAAwB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,kDAAgB;AAC5B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,aAAa,KAAK;AAClB;AACO;AACP,wBAAwB,qDAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB;AACO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,YAAY,KAAK;AACjB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB;AACA,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,kDAAgB,+BAA+B,kDAAgB,+BAA+B,kDAAgB;AAC/I;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,uEAAuE,kDAAgB,yEAAyE,kDAAgB,yEAAyE,kDAAgB,yEAAyE,kDAAgB,yEAAyE,kDAAgB,yEAAyE,kDAAgB;AAC/zC;;AAEA;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO,mB;;;;;;;;;;;;AChzDP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACN;AACA;AACA;;AAElC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC,MAAM,qDAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,KAAK;AACjB,YAAY,OAAO;AACnB;AACO;AACP;AACA;AACA,UAAU,kDAAgB;AAC1B;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kDAAgB;AACpC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA,WAAW,iDAAe;AAC1B,WAAW,iDAAe;AAC1B,WAAW,iDAAe;;AAE1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACA;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC;AACA,wBAAwB;AACxB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,KAAK;AAClB;AACA;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AA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A;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;AACN;AACA;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACO;AACP,eAAe,qDAAmB;AAClC,MAAM,qDAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACO;AACP,eAAe,qDAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACO;AACP,eAAe,qDAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACO;AACP,eAAe,qDAAmB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACO;AACP;AACA,cAAc,+CAAW;AACzB,EAAE,oDAAgB;AAClB,cAAc,qDAAmB;AACjC,EAAE,uDAAmB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,MAAM;AAClB,YAAY,KAAK;AACjB;AACO,cAAc,6CAAS;;AAE9B;AACA;AACA,YAAY,KAAK;AACjB,YAAY,MAAM;AAClB,YAAY,KAAK;AACjB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACO,cAAc,6CAAS;;AAE9B;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,KAAK;AACjB,YAAY,MAAM;AAClB,YAAY,KAAK;AACjB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gDAAY;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gDAAY;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,gDAAY;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACO;AACP;AACA,sBAAsB,kDAAgB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACO,UAAU,4CAAQ;;AAEzB;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACO,aAAa,+CAAW;;AAE/B;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACA;AACO,oBAAoB,sDAAkB;;AAE7C;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB;AACjoB,C;;;;;;;;;;;;AC30BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;;AAExC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC,MAAM,qDAAmB;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA,UAAU,iDAAe;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,MAAM;AACjB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;AACA;AACA,8BAA8B,kDAAgB,qEAAqE,kDAAgB;AACnI;;AAEA;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA,oBAAoB,OAAO;AAC3B,oBAAoB;AACpB;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA,CAAC,G;;;;;;;;;;;;AChnBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;;AAExC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC,MAAM,qDAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;;AAEA,UAAU,iDAAe;AACzB,UAAU,iDAAe;AACzB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB;AACxN;;AAEA;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA,oBAAoB,OAAO;AAC3B,oBAAoB,kBAAkB;AACtC;AACA,oBAAoB,kBAAkB;AACtC;;AAEA;AACA;AACA,CAAC,G;;;;;;;;;;;;AClxBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;;AAExC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC,MAAM,qDAAmB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP,gBAAgB,qDAAmB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB,aAAa,KAAK;AAClB;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iDAAe;AACxB,SAAS,iDAAe;AACxB;AACA,GAAG;AACH;AACA,SAAS,iDAAe;AACxB,SAAS,iDAAe;AACxB;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,KAAK;AAClB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,aAAa,OAAO;AACpB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA,WAAW,KAAK;AAChB,WAAW,KAAK;AAChB,aAAa,QAAQ;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB,qEAAqE,kDAAgB;AAC7S;;AAEA;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA,cAAc;AACd;AACA;AACO;;AAEP;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA,oBAAoB,OAAO;AAC3B,oBAAoB,kBAAkB,kBAAkB;AACxD;AACA,oBAAoB,kBAAkB,kBAAkB;AACxD;;AAEA;AACA;AACA,CAAC,G;;;;;;;;;;;ACrmBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,QAAQ,WAAW;;AAEnB;AACA;AACA,QAAQ,UAAU;;AAElB;AACA;;;;;;;;;;;;ACnFA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,MAAM;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,IAAI;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,8BAA8B;AAClE;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,oBAAoB;AAC9B;AACA;;AAEA;AACA,UAAU,UAAU;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,sBAAsB;AACrD;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/NA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;;;;;ACvLtC;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AAAqC;AAES;AAE9C,IAAI,SAAS,GAAG,8CAAI,CAAC,MAAM,EAAE,CAAC;AAC9B,MAAM,KAAK,GAAW,GAAG,CAAC;AAC1B,MAAM,WAAW,GAAW,KAAK,CAAC;AAElC,IAAY,eAMX;AAND,WAAY,eAAe;IACvB,2DAAO;IACP,6DAAQ;IACR,qDAAI;IACJ,uDAAK;IACL,iDAAE;AACN,CAAC,EANW,eA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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.ts\");\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","function random(seed) {\n\tfunction _seed(s) {\n\t\tif ((seed = (s|0) % 2147483647) <= 0) {\n\t\t\tseed += 2147483646;\n\t\t}\n\t}\n\n\tfunction _nextInt() {\n\t\treturn seed = seed * 48271 % 2147483647;\n\t}\n\n\tfunction _nextFloat() {\n\t\treturn (_nextInt() - 1) / 2147483646;\n\t}\n\n\t_seed(seed);\n\n\treturn {\n\t\tseed: _seed,\n\t\tnextInt: _nextInt,\n\t\tnextFloat: _nextFloat\n\t};\n}\n\nmodule.exports = random;\n","import * as glMatrix from \"./gl-matrix/common.js\";\r\nimport * as mat2 from \"./gl-matrix/mat2.js\";\r\nimport * as mat2d from \"./gl-matrix/mat2d.js\";\r\nimport * as mat3 from \"./gl-matrix/mat3.js\";\r\nimport * as mat4 from \"./gl-matrix/mat4.js\";\r\nimport * as quat from \"./gl-matrix/quat.js\";\r\nimport * as quat2 from \"./gl-matrix/quat2.js\";\r\nimport * as vec2 from \"./gl-matrix/vec2.js\";\r\nimport * as vec3 from \"./gl-matrix/vec3.js\";\r\nimport * as vec4 from \"./gl-matrix/vec4.js\";\r\n\r\nexport { glMatrix, mat2, mat2d, mat3, mat4, quat, quat2, vec2, vec3, vec4 };","/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\r\n\r\n// Configuration Constants\r\nexport var EPSILON = 0.000001;\r\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\r\nexport var RANDOM = Math.random;\r\n\r\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\r\nexport function setMatrixArrayType(type) {\r\n  ARRAY_TYPE = type;\r\n}\r\n\r\nvar degree = Math.PI / 180;\r\n\r\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\r\nexport function toRadian(a) {\r\n  return a * degree;\r\n}\r\n\r\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {mat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\r\nexport function fromValues(m00, m01, m10, m11) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\r\nexport function set(out, m00, m01, m10, m11) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m10;\r\n  out[3] = m11;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache\r\n  // some values\r\n  if (out === a) {\r\n    var a1 = a[1];\r\n    out[1] = a[2];\r\n    out[2] = a1;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[2];\r\n    out[2] = a[1];\r\n    out[3] = a[3];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n\r\n  // Calculate the determinant\r\n  var det = a0 * a3 - a2 * a1;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = a3 * det;\r\n  out[1] = -a1 * det;\r\n  out[2] = -a2 * det;\r\n  out[3] = a0 * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\r\nexport function adjoint(out, a) {\r\n  // Caching this value is nessecary if out == a\r\n  var a0 = a[0];\r\n  out[0] = a[3];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a0;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {mat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[2] * a[1];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {mat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {mat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2));\r\n}\r\n\r\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {mat2} L the lower triangular matrix\r\n * @param {mat2} D the diagonal matrix\r\n * @param {mat2} U the upper triangular matrix\r\n * @param {mat2} a the input matrix to factorize\r\n */\r\n\r\nexport function LDU(L, D, U, a) {\r\n  L[2] = a[2] / a[0];\r\n  U[0] = a[0];\r\n  U[1] = a[1];\r\n  U[3] = a[3] - L[2] * U[1];\r\n  return [L, D, U];\r\n}\r\n\r\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, c, tx,\r\n *  b, d, ty,\r\n *  0, 0, 1]\r\n * </pre>\r\n * The last row is ignored so the array is shorter and operations are faster.\r\n */\r\n\r\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[4] = 0;\r\n    out[5] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\r\nexport function fromValues(a, b, c, d, tx, ty) {\r\n  var out = new glMatrix.ARRAY_TYPE(6);\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\r\nexport function set(out, a, b, c, d, tx, ty) {\r\n  out[0] = a;\r\n  out[1] = b;\r\n  out[2] = c;\r\n  out[3] = d;\r\n  out[4] = tx;\r\n  out[5] = ty;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\r\nexport function invert(out, a) {\r\n  var aa = a[0],\r\n      ab = a[1],\r\n      ac = a[2],\r\n      ad = a[3];\r\n  var atx = a[4],\r\n      aty = a[5];\r\n\r\n  var det = aa * ad - ab * ac;\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = ad * det;\r\n  out[1] = -ab * det;\r\n  out[2] = -ac * det;\r\n  out[3] = aa * det;\r\n  out[4] = (ac * aty - ad * atx) * det;\r\n  out[5] = (ab * atx - aa * aty) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  return a[0] * a[3] - a[1] * a[2];\r\n}\r\n\r\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  out[0] = a0 * b0 + a2 * b1;\r\n  out[1] = a1 * b0 + a3 * b1;\r\n  out[2] = a0 * b2 + a2 * b3;\r\n  out[3] = a1 * b2 + a3 * b3;\r\n  out[4] = a0 * b4 + a2 * b5 + a4;\r\n  out[5] = a1 * b4 + a3 * b5 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  out[0] = a0 * c + a2 * s;\r\n  out[1] = a1 * c + a3 * s;\r\n  out[2] = a0 * -s + a2 * c;\r\n  out[3] = a1 * -s + a3 * c;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0 * v0;\r\n  out[1] = a1 * v0;\r\n  out[2] = a2 * v1;\r\n  out[3] = a3 * v1;\r\n  out[4] = a4;\r\n  out[5] = a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\r\nexport function translate(out, a, v) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var v0 = v[0],\r\n      v1 = v[1];\r\n  out[0] = a0;\r\n  out[1] = a1;\r\n  out[2] = a2;\r\n  out[3] = a3;\r\n  out[4] = a0 * v0 + a2 * v1 + a4;\r\n  out[5] = a1 * v0 + a3 * v1 + a5;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = -s;\r\n  out[3] = c;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = v[1];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = v[0];\r\n  out[5] = v[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + 1);\r\n}\r\n\r\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\r\n\r\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[5] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[4] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\r\nexport function fromMat4(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[4];\r\n  out[4] = a[5];\r\n  out[5] = a[6];\r\n  out[6] = a[8];\r\n  out[7] = a[9];\r\n  out[8] = a[10];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\r\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  var out = new glMatrix.ARRAY_TYPE(9);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\r\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m10;\r\n  out[4] = m11;\r\n  out[5] = m12;\r\n  out[6] = m20;\r\n  out[7] = m21;\r\n  out[8] = m22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a12 = a[5];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a01;\r\n    out[5] = a[7];\r\n    out[6] = a02;\r\n    out[7] = a12;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[3];\r\n    out[2] = a[6];\r\n    out[3] = a[1];\r\n    out[4] = a[4];\r\n    out[5] = a[7];\r\n    out[6] = a[2];\r\n    out[7] = a[5];\r\n    out[8] = a[8];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b01 = a22 * a11 - a12 * a21;\r\n  var b11 = -a22 * a10 + a12 * a20;\r\n  var b21 = a21 * a10 - a11 * a20;\r\n\r\n  // Calculate the determinant\r\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = b01 * det;\r\n  out[1] = (-a22 * a01 + a02 * a21) * det;\r\n  out[2] = (a12 * a01 - a02 * a11) * det;\r\n  out[3] = b11 * det;\r\n  out[4] = (a22 * a00 - a02 * a20) * det;\r\n  out[5] = (-a12 * a00 + a02 * a10) * det;\r\n  out[6] = b21 * det;\r\n  out[7] = (-a21 * a00 + a01 * a20) * det;\r\n  out[8] = (a11 * a00 - a01 * a10) * det;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  out[0] = a11 * a22 - a12 * a21;\r\n  out[1] = a02 * a21 - a01 * a22;\r\n  out[2] = a01 * a12 - a02 * a11;\r\n  out[3] = a12 * a20 - a10 * a22;\r\n  out[4] = a00 * a22 - a02 * a20;\r\n  out[5] = a02 * a10 - a00 * a12;\r\n  out[6] = a10 * a21 - a11 * a20;\r\n  out[7] = a01 * a20 - a00 * a21;\r\n  out[8] = a00 * a11 - a01 * a10;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n}\r\n\r\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2];\r\n  var a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5];\r\n  var a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8];\r\n\r\n  var b00 = b[0],\r\n      b01 = b[1],\r\n      b02 = b[2];\r\n  var b10 = b[3],\r\n      b11 = b[4],\r\n      b12 = b[5];\r\n  var b20 = b[6],\r\n      b21 = b[7],\r\n      b22 = b[8];\r\n\r\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = a00;\r\n  out[1] = a01;\r\n  out[2] = a02;\r\n\r\n  out[3] = a10;\r\n  out[4] = a11;\r\n  out[5] = a12;\r\n\r\n  out[6] = x * a00 + y * a10 + a20;\r\n  out[7] = x * a01 + y * a11 + a21;\r\n  out[8] = x * a02 + y * a12 + a22;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function rotate(out, a, rad) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a10 = a[3],\r\n      a11 = a[4],\r\n      a12 = a[5],\r\n      a20 = a[6],\r\n      a21 = a[7],\r\n      a22 = a[8],\r\n      s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c * a00 + s * a10;\r\n  out[1] = c * a01 + s * a11;\r\n  out[2] = c * a02 + s * a12;\r\n\r\n  out[3] = c * a10 - s * a00;\r\n  out[4] = c * a11 - s * a01;\r\n  out[5] = c * a12 - s * a02;\r\n\r\n  out[6] = a20;\r\n  out[7] = a21;\r\n  out[8] = a22;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1];\r\n\r\n  out[0] = x * a[0];\r\n  out[1] = x * a[1];\r\n  out[2] = x * a[2];\r\n\r\n  out[3] = y * a[3];\r\n  out[4] = y * a[4];\r\n  out[5] = y * a[5];\r\n\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 1;\r\n  out[5] = 0;\r\n  out[6] = v[0];\r\n  out[7] = v[1];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\r\nexport function fromRotation(out, rad) {\r\n  var s = Math.sin(rad),\r\n      c = Math.cos(rad);\r\n\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n\r\n  out[3] = -s;\r\n  out[4] = c;\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n\r\n  out[3] = 0;\r\n  out[4] = v[1];\r\n  out[5] = 0;\r\n\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\r\nexport function fromMat2d(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = 0;\r\n\r\n  out[3] = a[2];\r\n  out[4] = a[3];\r\n  out[5] = 0;\r\n\r\n  out[6] = a[4];\r\n  out[7] = a[5];\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[3] = yx - wz;\r\n  out[6] = zx + wy;\r\n\r\n  out[1] = yx + wz;\r\n  out[4] = 1 - xx - zz;\r\n  out[7] = zy - wx;\r\n\r\n  out[2] = zx - wy;\r\n  out[5] = zy + wx;\r\n  out[8] = 1 - xx - yy;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\r\nexport function normalFromMat4(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\r\nexport function projection(out, width, height) {\r\n  out[0] = 2 / width;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -2 / height;\r\n  out[5] = 0;\r\n  out[6] = -1;\r\n  out[7] = 1;\r\n  out[8] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7],\r\n      a8 = a[8];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7],\r\n      b8 = b[8];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\r\n\r\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n    out[4] = 0;\r\n    out[6] = 0;\r\n    out[7] = 0;\r\n    out[8] = 0;\r\n    out[9] = 0;\r\n    out[11] = 0;\r\n    out[12] = 0;\r\n    out[13] = 0;\r\n    out[14] = 0;\r\n  }\r\n  out[0] = 1;\r\n  out[5] = 1;\r\n  out[10] = 1;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  out[8] = a[8];\r\n  out[9] = a[9];\r\n  out[10] = a[10];\r\n  out[11] = a[11];\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\r\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  var out = new glMatrix.ARRAY_TYPE(16);\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\r\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\r\n  out[0] = m00;\r\n  out[1] = m01;\r\n  out[2] = m02;\r\n  out[3] = m03;\r\n  out[4] = m10;\r\n  out[5] = m11;\r\n  out[6] = m12;\r\n  out[7] = m13;\r\n  out[8] = m20;\r\n  out[9] = m21;\r\n  out[10] = m22;\r\n  out[11] = m23;\r\n  out[12] = m30;\r\n  out[13] = m31;\r\n  out[14] = m32;\r\n  out[15] = m33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function transpose(out, a) {\r\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n  if (out === a) {\r\n    var a01 = a[1],\r\n        a02 = a[2],\r\n        a03 = a[3];\r\n    var a12 = a[6],\r\n        a13 = a[7];\r\n    var a23 = a[11];\r\n\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a01;\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a02;\r\n    out[9] = a12;\r\n    out[11] = a[14];\r\n    out[12] = a03;\r\n    out[13] = a13;\r\n    out[14] = a23;\r\n  } else {\r\n    out[0] = a[0];\r\n    out[1] = a[4];\r\n    out[2] = a[8];\r\n    out[3] = a[12];\r\n    out[4] = a[1];\r\n    out[5] = a[5];\r\n    out[6] = a[9];\r\n    out[7] = a[13];\r\n    out[8] = a[2];\r\n    out[9] = a[6];\r\n    out[10] = a[10];\r\n    out[11] = a[14];\r\n    out[12] = a[3];\r\n    out[13] = a[7];\r\n    out[14] = a[11];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function invert(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n  if (!det) {\r\n    return null;\r\n  }\r\n  det = 1.0 / det;\r\n\r\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\r\nexport function adjoint(out, a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\r\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\r\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\r\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\r\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\r\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\r\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\r\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\r\nexport function determinant(a) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  var b00 = a00 * a11 - a01 * a10;\r\n  var b01 = a00 * a12 - a02 * a10;\r\n  var b02 = a00 * a13 - a03 * a10;\r\n  var b03 = a01 * a12 - a02 * a11;\r\n  var b04 = a01 * a13 - a03 * a11;\r\n  var b05 = a02 * a13 - a03 * a12;\r\n  var b06 = a20 * a31 - a21 * a30;\r\n  var b07 = a20 * a32 - a22 * a30;\r\n  var b08 = a20 * a33 - a23 * a30;\r\n  var b09 = a21 * a32 - a22 * a31;\r\n  var b10 = a21 * a33 - a23 * a31;\r\n  var b11 = a22 * a33 - a23 * a32;\r\n\r\n  // Calculate the determinant\r\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n}\r\n\r\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var a00 = a[0],\r\n      a01 = a[1],\r\n      a02 = a[2],\r\n      a03 = a[3];\r\n  var a10 = a[4],\r\n      a11 = a[5],\r\n      a12 = a[6],\r\n      a13 = a[7];\r\n  var a20 = a[8],\r\n      a21 = a[9],\r\n      a22 = a[10],\r\n      a23 = a[11];\r\n  var a30 = a[12],\r\n      a31 = a[13],\r\n      a32 = a[14],\r\n      a33 = a[15];\r\n\r\n  // Cache only the current line of the second matrix\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[4];b1 = b[5];b2 = b[6];b3 = b[7];\r\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[8];b1 = b[9];b2 = b[10];b3 = b[11];\r\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n  b0 = b[12];b1 = b[13];b2 = b[14];b3 = b[15];\r\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n\r\n  if (a === out) {\r\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n  } else {\r\n    a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n    a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n    a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n    out[0] = a00;out[1] = a01;out[2] = a02;out[3] = a03;\r\n    out[4] = a10;out[5] = a11;out[6] = a12;out[7] = a13;\r\n    out[8] = a20;out[9] = a21;out[10] = a22;out[11] = a23;\r\n\r\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\r\nexport function scale(out, a, v) {\r\n  var x = v[0],\r\n      y = v[1],\r\n      z = v[2];\r\n\r\n  out[0] = a[0] * x;\r\n  out[1] = a[1] * x;\r\n  out[2] = a[2] * x;\r\n  out[3] = a[3] * x;\r\n  out[4] = a[4] * y;\r\n  out[5] = a[5] * y;\r\n  out[6] = a[6] * y;\r\n  out[7] = a[7] * y;\r\n  out[8] = a[8] * z;\r\n  out[9] = a[9] * z;\r\n  out[10] = a[10] * z;\r\n  out[11] = a[11] * z;\r\n  out[12] = a[12];\r\n  out[13] = a[13];\r\n  out[14] = a[14];\r\n  out[15] = a[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function rotate(out, a, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n  var a00 = void 0,\r\n      a01 = void 0,\r\n      a02 = void 0,\r\n      a03 = void 0;\r\n  var a10 = void 0,\r\n      a11 = void 0,\r\n      a12 = void 0,\r\n      a13 = void 0;\r\n  var a20 = void 0,\r\n      a21 = void 0,\r\n      a22 = void 0,\r\n      a23 = void 0;\r\n  var b00 = void 0,\r\n      b01 = void 0,\r\n      b02 = void 0;\r\n  var b10 = void 0,\r\n      b11 = void 0,\r\n      b12 = void 0;\r\n  var b20 = void 0,\r\n      b21 = void 0,\r\n      b22 = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  a00 = a[0];a01 = a[1];a02 = a[2];a03 = a[3];\r\n  a10 = a[4];a11 = a[5];a12 = a[6];a13 = a[7];\r\n  a20 = a[8];a21 = a[9];a22 = a[10];a23 = a[11];\r\n\r\n  // Construct the elements of the rotation matrix\r\n  b00 = x * x * t + c;b01 = y * x * t + z * s;b02 = z * x * t - y * s;\r\n  b10 = x * y * t - z * s;b11 = y * y * t + c;b12 = z * y * t + x * s;\r\n  b20 = x * z * t + y * s;b21 = y * z * t - x * s;b22 = z * z * t + c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[0] = a[0];\r\n    out[1] = a[1];\r\n    out[2] = a[2];\r\n    out[3] = a[3];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[4] = a10 * c + a20 * s;\r\n  out[5] = a11 * c + a21 * s;\r\n  out[6] = a12 * c + a22 * s;\r\n  out[7] = a13 * c + a23 * s;\r\n  out[8] = a20 * c - a10 * s;\r\n  out[9] = a21 * c - a11 * s;\r\n  out[10] = a22 * c - a12 * s;\r\n  out[11] = a23 * c - a13 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a20 = a[8];\r\n  var a21 = a[9];\r\n  var a22 = a[10];\r\n  var a23 = a[11];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged rows\r\n    out[4] = a[4];\r\n    out[5] = a[5];\r\n    out[6] = a[6];\r\n    out[7] = a[7];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c - a20 * s;\r\n  out[1] = a01 * c - a21 * s;\r\n  out[2] = a02 * c - a22 * s;\r\n  out[3] = a03 * c - a23 * s;\r\n  out[8] = a00 * s + a20 * c;\r\n  out[9] = a01 * s + a21 * c;\r\n  out[10] = a02 * s + a22 * c;\r\n  out[11] = a03 * s + a23 * c;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n  var a00 = a[0];\r\n  var a01 = a[1];\r\n  var a02 = a[2];\r\n  var a03 = a[3];\r\n  var a10 = a[4];\r\n  var a11 = a[5];\r\n  var a12 = a[6];\r\n  var a13 = a[7];\r\n\r\n  if (a !== out) {\r\n    // If the source and destination differ, copy the unchanged last row\r\n    out[8] = a[8];\r\n    out[9] = a[9];\r\n    out[10] = a[10];\r\n    out[11] = a[11];\r\n    out[12] = a[12];\r\n    out[13] = a[13];\r\n    out[14] = a[14];\r\n    out[15] = a[15];\r\n  }\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = a00 * c + a10 * s;\r\n  out[1] = a01 * c + a11 * s;\r\n  out[2] = a02 * c + a12 * s;\r\n  out[3] = a03 * c + a13 * s;\r\n  out[4] = a10 * c - a00 * s;\r\n  out[5] = a11 * c - a01 * s;\r\n  out[6] = a12 * c - a02 * s;\r\n  out[7] = a13 * c - a03 * s;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromTranslation(out, v) {\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromScaling(out, v) {\r\n  out[0] = v[0];\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = v[1];\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = v[2];\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotation(out, rad, axis) {\r\n  var x = axis[0],\r\n      y = axis[1],\r\n      z = axis[2];\r\n  var len = Math.sqrt(x * x + y * y + z * z);\r\n  var s = void 0,\r\n      c = void 0,\r\n      t = void 0;\r\n\r\n  if (len < glMatrix.EPSILON) {\r\n    return null;\r\n  }\r\n\r\n  len = 1 / len;\r\n  x *= len;\r\n  y *= len;\r\n  z *= len;\r\n\r\n  s = Math.sin(rad);\r\n  c = Math.cos(rad);\r\n  t = 1 - c;\r\n\r\n  // Perform rotation-specific matrix multiplication\r\n  out[0] = x * x * t + c;\r\n  out[1] = y * x * t + z * s;\r\n  out[2] = z * x * t - y * s;\r\n  out[3] = 0;\r\n  out[4] = x * y * t - z * s;\r\n  out[5] = y * y * t + c;\r\n  out[6] = z * y * t + x * s;\r\n  out[7] = 0;\r\n  out[8] = x * z * t + y * s;\r\n  out[9] = y * z * t - x * s;\r\n  out[10] = z * z * t + c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromXRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = 1;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = c;\r\n  out[6] = s;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = -s;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromYRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = 0;\r\n  out[2] = -s;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = 1;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = s;\r\n  out[9] = 0;\r\n  out[10] = c;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\r\nexport function fromZRotation(out, rad) {\r\n  var s = Math.sin(rad);\r\n  var c = Math.cos(rad);\r\n\r\n  // Perform axis-specific matrix multiplication\r\n  out[0] = c;\r\n  out[1] = s;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = -s;\r\n  out[5] = c;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 1;\r\n  out[11] = 0;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslation(out, q, v) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - (yy + zz);\r\n  out[1] = xy + wz;\r\n  out[2] = xz - wy;\r\n  out[3] = 0;\r\n  out[4] = xy - wz;\r\n  out[5] = 1 - (xx + zz);\r\n  out[6] = yz + wx;\r\n  out[7] = 0;\r\n  out[8] = xz + wy;\r\n  out[9] = yz - wx;\r\n  out[10] = 1 - (xx + yy);\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\r\nexport function fromQuat2(out, a) {\r\n  var translation = new glMatrix.ARRAY_TYPE(3);\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n\r\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw;\r\n  //Only scale if it makes sense\r\n  if (magnitude > 0) {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\r\n  } else {\r\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  }\r\n  fromRotationTranslation(out, a, translation);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getTranslation(out, mat) {\r\n  out[0] = mat[12];\r\n  out[1] = mat[13];\r\n  out[2] = mat[14];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\r\nexport function getScaling(out, mat) {\r\n  var m11 = mat[0];\r\n  var m12 = mat[1];\r\n  var m13 = mat[2];\r\n  var m21 = mat[4];\r\n  var m22 = mat[5];\r\n  var m23 = mat[6];\r\n  var m31 = mat[8];\r\n  var m32 = mat[9];\r\n  var m33 = mat[10];\r\n\r\n  out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\r\n  out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\r\n  out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\r\nexport function getRotation(out, mat) {\r\n  // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n  var trace = mat[0] + mat[5] + mat[10];\r\n  var S = 0;\r\n\r\n  if (trace > 0) {\r\n    S = Math.sqrt(trace + 1.0) * 2;\r\n    out[3] = 0.25 * S;\r\n    out[0] = (mat[6] - mat[9]) / S;\r\n    out[1] = (mat[8] - mat[2]) / S;\r\n    out[2] = (mat[1] - mat[4]) / S;\r\n  } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\r\n    out[3] = (mat[6] - mat[9]) / S;\r\n    out[0] = 0.25 * S;\r\n    out[1] = (mat[1] + mat[4]) / S;\r\n    out[2] = (mat[8] + mat[2]) / S;\r\n  } else if (mat[5] > mat[10]) {\r\n    S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\r\n    out[3] = (mat[8] - mat[2]) / S;\r\n    out[0] = (mat[1] + mat[4]) / S;\r\n    out[1] = 0.25 * S;\r\n    out[2] = (mat[6] + mat[9]) / S;\r\n  } else {\r\n    S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\r\n    out[3] = (mat[1] - mat[4]) / S;\r\n    out[0] = (mat[8] + mat[2]) / S;\r\n    out[1] = (mat[6] + mat[9]) / S;\r\n    out[2] = 0.25 * S;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScale(out, q, v, s) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  out[0] = (1 - (yy + zz)) * sx;\r\n  out[1] = (xy + wz) * sx;\r\n  out[2] = (xz - wy) * sx;\r\n  out[3] = 0;\r\n  out[4] = (xy - wz) * sy;\r\n  out[5] = (1 - (xx + zz)) * sy;\r\n  out[6] = (yz + wx) * sy;\r\n  out[7] = 0;\r\n  out[8] = (xz + wy) * sz;\r\n  out[9] = (yz - wx) * sz;\r\n  out[10] = (1 - (xx + yy)) * sz;\r\n  out[11] = 0;\r\n  out[12] = v[0];\r\n  out[13] = v[1];\r\n  out[14] = v[2];\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\r\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\r\n  // Quaternion math\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var xy = x * y2;\r\n  var xz = x * z2;\r\n  var yy = y * y2;\r\n  var yz = y * z2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  var sx = s[0];\r\n  var sy = s[1];\r\n  var sz = s[2];\r\n\r\n  var ox = o[0];\r\n  var oy = o[1];\r\n  var oz = o[2];\r\n\r\n  var out0 = (1 - (yy + zz)) * sx;\r\n  var out1 = (xy + wz) * sx;\r\n  var out2 = (xz - wy) * sx;\r\n  var out4 = (xy - wz) * sy;\r\n  var out5 = (1 - (xx + zz)) * sy;\r\n  var out6 = (yz + wx) * sy;\r\n  var out8 = (xz + wy) * sz;\r\n  var out9 = (yz - wx) * sz;\r\n  var out10 = (1 - (xx + yy)) * sz;\r\n\r\n  out[0] = out0;\r\n  out[1] = out1;\r\n  out[2] = out2;\r\n  out[3] = 0;\r\n  out[4] = out4;\r\n  out[5] = out5;\r\n  out[6] = out6;\r\n  out[7] = 0;\r\n  out[8] = out8;\r\n  out[9] = out9;\r\n  out[10] = out10;\r\n  out[11] = 0;\r\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\r\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\r\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\r\nexport function fromQuat(out, q) {\r\n  var x = q[0],\r\n      y = q[1],\r\n      z = q[2],\r\n      w = q[3];\r\n  var x2 = x + x;\r\n  var y2 = y + y;\r\n  var z2 = z + z;\r\n\r\n  var xx = x * x2;\r\n  var yx = y * x2;\r\n  var yy = y * y2;\r\n  var zx = z * x2;\r\n  var zy = z * y2;\r\n  var zz = z * z2;\r\n  var wx = w * x2;\r\n  var wy = w * y2;\r\n  var wz = w * z2;\r\n\r\n  out[0] = 1 - yy - zz;\r\n  out[1] = yx + wz;\r\n  out[2] = zx - wy;\r\n  out[3] = 0;\r\n\r\n  out[4] = yx - wz;\r\n  out[5] = 1 - xx - zz;\r\n  out[6] = zy + wx;\r\n  out[7] = 0;\r\n\r\n  out[8] = zx + wy;\r\n  out[9] = zy - wx;\r\n  out[10] = 1 - xx - yy;\r\n  out[11] = 0;\r\n\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = 0;\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function frustum(out, left, right, bottom, top, near, far) {\r\n  var rl = 1 / (right - left);\r\n  var tb = 1 / (top - bottom);\r\n  var nf = 1 / (near - far);\r\n  out[0] = near * 2 * rl;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = near * 2 * tb;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = (right + left) * rl;\r\n  out[9] = (top + bottom) * tb;\r\n  out[10] = (far + near) * nf;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[14] = far * near * 2 * nf;\r\n  out[15] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\r\nexport function perspective(out, fovy, aspect, near, far) {\r\n  var f = 1.0 / Math.tan(fovy / 2),\r\n      nf = void 0;\r\n  out[0] = f / aspect;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = f;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[11] = -1;\r\n  out[12] = 0;\r\n  out[13] = 0;\r\n  out[15] = 0;\r\n  if (far != null && far !== Infinity) {\r\n    nf = 1 / (near - far);\r\n    out[10] = (far + near) * nf;\r\n    out[14] = 2 * far * near * nf;\r\n  } else {\r\n    out[10] = -1;\r\n    out[14] = -2 * near;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\r\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\r\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\r\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\r\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\r\n  var xScale = 2.0 / (leftTan + rightTan);\r\n  var yScale = 2.0 / (upTan + downTan);\r\n\r\n  out[0] = xScale;\r\n  out[1] = 0.0;\r\n  out[2] = 0.0;\r\n  out[3] = 0.0;\r\n  out[4] = 0.0;\r\n  out[5] = yScale;\r\n  out[6] = 0.0;\r\n  out[7] = 0.0;\r\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\r\n  out[9] = (upTan - downTan) * yScale * 0.5;\r\n  out[10] = far / (near - far);\r\n  out[11] = -1.0;\r\n  out[12] = 0.0;\r\n  out[13] = 0.0;\r\n  out[14] = far * near / (near - far);\r\n  out[15] = 0.0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\r\nexport function ortho(out, left, right, bottom, top, near, far) {\r\n  var lr = 1 / (left - right);\r\n  var bt = 1 / (bottom - top);\r\n  var nf = 1 / (near - far);\r\n  out[0] = -2 * lr;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 0;\r\n  out[4] = 0;\r\n  out[5] = -2 * bt;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  out[8] = 0;\r\n  out[9] = 0;\r\n  out[10] = 2 * nf;\r\n  out[11] = 0;\r\n  out[12] = (left + right) * lr;\r\n  out[13] = (top + bottom) * bt;\r\n  out[14] = (far + near) * nf;\r\n  out[15] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function lookAt(out, eye, center, up) {\r\n  var x0 = void 0,\r\n      x1 = void 0,\r\n      x2 = void 0,\r\n      y0 = void 0,\r\n      y1 = void 0,\r\n      y2 = void 0,\r\n      z0 = void 0,\r\n      z1 = void 0,\r\n      z2 = void 0,\r\n      len = void 0;\r\n  var eyex = eye[0];\r\n  var eyey = eye[1];\r\n  var eyez = eye[2];\r\n  var upx = up[0];\r\n  var upy = up[1];\r\n  var upz = up[2];\r\n  var centerx = center[0];\r\n  var centery = center[1];\r\n  var centerz = center[2];\r\n\r\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\r\n    return identity(out);\r\n  }\r\n\r\n  z0 = eyex - centerx;\r\n  z1 = eyey - centery;\r\n  z2 = eyez - centerz;\r\n\r\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n  z0 *= len;\r\n  z1 *= len;\r\n  z2 *= len;\r\n\r\n  x0 = upy * z2 - upz * z1;\r\n  x1 = upz * z0 - upx * z2;\r\n  x2 = upx * z1 - upy * z0;\r\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n  if (!len) {\r\n    x0 = 0;\r\n    x1 = 0;\r\n    x2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  y0 = z1 * x2 - z2 * x1;\r\n  y1 = z2 * x0 - z0 * x2;\r\n  y2 = z0 * x1 - z1 * x0;\r\n\r\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n  if (!len) {\r\n    y0 = 0;\r\n    y1 = 0;\r\n    y2 = 0;\r\n  } else {\r\n    len = 1 / len;\r\n    y0 *= len;\r\n    y1 *= len;\r\n    y2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = y0;\r\n  out[2] = z0;\r\n  out[3] = 0;\r\n  out[4] = x1;\r\n  out[5] = y1;\r\n  out[6] = z1;\r\n  out[7] = 0;\r\n  out[8] = x2;\r\n  out[9] = y2;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n  out[15] = 1;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\r\nexport function targetTo(out, eye, target, up) {\r\n  var eyex = eye[0],\r\n      eyey = eye[1],\r\n      eyez = eye[2],\r\n      upx = up[0],\r\n      upy = up[1],\r\n      upz = up[2];\r\n\r\n  var z0 = eyex - target[0],\r\n      z1 = eyey - target[1],\r\n      z2 = eyez - target[2];\r\n\r\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    z0 *= len;\r\n    z1 *= len;\r\n    z2 *= len;\r\n  }\r\n\r\n  var x0 = upy * z2 - upz * z1,\r\n      x1 = upz * z0 - upx * z2,\r\n      x2 = upx * z1 - upy * z0;\r\n\r\n  len = x0 * x0 + x1 * x1 + x2 * x2;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    x0 *= len;\r\n    x1 *= len;\r\n    x2 *= len;\r\n  }\r\n\r\n  out[0] = x0;\r\n  out[1] = x1;\r\n  out[2] = x2;\r\n  out[3] = 0;\r\n  out[4] = z1 * x2 - z2 * x1;\r\n  out[5] = z2 * x0 - z0 * x2;\r\n  out[6] = z0 * x1 - z1 * x0;\r\n  out[7] = 0;\r\n  out[8] = z0;\r\n  out[9] = z1;\r\n  out[10] = z2;\r\n  out[11] = 0;\r\n  out[12] = eyex;\r\n  out[13] = eyey;\r\n  out[14] = eyez;\r\n  out[15] = 1;\r\n  return out;\r\n};\r\n\r\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\r\nexport function str(a) {\r\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\r\n}\r\n\r\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\r\nexport function frob(a) {\r\n  return Math.sqrt(Math.pow(a[0], 2) + Math.pow(a[1], 2) + Math.pow(a[2], 2) + Math.pow(a[3], 2) + Math.pow(a[4], 2) + Math.pow(a[5], 2) + Math.pow(a[6], 2) + Math.pow(a[7], 2) + Math.pow(a[8], 2) + Math.pow(a[9], 2) + Math.pow(a[10], 2) + Math.pow(a[11], 2) + Math.pow(a[12], 2) + Math.pow(a[13], 2) + Math.pow(a[14], 2) + Math.pow(a[15], 2));\r\n}\r\n\r\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  out[8] = a[8] + b[8];\r\n  out[9] = a[9] + b[9];\r\n  out[10] = a[10] + b[10];\r\n  out[11] = a[11] + b[11];\r\n  out[12] = a[12] + b[12];\r\n  out[13] = a[13] + b[13];\r\n  out[14] = a[14] + b[14];\r\n  out[15] = a[15] + b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  out[4] = a[4] - b[4];\r\n  out[5] = a[5] - b[5];\r\n  out[6] = a[6] - b[6];\r\n  out[7] = a[7] - b[7];\r\n  out[8] = a[8] - b[8];\r\n  out[9] = a[9] - b[9];\r\n  out[10] = a[10] - b[10];\r\n  out[11] = a[11] - b[11];\r\n  out[12] = a[12] - b[12];\r\n  out[13] = a[13] - b[13];\r\n  out[14] = a[14] - b[14];\r\n  out[15] = a[15] - b[15];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalar(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  out[8] = a[8] * b;\r\n  out[9] = a[9] * b;\r\n  out[10] = a[10] * b;\r\n  out[11] = a[11] * b;\r\n  out[12] = a[12] * b;\r\n  out[13] = a[13] * b;\r\n  out[14] = a[14] * b;\r\n  out[15] = a[15] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\r\nexport function multiplyScalarAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  out[4] = a[4] + b[4] * scale;\r\n  out[5] = a[5] + b[5] * scale;\r\n  out[6] = a[6] + b[6] * scale;\r\n  out[7] = a[7] + b[7] * scale;\r\n  out[8] = a[8] + b[8] * scale;\r\n  out[9] = a[9] + b[9] * scale;\r\n  out[10] = a[10] + b[10] * scale;\r\n  out[11] = a[11] + b[11] * scale;\r\n  out[12] = a[12] + b[12] * scale;\r\n  out[13] = a[13] + b[13] * scale;\r\n  out[14] = a[14] + b[14] * scale;\r\n  out[15] = a[15] + b[15] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\r\n}\r\n\r\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var a8 = a[8],\r\n      a9 = a[9],\r\n      a10 = a[10],\r\n      a11 = a[11];\r\n  var a12 = a[12],\r\n      a13 = a[13],\r\n      a14 = a[14],\r\n      a15 = a[15];\r\n\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  var b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  var b8 = b[8],\r\n      b9 = b[9],\r\n      b10 = b[10],\r\n      b11 = b[11];\r\n  var b12 = b[12],\r\n      b13 = b[13],\r\n      b14 = b[14],\r\n      b15 = b[15];\r\n\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\r\n}\r\n\r\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\r\nimport * as mat3 from \"./mat3.js\";\r\nimport * as vec3 from \"./vec3.js\";\r\nimport * as vec4 from \"./vec4.js\";\r\n\r\n/**\r\n * Quaternion\r\n * @module quat\r\n */\r\n\r\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\r\nexport function setAxisAngle(out, axis, rad) {\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  out[0] = s * axis[0];\r\n  out[1] = s * axis[1];\r\n  out[2] = s * axis[2];\r\n  out[3] = Math.cos(rad);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\r\nexport function getAxisAngle(out_axis, q) {\r\n  var rad = Math.acos(q[3]) * 2.0;\r\n  var s = Math.sin(rad / 2.0);\r\n  if (s > glMatrix.EPSILON) {\r\n    out_axis[0] = q[0] / s;\r\n    out_axis[1] = q[1] / s;\r\n    out_axis[2] = q[2] / s;\r\n  } else {\r\n    // If s is zero, return any axis (no rotation - axis does not matter)\r\n    out_axis[0] = 1;\r\n    out_axis[1] = 0;\r\n    out_axis[2] = 0;\r\n  }\r\n  return rad;\r\n}\r\n\r\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + aw * bx;\r\n  out[1] = ay * bw + az * bx;\r\n  out[2] = az * bw - ay * bx;\r\n  out[3] = aw * bw - ax * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var by = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw - az * by;\r\n  out[1] = ay * bw + aw * by;\r\n  out[2] = az * bw + ax * by;\r\n  out[3] = aw * bw - ay * by;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  rad *= 0.5;\r\n\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bz = Math.sin(rad),\r\n      bw = Math.cos(rad);\r\n\r\n  out[0] = ax * bw + ay * bz;\r\n  out[1] = ay * bw - ax * bz;\r\n  out[2] = az * bw + aw * bz;\r\n  out[3] = aw * bw - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\r\nexport function calculateW(out, a) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport function slerp(out, a, b, t) {\r\n  // benchmarks:\r\n  //    http://jsperf.com/quaternion-slerp-implementations\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2],\r\n      bw = b[3];\r\n\r\n  var omega = void 0,\r\n      cosom = void 0,\r\n      sinom = void 0,\r\n      scale0 = void 0,\r\n      scale1 = void 0;\r\n\r\n  // calc cosine\r\n  cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n  // adjust signs (if necessary)\r\n  if (cosom < 0.0) {\r\n    cosom = -cosom;\r\n    bx = -bx;\r\n    by = -by;\r\n    bz = -bz;\r\n    bw = -bw;\r\n  }\r\n  // calculate coefficients\r\n  if (1.0 - cosom > glMatrix.EPSILON) {\r\n    // standard case (slerp)\r\n    omega = Math.acos(cosom);\r\n    sinom = Math.sin(omega);\r\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n    scale1 = Math.sin(t * omega) / sinom;\r\n  } else {\r\n    // \"from\" and \"to\" quaternions are very close\r\n    //  ... so we can do a linear interpolation\r\n    scale0 = 1.0 - t;\r\n    scale1 = t;\r\n  }\r\n  // calculate final values\r\n  out[0] = scale0 * ax + scale1 * bx;\r\n  out[1] = scale0 * ay + scale1 * by;\r\n  out[2] = scale0 * az + scale1 * bz;\r\n  out[3] = scale0 * aw + scale1 * bw;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\r\nexport function random(out) {\r\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\r\n  // TODO: Calling random 3 times is probably not the fastest solution\r\n  var u1 = glMatrix.RANDOM();\r\n  var u2 = glMatrix.RANDOM();\r\n  var u3 = glMatrix.RANDOM();\r\n\r\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\r\n  var sqrtU1 = Math.sqrt(u1);\r\n\r\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\r\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\r\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\r\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\r\nexport function invert(out, a) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n  var invDot = dot ? 1.0 / dot : 0;\r\n\r\n  // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n  out[0] = -a0 * invDot;\r\n  out[1] = -a1 * invDot;\r\n  out[2] = -a2 * invDot;\r\n  out[3] = a3 * invDot;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromMat3(out, m) {\r\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\r\n  // article \"Quaternion Calculus and Fast Animation\".\r\n  var fTrace = m[0] + m[4] + m[8];\r\n  var fRoot = void 0;\r\n\r\n  if (fTrace > 0.0) {\r\n    // |w| > 1/2, may as well choose w > 1/2\r\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\r\n    out[3] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot; // 1/(4w)\r\n    out[0] = (m[5] - m[7]) * fRoot;\r\n    out[1] = (m[6] - m[2]) * fRoot;\r\n    out[2] = (m[1] - m[3]) * fRoot;\r\n  } else {\r\n    // |w| <= 1/2\r\n    var i = 0;\r\n    if (m[4] > m[0]) i = 1;\r\n    if (m[8] > m[i * 3 + i]) i = 2;\r\n    var j = (i + 1) % 3;\r\n    var k = (i + 2) % 3;\r\n\r\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\r\n    out[i] = 0.5 * fRoot;\r\n    fRoot = 0.5 / fRoot;\r\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\r\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\r\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\r\n  }\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport function fromEuler(out, x, y, z) {\r\n  var halfToRad = 0.5 * Math.PI / 180.0;\r\n  x *= halfToRad;\r\n  y *= halfToRad;\r\n  z *= halfToRad;\r\n\r\n  var sx = Math.sin(x);\r\n  var cx = Math.cos(x);\r\n  var sy = Math.sin(y);\r\n  var cy = Math.cos(y);\r\n  var sz = Math.sin(z);\r\n  var cz = Math.cos(z);\r\n\r\n  out[0] = sx * cy * cz - cx * sy * sz;\r\n  out[1] = cx * sy * cz + sx * cy * sz;\r\n  out[2] = cx * cy * sz - sx * sy * cz;\r\n  out[3] = cx * cy * cz + sx * sy * sz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var clone = vec4.clone;\r\n\r\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\r\nexport var fromValues = vec4.fromValues;\r\n\r\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var copy = vec4.copy;\r\n\r\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var set = vec4.set;\r\n\r\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var add = vec4.add;\r\n\r\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var scale = vec4.scale;\r\n\r\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = vec4.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var lerp = vec4.lerp;\r\n\r\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport var length = vec4.length;\r\n\r\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = vec4.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\r\nexport var normalize = vec4.normalize;\r\n\r\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var exactEquals = vec4.exactEquals;\r\n\r\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport var equals = vec4.equals;\r\n\r\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\r\nexport var rotationTo = function () {\r\n  var tmpvec3 = vec3.create();\r\n  var xUnitVec3 = vec3.fromValues(1, 0, 0);\r\n  var yUnitVec3 = vec3.fromValues(0, 1, 0);\r\n\r\n  return function (out, a, b) {\r\n    var dot = vec3.dot(a, b);\r\n    if (dot < -0.999999) {\r\n      vec3.cross(tmpvec3, xUnitVec3, a);\r\n      if (vec3.len(tmpvec3) < 0.000001) vec3.cross(tmpvec3, yUnitVec3, a);\r\n      vec3.normalize(tmpvec3, tmpvec3);\r\n      setAxisAngle(out, tmpvec3, Math.PI);\r\n      return out;\r\n    } else if (dot > 0.999999) {\r\n      out[0] = 0;\r\n      out[1] = 0;\r\n      out[2] = 0;\r\n      out[3] = 1;\r\n      return out;\r\n    } else {\r\n      vec3.cross(tmpvec3, a, b);\r\n      out[0] = tmpvec3[0];\r\n      out[1] = tmpvec3[1];\r\n      out[2] = tmpvec3[2];\r\n      out[3] = 1 + dot;\r\n      return normalize(out, out);\r\n    }\r\n  };\r\n}();\r\n\r\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\r\nexport var sqlerp = function () {\r\n  var temp1 = create();\r\n  var temp2 = create();\r\n\r\n  return function (out, a, b, c, d, t) {\r\n    slerp(temp1, a, d, t);\r\n    slerp(temp2, b, c, t);\r\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\r\n\r\n    return out;\r\n  };\r\n}();\r\n\r\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\r\nexport var setAxes = function () {\r\n  var matr = mat3.create();\r\n\r\n  return function (out, view, right, up) {\r\n    matr[0] = right[0];\r\n    matr[3] = right[1];\r\n    matr[6] = right[2];\r\n\r\n    matr[1] = up[0];\r\n    matr[4] = up[1];\r\n    matr[7] = up[2];\r\n\r\n    matr[2] = -view[0];\r\n    matr[5] = -view[1];\r\n    matr[8] = -view[2];\r\n\r\n    return normalize(out, fromMat3(out, matr));\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\nimport * as quat from \"./quat.js\";\r\nimport * as mat4 from \"./mat4.js\";\r\n\r\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\r\n\r\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\r\nexport function create() {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    dq[0] = 0;\r\n    dq[1] = 0;\r\n    dq[2] = 0;\r\n    dq[4] = 0;\r\n    dq[5] = 0;\r\n    dq[6] = 0;\r\n    dq[7] = 0;\r\n  }\r\n  dq[3] = 1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function clone(a) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = a[0];\r\n  dq[1] = a[1];\r\n  dq[2] = a[2];\r\n  dq[3] = a[3];\r\n  dq[4] = a[4];\r\n  dq[5] = a[5];\r\n  dq[6] = a[6];\r\n  dq[7] = a[7];\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  dq[4] = x2;\r\n  dq[5] = y2;\r\n  dq[6] = z2;\r\n  dq[7] = w2;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\r\nexport function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\r\n  var dq = new glMatrix.ARRAY_TYPE(8);\r\n  dq[0] = x1;\r\n  dq[1] = y1;\r\n  dq[2] = z1;\r\n  dq[3] = w1;\r\n  var ax = x2 * 0.5,\r\n      ay = y2 * 0.5,\r\n      az = z2 * 0.5;\r\n  dq[4] = ax * w1 + ay * z1 - az * y1;\r\n  dq[5] = ay * w1 + az * x1 - ax * z1;\r\n  dq[6] = az * w1 + ax * y1 - ay * x1;\r\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\r\n  return dq;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotationTranslation(out, q, t) {\r\n  var ax = t[0] * 0.5,\r\n      ay = t[1] * 0.5,\r\n      az = t[2] * 0.5,\r\n      bx = q[0],\r\n      by = q[1],\r\n      bz = q[2],\r\n      bw = q[3];\r\n  out[0] = bx;\r\n  out[1] = by;\r\n  out[2] = bz;\r\n  out[3] = bw;\r\n  out[4] = ax * bw + ay * bz - az * by;\r\n  out[5] = ay * bw + az * bx - ax * bz;\r\n  out[6] = az * bw + ax * by - ay * bx;\r\n  out[7] = -ax * bx - ay * by - az * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromTranslation(out, t) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = t[0] * 0.5;\r\n  out[5] = t[1] * 0.5;\r\n  out[6] = t[2] * 0.5;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\r\nexport function fromRotation(out, q) {\r\n  out[0] = q[0];\r\n  out[1] = q[1];\r\n  out[2] = q[2];\r\n  out[3] = q[3];\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\r\nexport function fromMat4(out, a) {\r\n  //TODO Optimize this\r\n  var outer = quat.create();\r\n  mat4.getRotation(outer, a);\r\n  var t = new glMatrix.ARRAY_TYPE(3);\r\n  mat4.getTranslation(t, a);\r\n  fromRotationTranslation(out, outer, t);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  out[4] = a[4];\r\n  out[5] = a[5];\r\n  out[6] = a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\r\nexport function identity(out) {\r\n  out[0] = 0;\r\n  out[1] = 0;\r\n  out[2] = 0;\r\n  out[3] = 1;\r\n  out[4] = 0;\r\n  out[5] = 0;\r\n  out[6] = 0;\r\n  out[7] = 0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\r\n  out[0] = x1;\r\n  out[1] = y1;\r\n  out[2] = z1;\r\n  out[3] = w1;\r\n\r\n  out[4] = x2;\r\n  out[5] = y2;\r\n  out[6] = z2;\r\n  out[7] = w2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\r\nexport var getReal = quat.copy;\r\n\r\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\r\nexport function getDual(out, a) {\r\n  out[0] = a[4];\r\n  out[1] = a[5];\r\n  out[2] = a[6];\r\n  out[3] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport var setReal = quat.copy;\r\n\r\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function setDual(out, q) {\r\n  out[4] = q[0];\r\n  out[5] = q[1];\r\n  out[6] = q[2];\r\n  out[7] = q[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\r\nexport function getTranslation(out, a) {\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3];\r\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\r\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\r\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\r\nexport function translate(out, a, v) {\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3],\r\n      bx1 = v[0] * 0.5,\r\n      by1 = v[1] * 0.5,\r\n      bz1 = v[2] * 0.5,\r\n      ax2 = a[4],\r\n      ay2 = a[5],\r\n      az2 = a[6],\r\n      aw2 = a[7];\r\n  out[0] = ax1;\r\n  out[1] = ay1;\r\n  out[2] = az1;\r\n  out[3] = aw1;\r\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\r\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\r\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\r\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateX(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateX(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateY(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateY(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateZ(out, a, rad) {\r\n  var bx = -a[0],\r\n      by = -a[1],\r\n      bz = -a[2],\r\n      bw = a[3],\r\n      ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7],\r\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\r\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\r\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\r\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\r\n  quat.rotateZ(out, a, rad);\r\n  bx = out[0];\r\n  by = out[1];\r\n  bz = out[2];\r\n  bw = out[3];\r\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatAppend(out, a, q) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      ax = a[0],\r\n      ay = a[1],\r\n      az = a[2],\r\n      aw = a[3];\r\n\r\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  ax = a[4];\r\n  ay = a[5];\r\n  az = a[6];\r\n  aw = a[7];\r\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\r\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\r\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\r\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\r\nexport function rotateByQuatPrepend(out, q, a) {\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3],\r\n      bx = a[0],\r\n      by = a[1],\r\n      bz = a[2],\r\n      bw = a[3];\r\n\r\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  bx = a[4];\r\n  by = a[5];\r\n  bz = a[6];\r\n  bw = a[7];\r\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\r\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\r\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\r\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\r\nexport function rotateAroundAxis(out, a, axis, rad) {\r\n  //Special case for rad = 0\r\n  if (Math.abs(rad) < glMatrix.EPSILON) {\r\n    return copy(out, a);\r\n  }\r\n  var axisLength = Math.sqrt(axis[0] * axis[0] + axis[1] * axis[1] + axis[2] * axis[2]);\r\n\r\n  rad = rad * 0.5;\r\n  var s = Math.sin(rad);\r\n  var bx = s * axis[0] / axisLength;\r\n  var by = s * axis[1] / axisLength;\r\n  var bz = s * axis[2] / axisLength;\r\n  var bw = Math.cos(rad);\r\n\r\n  var ax1 = a[0],\r\n      ay1 = a[1],\r\n      az1 = a[2],\r\n      aw1 = a[3];\r\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\r\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\r\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\r\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\r\n\r\n  var ax = a[4],\r\n      ay = a[5],\r\n      az = a[6],\r\n      aw = a[7];\r\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\r\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\r\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\r\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  out[4] = a[4] + b[4];\r\n  out[5] = a[5] + b[5];\r\n  out[6] = a[6] + b[6];\r\n  out[7] = a[7] + b[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  var ax0 = a[0],\r\n      ay0 = a[1],\r\n      az0 = a[2],\r\n      aw0 = a[3],\r\n      bx1 = b[4],\r\n      by1 = b[5],\r\n      bz1 = b[6],\r\n      bw1 = b[7],\r\n      ax1 = a[4],\r\n      ay1 = a[5],\r\n      az1 = a[6],\r\n      aw1 = a[7],\r\n      bx0 = b[0],\r\n      by0 = b[1],\r\n      bz0 = b[2],\r\n      bw0 = b[3];\r\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\r\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\r\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\r\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\r\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\r\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\r\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\r\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  out[4] = a[4] * b;\r\n  out[5] = a[5] * b;\r\n  out[6] = a[6] * b;\r\n  out[7] = a[7] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\r\nexport var dot = quat.dot;\r\n\r\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var mt = 1 - t;\r\n  if (dot(a, b) < 0) t = -t;\r\n\r\n  out[0] = a[0] * mt + b[0] * t;\r\n  out[1] = a[1] * mt + b[1] * t;\r\n  out[2] = a[2] * mt + b[2] * t;\r\n  out[3] = a[3] * mt + b[3] * t;\r\n  out[4] = a[4] * mt + b[4] * t;\r\n  out[5] = a[5] * mt + b[5] * t;\r\n  out[6] = a[6] * mt + b[6] * t;\r\n  out[7] = a[7] * mt + b[7] * t;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\r\nexport function invert(out, a) {\r\n  var sqlen = squaredLength(a);\r\n  out[0] = -a[0] / sqlen;\r\n  out[1] = -a[1] / sqlen;\r\n  out[2] = -a[2] / sqlen;\r\n  out[3] = a[3] / sqlen;\r\n  out[4] = -a[4] / sqlen;\r\n  out[5] = -a[5] / sqlen;\r\n  out[6] = -a[6] / sqlen;\r\n  out[7] = a[7] / sqlen;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\r\nexport function conjugate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = a[3];\r\n  out[4] = -a[4];\r\n  out[5] = -a[5];\r\n  out[6] = -a[6];\r\n  out[7] = a[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\r\nexport var length = quat.length;\r\n\r\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\r\nexport var squaredLength = quat.squaredLength;\r\n\r\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\r\nexport function normalize(out, a) {\r\n  var magnitude = squaredLength(a);\r\n  if (magnitude > 0) {\r\n    magnitude = Math.sqrt(magnitude);\r\n\r\n    var a0 = a[0] / magnitude;\r\n    var a1 = a[1] / magnitude;\r\n    var a2 = a[2] / magnitude;\r\n    var a3 = a[3] / magnitude;\r\n\r\n    var b0 = a[4];\r\n    var b1 = a[5];\r\n    var b2 = a[6];\r\n    var b3 = a[7];\r\n\r\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\r\n\r\n    out[0] = a0;\r\n    out[1] = a1;\r\n    out[2] = a2;\r\n    out[3] = a3;\r\n\r\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\r\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\r\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\r\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\r\nexport function str(a) {\r\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\r\n}\r\n\r\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3],\r\n      a4 = a[4],\r\n      a5 = a[5],\r\n      a6 = a[6],\r\n      a7 = a[7];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3],\r\n      b4 = b[4],\r\n      b5 = b[5],\r\n      b6 = b[6],\r\n      b7 = b[7];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\r\n}","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\r\nexport function fromValues(x, y) {\r\n  var out = new glMatrix.ARRAY_TYPE(2);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\r\nexport function set(out, x, y) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0],\r\n      y = b[1] - a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return Math.sqrt(x * x + y * y);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  return x * x + y * y;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  var len = x * x + y * y;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var z = a[0] * b[1] - a[1] * b[0];\r\n  out[0] = out[1] = 0;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0],\r\n      ay = a[1];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  out[0] = Math.cos(r) * scale;\r\n  out[1] = Math.sin(r) * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y;\r\n  out[1] = m[1] * x + m[3] * y;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat2d(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[2] * y + m[4];\r\n  out[1] = m[1] * x + m[3] * y + m[5];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1];\r\n  out[0] = m[0] * x + m[3] * y + m[6];\r\n  out[1] = m[1] * x + m[4] * y + m[7];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  out[0] = m[0] * x + m[4] * y + m[12];\r\n  out[1] = m[1] * x + m[5] * y + m[13];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\r\nexport function rotate(out, a, b, c) {\r\n  //Translate point to the origin\r\n  var p0 = a[0] - b[0],\r\n      p1 = a[1] - b[1],\r\n      sinC = Math.sin(c),\r\n      cosC = Math.cos(c);\r\n\r\n  //perform rotation and translate to correct position\r\n  out[0] = p0 * cosC - p1 * sinC + b[0];\r\n  out[1] = p0 * sinC + p1 * cosC + b[1];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var x1 = a[0],\r\n      y1 = a[1],\r\n      x2 = b[0],\r\n      y2 = b[1];\r\n\r\n  var len1 = x1 * x1 + y1 * y1;\r\n  if (len1 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len1 = 1 / Math.sqrt(len1);\r\n  }\r\n\r\n  var len2 = x2 * x2 + y2 * y2;\r\n  if (len2 > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len2 = 1 / Math.sqrt(len2);\r\n  }\r\n\r\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1];\r\n  var b0 = b[0],\r\n      b1 = b[1];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 2;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\r\nexport function fromValues(x, y, z) {\r\n  var out = new glMatrix.ARRAY_TYPE(3);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\r\nexport function set(out, x, y, z) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return Math.sqrt(x * x + y * y + z * z);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  return x * x + y * y + z * z;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var len = x * x + y * y + z * z;\r\n  if (len > 0) {\r\n    //TODO: evaluate use of glm_invsqrt here?\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = a[0] * len;\r\n    out[1] = a[1] * len;\r\n    out[2] = a[2] * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n}\r\n\r\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\r\nexport function cross(out, a, b) {\r\n  var ax = a[0],\r\n      ay = a[1],\r\n      az = a[2];\r\n  var bx = b[0],\r\n      by = b[1],\r\n      bz = b[2];\r\n\r\n  out[0] = ay * bz - az * by;\r\n  out[1] = az * bx - ax * bz;\r\n  out[2] = ax * by - ay * bx;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function hermite(out, a, b, c, d, t) {\r\n  var factorTimes2 = t * t;\r\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\r\n  var factor2 = factorTimes2 * (t - 2) + t;\r\n  var factor3 = factorTimes2 * (t - 1);\r\n  var factor4 = factorTimes2 * (3 - 2 * t);\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\r\nexport function bezier(out, a, b, c, d, t) {\r\n  var inverseFactor = 1 - t;\r\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\r\n  var factorTimes2 = t * t;\r\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\r\n  var factor2 = 3 * t * inverseFactorTimesTwo;\r\n  var factor3 = 3 * factorTimes2 * inverseFactor;\r\n  var factor4 = factorTimes2 * t;\r\n\r\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\r\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\r\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\r\n\r\n  out[0] = Math.cos(r) * zScale;\r\n  out[1] = Math.sin(r) * zScale;\r\n  out[2] = z * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\r\n  w = w || 1.0;\r\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\r\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\r\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformMat3(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  out[0] = x * m[0] + y * m[3] + z * m[6];\r\n  out[1] = x * m[1] + y * m[4] + z * m[7];\r\n  out[2] = x * m[2] + y * m[5] + z * m[8];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  // var qvec = [qx, qy, qz];\r\n  // var uv = vec3.cross([], qvec, a);\r\n  var uvx = qy * z - qz * y,\r\n      uvy = qz * x - qx * z,\r\n      uvz = qx * y - qy * x;\r\n  // var uuv = vec3.cross([], qvec, uv);\r\n  var uuvx = qy * uvz - qz * uvy,\r\n      uuvy = qz * uvx - qx * uvz,\r\n      uuvz = qx * uvy - qy * uvx;\r\n  // vec3.scale(uv, uv, 2 * w);\r\n  var w2 = qw * 2;\r\n  uvx *= w2;\r\n  uvy *= w2;\r\n  uvz *= w2;\r\n  // vec3.scale(uuv, uuv, 2);\r\n  uuvx *= 2;\r\n  uuvy *= 2;\r\n  uuvz *= 2;\r\n  // return vec3.add(out, a, vec3.add(out, uv, uuv));\r\n  out[0] = x + uvx + uuvx;\r\n  out[1] = y + uvy + uuvy;\r\n  out[2] = z + uvz + uuvz;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateX(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0];\r\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\r\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateY(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\r\n  r[1] = p[1];\r\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\r\nexport function rotateZ(out, a, b, c) {\r\n  var p = [],\r\n      r = [];\r\n  //Translate point to the origin\r\n  p[0] = a[0] - b[0];\r\n  p[1] = a[1] - b[1];\r\n  p[2] = a[2] - b[2];\r\n\r\n  //perform rotation\r\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\r\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\r\n  r[2] = p[2];\r\n\r\n  //translate to correct position\r\n  out[0] = r[0] + b[0];\r\n  out[1] = r[1] + b[1];\r\n  out[2] = r[2] + b[2];\r\n\r\n  return out;\r\n}\r\n\r\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\r\nexport function angle(a, b) {\r\n  var tempA = fromValues(a[0], a[1], a[2]);\r\n  var tempB = fromValues(b[0], b[1], b[2]);\r\n\r\n  normalize(tempA, tempA);\r\n  normalize(tempB, tempB);\r\n\r\n  var cosine = dot(tempA, tempB);\r\n\r\n  if (cosine > 1.0) {\r\n    return 0;\r\n  } else if (cosine < -1.0) {\r\n    return Math.PI;\r\n  } else {\r\n    return Math.acos(cosine);\r\n  }\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 3;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","import * as glMatrix from \"./common.js\";\r\n\r\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\r\n\r\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function create() {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function clone(a) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\r\nexport function fromValues(x, y, z, w) {\r\n  var out = new glMatrix.ARRAY_TYPE(4);\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\r\nexport function copy(out, a) {\r\n  out[0] = a[0];\r\n  out[1] = a[1];\r\n  out[2] = a[2];\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\r\nexport function set(out, x, y, z, w) {\r\n  out[0] = x;\r\n  out[1] = y;\r\n  out[2] = z;\r\n  out[3] = w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function add(out, a, b) {\r\n  out[0] = a[0] + b[0];\r\n  out[1] = a[1] + b[1];\r\n  out[2] = a[2] + b[2];\r\n  out[3] = a[3] + b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function subtract(out, a, b) {\r\n  out[0] = a[0] - b[0];\r\n  out[1] = a[1] - b[1];\r\n  out[2] = a[2] - b[2];\r\n  out[3] = a[3] - b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function multiply(out, a, b) {\r\n  out[0] = a[0] * b[0];\r\n  out[1] = a[1] * b[1];\r\n  out[2] = a[2] * b[2];\r\n  out[3] = a[3] * b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function divide(out, a, b) {\r\n  out[0] = a[0] / b[0];\r\n  out[1] = a[1] / b[1];\r\n  out[2] = a[2] / b[2];\r\n  out[3] = a[3] / b[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\r\nexport function ceil(out, a) {\r\n  out[0] = Math.ceil(a[0]);\r\n  out[1] = Math.ceil(a[1]);\r\n  out[2] = Math.ceil(a[2]);\r\n  out[3] = Math.ceil(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\r\nexport function floor(out, a) {\r\n  out[0] = Math.floor(a[0]);\r\n  out[1] = Math.floor(a[1]);\r\n  out[2] = Math.floor(a[2]);\r\n  out[3] = Math.floor(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function min(out, a, b) {\r\n  out[0] = Math.min(a[0], b[0]);\r\n  out[1] = Math.min(a[1], b[1]);\r\n  out[2] = Math.min(a[2], b[2]);\r\n  out[3] = Math.min(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\r\nexport function max(out, a, b) {\r\n  out[0] = Math.max(a[0], b[0]);\r\n  out[1] = Math.max(a[1], b[1]);\r\n  out[2] = Math.max(a[2], b[2]);\r\n  out[3] = Math.max(a[3], b[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\r\nexport function round(out, a) {\r\n  out[0] = Math.round(a[0]);\r\n  out[1] = Math.round(a[1]);\r\n  out[2] = Math.round(a[2]);\r\n  out[3] = Math.round(a[3]);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\r\nexport function scale(out, a, b) {\r\n  out[0] = a[0] * b;\r\n  out[1] = a[1] * b;\r\n  out[2] = a[2] * b;\r\n  out[3] = a[3] * b;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\r\nexport function scaleAndAdd(out, a, b, scale) {\r\n  out[0] = a[0] + b[0] * scale;\r\n  out[1] = a[1] + b[1] * scale;\r\n  out[2] = a[2] + b[2] * scale;\r\n  out[3] = a[3] + b[3] * scale;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\r\nexport function distance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\r\nexport function squaredDistance(a, b) {\r\n  var x = b[0] - a[0];\r\n  var y = b[1] - a[1];\r\n  var z = b[2] - a[2];\r\n  var w = b[3] - a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\r\nexport function length(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return Math.sqrt(x * x + y * y + z * z + w * w);\r\n}\r\n\r\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\r\nexport function squaredLength(a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  return x * x + y * y + z * z + w * w;\r\n}\r\n\r\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\r\nexport function negate(out, a) {\r\n  out[0] = -a[0];\r\n  out[1] = -a[1];\r\n  out[2] = -a[2];\r\n  out[3] = -a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\r\nexport function inverse(out, a) {\r\n  out[0] = 1.0 / a[0];\r\n  out[1] = 1.0 / a[1];\r\n  out[2] = 1.0 / a[2];\r\n  out[3] = 1.0 / a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\r\nexport function normalize(out, a) {\r\n  var x = a[0];\r\n  var y = a[1];\r\n  var z = a[2];\r\n  var w = a[3];\r\n  var len = x * x + y * y + z * z + w * w;\r\n  if (len > 0) {\r\n    len = 1 / Math.sqrt(len);\r\n    out[0] = x * len;\r\n    out[1] = y * len;\r\n    out[2] = z * len;\r\n    out[3] = w * len;\r\n  }\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\r\nexport function dot(a, b) {\r\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n}\r\n\r\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\r\nexport function lerp(out, a, b, t) {\r\n  var ax = a[0];\r\n  var ay = a[1];\r\n  var az = a[2];\r\n  var aw = a[3];\r\n  out[0] = ax + t * (b[0] - ax);\r\n  out[1] = ay + t * (b[1] - ay);\r\n  out[2] = az + t * (b[2] - az);\r\n  out[3] = aw + t * (b[3] - aw);\r\n  return out;\r\n}\r\n\r\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\r\nexport function random(out, scale) {\r\n  scale = scale || 1.0;\r\n\r\n  // Marsaglia, George. Choosing a Point from the Surface of a\r\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\r\n  // http://projecteuclid.org/euclid.aoms/1177692644;\r\n  var v1, v2, v3, v4;\r\n  var s1, s2;\r\n  do {\r\n    v1 = glMatrix.RANDOM() * 2 - 1;\r\n    v2 = glMatrix.RANDOM() * 2 - 1;\r\n    s1 = v1 * v1 + v2 * v2;\r\n  } while (s1 >= 1);\r\n  do {\r\n    v3 = glMatrix.RANDOM() * 2 - 1;\r\n    v4 = glMatrix.RANDOM() * 2 - 1;\r\n    s2 = v3 * v3 + v4 * v4;\r\n  } while (s2 >= 1);\r\n\r\n  var d = Math.sqrt((1 - s1) / s2);\r\n  out[0] = scale * v1;\r\n  out[1] = scale * v2;\r\n  out[2] = scale * v3 * d;\r\n  out[3] = scale * v4 * d;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformMat4(out, a, m) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2],\r\n      w = a[3];\r\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\r\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\r\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\r\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\r\nexport function transformQuat(out, a, q) {\r\n  var x = a[0],\r\n      y = a[1],\r\n      z = a[2];\r\n  var qx = q[0],\r\n      qy = q[1],\r\n      qz = q[2],\r\n      qw = q[3];\r\n\r\n  // calculate quat * vec\r\n  var ix = qw * x + qy * z - qz * y;\r\n  var iy = qw * y + qz * x - qx * z;\r\n  var iz = qw * z + qx * y - qy * x;\r\n  var iw = -qx * x - qy * y - qz * z;\r\n\r\n  // calculate result * inverse quat\r\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n  out[3] = a[3];\r\n  return out;\r\n}\r\n\r\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\r\nexport function str(a) {\r\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function exactEquals(a, b) {\r\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n}\r\n\r\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\r\nexport function equals(a, b) {\r\n  var a0 = a[0],\r\n      a1 = a[1],\r\n      a2 = a[2],\r\n      a3 = a[3];\r\n  var b0 = b[0],\r\n      b1 = b[1],\r\n      b2 = b[2],\r\n      b3 = b[3];\r\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n}\r\n\r\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\r\nexport var sub = subtract;\r\n\r\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\r\nexport var mul = multiply;\r\n\r\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\r\nexport var div = divide;\r\n\r\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\r\nexport var dist = distance;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\r\nexport var sqrDist = squaredDistance;\r\n\r\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\r\nexport var len = length;\r\n\r\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\r\nexport var sqrLen = squaredLength;\r\n\r\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\r\nexport var forEach = function () {\r\n  var vec = create();\r\n\r\n  return function (a, stride, offset, count, fn, arg) {\r\n    var i = void 0,\r\n        l = void 0;\r\n    if (!stride) {\r\n      stride = 4;\r\n    }\r\n\r\n    if (!offset) {\r\n      offset = 0;\r\n    }\r\n\r\n    if (count) {\r\n      l = Math.min(count * stride + offset, a.length);\r\n    } else {\r\n      l = a.length;\r\n    }\r\n\r\n    for (i = offset; i < l; i += stride) {\r\n      vec[0] = a[i];vec[1] = a[i + 1];vec[2] = a[i + 2];vec[3] = a[i + 3];\r\n      fn(vec, vec, arg);\r\n      a[i] = vec[0];a[i + 1] = vec[1];a[i + 2] = vec[2];a[i + 3] = vec[3];\r\n    }\r\n\r\n    return a;\r\n  };\r\n}();","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import {quat, vec3} from \"gl-matrix\";\r\nimport {Ray} from \"./renderer/Ray\";\r\nimport gen from \"./renderer/SoftwareRenderer\";\r\n\r\nlet temp_quat = quat.create();\r\nconst SPEED: number = 5.0;\r\nconst SENSITIVITY: number = 0.005;\r\n\r\nexport enum Camera_Movement {\r\n    FORWARD,\r\n    BACKWARD,\r\n    LEFT,\r\n    RIGHT,\r\n    UP,\r\n}\r\n\r\nexport class Camera {\r\n    public lower_left_corner: vec3 = vec3.create();\r\n    public screen_horizontal: vec3 = vec3.create();\r\n    public screen_vertical: vec3 = vec3.create();\r\n    public half_width: number;\r\n    public half_height: number;\r\n\r\n    public position: vec3 = vec3.create();\r\n    public front: vec3 = vec3.create();\r\n    private right: vec3 = vec3.create();\r\n    private up: vec3 = vec3.create();\r\n    public readonly lens_radius: number;\r\n    private readonly focus_dist: number;\r\n\r\n    private world_up: vec3 = vec3.fromValues(0, 1, 0);\r\n    private world_right: vec3 = vec3.fromValues(1, 0, 0);\r\n\r\n    private pitch: number;\r\n    private heading: number;\r\n\r\n    private orientation: quat = quat.create();\r\n\r\n    private temp: vec3 = vec3.create();\r\n    private temp2: vec3 = vec3.create();\r\n\r\n    constructor(eye: vec3, target: vec3, up: vec3, vFov: number, aspect: number, aperture: number, focus_dist: number) {\r\n        this.lens_radius = aperture / 2;\r\n        this.focus_dist = focus_dist;\r\n        //conver to radians\r\n        let theta = (vFov * Math.PI) / 180.0;\r\n        this.half_height = Math.tan(theta / 2);\r\n        this.half_width = aspect * this.half_height;\r\n\r\n        vec3.copy(this.position, eye);\r\n        \r\n        let target_to_eye = vec3.sub(vec3.create(),eye,target);\r\n        vec3.normalize(target_to_eye,target_to_eye);\r\n        this.pitch = Math.asin(target_to_eye[1]);\r\n        this.heading = -Math.atan2(target_to_eye[0], target_to_eye[2] ) ;\r\n\r\n        this.calculateOrientation();\r\n    }\r\n\r\n    getRay(ray: Ray, u: number, v: number): Ray {\r\n        let rand = this.temp2;\r\n        let offset = this.temp;\r\n\r\n        vec3.scale(rand, randomInUnitDisk(rand), this.lens_radius);\r\n\r\n        for (let i = 0; i < 3; i++)\r\n            offset[i] = this.screen_horizontal[i] * rand[0] + this.screen_vertical[i] * rand[1];\r\n        \r\n        vec3.add(ray.origin, this.position, offset);\r\n\r\n        //for x,y,z\r\n        for (let i = 0; i < 3; i++)\r\n            ray.direction[i] =\r\n                this.lower_left_corner[i] +\r\n                u * this.screen_horizontal[i] +\r\n                v * this.screen_vertical[i] -\r\n                this.position[i] -\r\n                offset[i];\r\n\r\n        return ray;\r\n    }\r\n\r\n    public getRight(out: vec3): vec3 {\r\n        quat.conjugate(temp_quat, this.orientation);\r\n        vec3.set(out, 1, 0, 0);\r\n        vec3.transformQuat(out, out, temp_quat);\r\n        return out;\r\n    }\r\n\r\n    public getForward(out: vec3): vec3 {\r\n        quat.conjugate(temp_quat, this.orientation);\r\n        vec3.set(out, 0, 0, -1);\r\n        vec3.transformQuat(out, out, temp_quat);\r\n        return out;\r\n    }\r\n\r\n    public getUp(out: vec3): vec3 {\r\n        quat.conjugate(temp_quat, this.orientation);\r\n        vec3.set(out, 0, 1, 0);\r\n        vec3.transformQuat(out, out, temp_quat);\r\n        return out;\r\n    }\r\n\r\n    public lookAt(target: vec3): void {\r\n        vec3.sub(this.front, target, this.position);\r\n        vec3.normalize(this.front, this.front);\r\n        this.pitch = -Math.asin(this.front[1]);\r\n        this.heading = -(Math.atan2(this.front[0], this.front[2]) - Math.PI);\r\n\r\n        this.calculateOrientation();\r\n    }\r\n\r\n    public processKeyboard(direction: Camera_Movement, deltaTime: number): void {\r\n        let velocity: number = SPEED * deltaTime;\r\n\r\n        this.getForward(this.front);\r\n        this.getRight(this.right);\r\n\r\n        if (direction == Camera_Movement.FORWARD) {\r\n            vec3.scaleAndAdd(this.position, this.position, this.front, velocity);\r\n        } else if (direction == Camera_Movement.BACKWARD) {\r\n            vec3.scaleAndAdd(this.position, this.position, this.front, -velocity);\r\n        } else if (direction == Camera_Movement.LEFT) {\r\n            vec3.scaleAndAdd(this.position, this.position, this.right, -velocity);\r\n        } else if (direction == Camera_Movement.RIGHT) {\r\n            vec3.scaleAndAdd(this.position, this.position, this.right, velocity);\r\n        } else if (direction == Camera_Movement.UP) {\r\n            vec3.scaleAndAdd(this.position, this.position, this.world_up, velocity);\r\n        }\r\n        \r\n        this.calculateOrientation();\r\n    }\r\n\r\n    public processMouseMovement(xOffset: number, yOffset: number, constrainPitch: boolean = true): void {\r\n        if (xOffset === 0 && yOffset === 0) return;\r\n\r\n        xOffset *= SENSITIVITY;\r\n        yOffset *= SENSITIVITY;\r\n\r\n        this.heading += xOffset;\r\n        if (this.heading > 2 * Math.PI) this.heading -= 2 * Math.PI;\r\n        if (this.heading < 0) this.heading += 2 * Math.PI;\r\n\r\n        this.pitch += yOffset;\r\n        if (this.pitch > Math.PI) this.pitch -= 2 * Math.PI;\r\n        if (this.pitch < -Math.PI) this.pitch += 2 * Math.PI;\r\n\r\n        if (constrainPitch) {\r\n            if (this.pitch > Math.PI / 2) this.pitch = Math.PI / 2;\r\n            if (this.pitch < -Math.PI / 2) this.pitch = -Math.PI / 2;\r\n        }\r\n\r\n        this.calculateOrientation();\r\n    }\r\n\r\n    private calculateOrientation(): void {\r\n        let pitch_quat = quat.setAxisAngle(quat.create(), this.world_right, this.pitch);\r\n        let heading_quat = quat.setAxisAngle(quat.create(), this.world_up, this.heading);\r\n\r\n        quat.identity(this.orientation);\r\n        quat.mul(this.orientation, this.orientation, pitch_quat);\r\n        quat.mul(this.orientation, this.orientation, heading_quat);\r\n\r\n        this.getForward(this.front);\r\n        this.getRight(this.right);\r\n        this.getUp(this.up);\r\n\r\n        //For x,y,z\r\n        //code is cleaner this way\r\n        for (let i = 0; i < 3; i++)\r\n            this.lower_left_corner[i] =\r\n                this.position[i] -\r\n                this.focus_dist * this.half_width * this.right[i] -\r\n                this.focus_dist * this.half_height * this.up[i] +\r\n                this.focus_dist * this.front[i];\r\n\r\n        this.screen_horizontal = vec3.scale(vec3.create(), this.right, 2 * this.half_width * this.focus_dist);\r\n        this.screen_vertical = vec3.scale(vec3.create(), this.up, 2 * this.half_height * this.focus_dist);\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction randomInUnitDisk(out: vec3): vec3 {\r\n    do {\r\n        vec3.set(out, 2 * gen.nextFloat() - 1, 2 * gen.nextFloat() - 1, 0);\r\n    } while (vec3.dot(out, out) >= 1.0);\r\n    return out;\r\n}\r\n","/**\r\n * Created by Chris on Dec, 2018\r\n */\r\n\r\n\r\nexport class Global implements Global{\r\n    static fps: number = 0;\r\n    static max_fps: number = 60;\r\n    static is_mobile:boolean = false;\r\n}","import {vec3} from \"gl-matrix\";\r\n\r\nexport enum MatType {\r\n    Diffuse = 0,\r\n    Reflect = 1,\r\n    Refract = 2\r\n}\r\n\r\nexport class Material {\r\n    type:MatType\r\n    diffuse: vec3;\r\n    reflect: vec3;\r\n    fuzz:number;\r\n    refraction_index:number\r\n\r\n    constructor(type: MatType, color: vec3, modifier?:number) {\r\n        this.type = type;\r\n        switch (type) {\r\n            case MatType.Diffuse:\r\n                this.diffuse = color;\r\n                break;\r\n            case MatType.Reflect:\r\n                this.reflect = color;\r\n                this.fuzz = modifier;\r\n                break;\r\n            case MatType.Refract:\r\n                this.refraction_index= modifier;\r\n                break;\r\n        }\r\n    }\r\n}\r\n","import {Shader} from \"./shader\";\r\nimport {vec3} from \"gl-matrix\";\r\nimport {MatType} from \"./Material\";\r\nimport {Camera} from \"../Camera\";\r\nimport * as ImGui from \"../imgui/imgui\";\r\nimport {ImGuiIO} from \"../imgui/imgui\";\r\nimport * as ImGui_Impl from \"../imgui/imgui_impl\";\r\nimport {Global} from \"../globals\";\r\n\r\nconst random = require(\"fast-random\");\r\n\r\nconst seed = 49;\r\nconst gen = random(seed);\r\n\r\n\r\nlet vFov = 60;\r\nlet aperture = 0.0;\r\nlet eye = vec3.fromValues(10, 1.9, 2.5);\r\nlet target = vec3.fromValues(4, 0.5, 1);\r\nlet up = vec3.fromValues(0, 1, 0);\r\nlet dist_to_focus = vec3.distance(eye, target);\r\n\r\n//let hud_gl: WebGLRenderingContext;\r\n\r\n\r\nexport class WebglRenderer {\r\n    public camera: Camera;\r\n    private gl: WebGL2RenderingContext;\r\n    private ray_trace_shader: Shader;\r\n    private quad_shader: Shader;\r\n\r\n    private VAO: WebGLVertexArrayObject;\r\n    private vertex_buffer: WebGLBuffer;\r\n\r\n    private frame_buffers: WebGLFramebuffer[];\r\n    private float_textures: WebGLTexture[];\r\n    private current_source_id = 0;\r\n\r\n    private quad_render_texture: WebGLTexture;\r\n\r\n    private sample_count = 0;\r\n    private quadrants_row = Global.is_mobile ? 3 : 2;\r\n    private quadrants_col = Global.is_mobile ? 3 : 2;\r\n    public num_quadrants;\r\n    private current_quadrant;\r\n\r\n    private render_width = 0;\r\n    private render_height = 0;\r\n    private render_resolution = 600;\r\n    private display_resolution = 600;\r\n    \r\n    private mouse_invert = false;\r\n\r\n    private _super_sampling = Global.is_mobile ? 1 : 1;\r\n    get super_sampling() {\r\n        return this._super_sampling;\r\n    }\r\n\r\n    set super_sampling(ss: number) {\r\n        if (this._super_sampling == ss) return;\r\n        this._super_sampling = ss;\r\n        this.initRenderTexture();\r\n        let mult =  ss == 2 ? 2 : 0.5;\r\n        this.quadrants_col = Math.floor(this.quadrants_col * mult);\r\n        this.quadrants_row = Math.floor(this.quadrants_row * mult);\r\n    };\r\n\r\n\r\n    private max_ray_bounce = Global.is_mobile ? 12 : 24;\r\n    private min_ray_bounce = 0;\r\n    private ambient_light = vec3.fromValues(0.5, 0.7, 1.0);\r\n\r\n    private float_tex_ext: boolean;\r\n\r\n    private reset = true;\r\n\r\n    constructor(canvas: HTMLCanvasElement) {\r\n        this.num_quadrants = this.quadrants_row * this.quadrants_col;\r\n        this.current_quadrant = 0;\r\n\r\n        this.initGL(canvas);\r\n        this.initRenderTexture();\r\n        this.initShader();\r\n\r\n\r\n        this.bigSphereScene();\r\n        this.camera = new Camera(\r\n            eye,\r\n            target,\r\n            up,\r\n            vFov,\r\n            this.gl.drawingBufferWidth / this.gl.drawingBufferHeight,\r\n            aperture,\r\n            dist_to_focus\r\n        );\r\n        this.updateCamera();\r\n        this.initBuffers();\r\n    }\r\n\r\n    public async initImGui() {\r\n\r\n        await ImGui.default();\r\n        ImGui.IMGUI_CHECKVERSION();\r\n        ImGui.CreateContext();\r\n\r\n        const io: ImGuiIO = ImGui.GetIO();\r\n        // io.ConfigFlags |= ImGui.ConfigFlags.NavEnableKeyboard;  // Enable Keyboard Controls\r\n\r\n        // Setup style\r\n        ImGui.StyleColorsDark();\r\n        //ImGui.StyleColorsClassic();\r\n\r\n        io.Fonts.AddFontDefault();\r\n        io.WantCaptureMouse = true;\r\n        ImGui_Impl.Init(this.gl);\r\n    }\r\n\r\n    public draw(): void {\r\n        let gl = this.gl;\r\n        let destination_id = (this.current_source_id + 1) % 2;\r\n\r\n        //RENDER TO TEXTURE\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.frame_buffers[destination_id]);\r\n        gl.viewport(0, 0, this.render_width, this.render_height);\r\n\r\n        this.ray_trace_shader.use();\r\n\r\n        this.num_quadrants = this.quadrants_row * this.quadrants_col;\r\n\r\n        if (this.reset) {\r\n            this.reset = false;\r\n            this.sample_count = 0;\r\n            this.current_quadrant = -1;\r\n            this.ray_trace_shader.setIntByName(\"max_ray_bounce\", this.min_ray_bounce);\r\n            //  this.ray_trace_shader.setIntByName(\"num_quadrants\", 0);\r\n            this.ray_trace_shader.setIntByName(\"quadrants_per_row\", 1);\r\n            this.ray_trace_shader.setIntByName(\"quadrants_per_col\", 1);\r\n            this.ray_trace_shader.setIntByName(\"current_quadrant\", 0);\r\n        }\r\n        else {\r\n            this.ray_trace_shader.setIntByName(\"max_ray_bounce\", this.max_ray_bounce);\r\n            //  this.ray_trace_shader.setIntByName(\"num_quadrants\", this.num_quadrants);\r\n            this.ray_trace_shader.setIntByName(\"quadrants_per_row\", this.quadrants_row);\r\n            this.ray_trace_shader.setIntByName(\"quadrants_per_col\", this.quadrants_col);\r\n            this.ray_trace_shader.setIntByName(\"current_quadrant\", this.current_quadrant);\r\n        }\r\n\r\n        this.ray_trace_shader.setIntByName(\"sample_count\", this.sample_count);\r\n        this.ray_trace_shader.setFloatByName(\"rand_seed0\", gen.nextFloat());\r\n        this.ray_trace_shader.setFloatByName(\"rand_seed1\", gen.nextFloat());\r\n\r\n        this.updateCamera();\r\n        //Wiggle for anti-aliasing\r\n        this.wiggleCamera();\r\n\r\n        gl.bindVertexArray(this.VAO);\r\n        gl.bindTexture(gl.TEXTURE_2D, this.float_textures[this.current_source_id]);\r\n\r\n        //Draw to float texture and quad render texture\r\n        gl.drawBuffers([gl.COLOR_ATTACHMENT0, gl.COLOR_ATTACHMENT1]);\r\n        gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n\r\n        gl.bindVertexArray(null);\r\n\r\n        this.current_quadrant++;\r\n\r\n        if (this.current_quadrant >= this.num_quadrants) {\r\n            this.current_quadrant = 0;\r\n            this.sample_count += 1;\r\n            // Ping pong the buffers\r\n            this.current_source_id = destination_id;\r\n\r\n        }\r\n\r\n\r\n        // Start the Dear ImGui frame\r\n        ImGui_Impl.NewFrame(0);\r\n        ImGui.NewFrame();\r\n        ImGui.SetNextWindowPos(new ImGui.ImVec2(640, 50), ImGui.Cond.FirstUseEver);\r\n        ImGui.SetNextWindowSize(new ImGui.ImVec2(300, 340), ImGui.Cond.FirstUseEver);\r\n        {\r\n            ImGui.Begin(\"Settings\");\r\n            ImGui.Text(`Samples: ${this.sample_count}`);\r\n            ImGui.Text(`Render Resolution: ${this.render_width}x${this.render_height}`);\r\n            ImGui.Separator();\r\n            ImGui.Text(`FPS: ${Global.fps.toFixed(2)}`);\r\n            ImGui.SliderInt(\"Max FPS\", (value = Global.max_fps) => Global.max_fps = value, 5, 144);\r\n            ImGui.Checkbox(\"Invert Mouse\", (value = this.mouse_invert) => this.mouse_invert = value)\r\n            ImGui.Separator();\r\n            ImGui.Text(\"Ray Bounces\");\r\n            ImGui.SliderInt(\"Cam Moving\", (value = this.min_ray_bounce) => this.min_ray_bounce = value, 0, 50);\r\n            ImGui.SliderInt(\"Cam Still\", (value = this.max_ray_bounce) => this.max_ray_bounce = value, 0, 200);\r\n            \r\n            ImGui.Separator();\r\n            ImGui.Text(\"Displays Dimensions\");\r\n            ImGui.SliderInt(\"Width & Height\", (value = this.display_resolution) => this.display_resolution = value, 300, 1200);\r\n            ImGui.Text(\"Rendering Tiles\");\r\n            ImGui.InputInt(\"Rows\", (value = this.quadrants_row) => this.quadrants_row = value, 1, 1);\r\n            ImGui.InputInt(\"Cols\", (value = this.quadrants_col) => this.quadrants_col = value, 1, 1);\r\n\r\n            ImGui.Text(\"Supersampling\");\r\n            ImGui.SliderInt(\"SSAA\", (value = this.super_sampling) => this.super_sampling = value, 1, 2);\r\n            ImGui.End();\r\n        }\r\n\r\n        ImGui.SetNextWindowPos(new ImGui.ImVec2(2, 50), ImGui.Cond.FirstUseEver);\r\n        ImGui.SetNextWindowSize(new ImGui.ImVec2(this.display_resolution + 20, this.display_resolution +  40), ImGui.Cond.Always);\r\n        {\r\n            let io = ImGui.GetIO();\r\n            ImGui.Begin(\"GPU Rendered Scene\");\r\n            let size = new ImGui.ImVec2(this.display_resolution, this.display_resolution);\r\n  \r\n            ImGui.ImageButton(this.quad_render_texture, size, new ImGui.ImVec2(0, 1), new ImGui.ImVec2(1, 0), 0);\r\n            if (ImGui.IsItemActive()) {\r\n                const mouse_delta: Readonly<ImGui.reference_ImVec2> = io.MouseDelta;\r\n                let invert = this.mouse_invert ? -1: 1;\r\n                this.camera.processMouseMovement(invert *mouse_delta.x, invert *mouse_delta.y, true);\r\n                this.reset = true;\r\n            }\r\n            ImGui.End();\r\n        }\r\n        ImGui.EndFrame();\r\n        ImGui.Render();\r\n\r\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n        gl.clearColor(0, 0, 0, 0.0);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n        gl.useProgram(null); // You may want this if using this code in an OpenGL 3+ context where shaders may be bound\r\n\r\n        ImGui_Impl.RenderDrawData(ImGui.GetDrawData());\r\n\r\n    }\r\n\r\n    public resetCamera(): void {\r\n        this.camera.position = eye;\r\n        this.camera.lookAt(target);\r\n    }\r\n\r\n    public resetSamples(): void {\r\n        this.reset = true;\r\n    }\r\n\r\n    public getSampleCount(): number {\r\n        return this.sample_count;\r\n    }\r\n\r\n    private initGL(canvas: HTMLCanvasElement) {\r\n        try {\r\n            this.gl = <WebGL2RenderingContext>canvas.getContext(\"webgl2\", {alpha: true});\r\n        } catch (e) {\r\n            throw \"GL init error:\\n\" + e;\r\n        }\r\n        if (!this.gl) {\r\n            alert(\"WebGL2 is not available on your browser.\");\r\n        }\r\n        //this.gl.disable(this.gl.SAMPLE_COVERAGE);\r\n\r\n        this.gl.clearColor(0.2, 0.3, 0.3, 1.0);\r\n        this.gl.disable(this.gl.DEPTH_TEST);\r\n\r\n    }\r\n\r\n    private initShader() {\r\n        let gl = this.gl;\r\n\r\n        const frag: string = require(\"gpu_renderer/shaders/ray_trace.frag\");\r\n        const vert: string = require(\"gpu_renderer/shaders/ray_trace.vert\");\r\n        this.ray_trace_shader = new Shader(this.gl, vert, frag);\r\n        this.quad_shader = new Shader(\r\n            gl,\r\n            require(\"gpu_renderer/shaders/quad.vert\"),\r\n            require(\"gpu_renderer/shaders/quad.frag\")\r\n        );\r\n\r\n        this.ray_trace_shader.setAttributes([\"a_vertex\"]);\r\n\r\n        let uniforms = new Map();\r\n        uniforms.set(\"width\", this.gl.drawingBufferWidth);\r\n        uniforms.set(\"height\", this.gl.drawingBufferHeight);\r\n\r\n        this.ray_trace_shader.setIntByName(\"max_ray_bounce\", this.max_ray_bounce);\r\n        this.ray_trace_shader.setIntByName(\"num_quadrants\", this.num_quadrants);\r\n        this.ray_trace_shader.setIntByName(\"quadrants_per_row\", this.super_sampling * this.quadrants_row);\r\n        // this.addSpheres(uniforms);\r\n        this.ray_trace_shader.setIntByName(\"last_frame\", 0);\r\n\r\n        uniforms.set(\"ambient_light\", this.ambient_light);\r\n\r\n        this.ray_trace_shader.setUniforms(uniforms);\r\n        gl.bindVertexArray(this.VAO);\r\n\r\n        this.quad_shader.use();\r\n        this.quad_shader.setIntByName(\"u_texture\", 0);\r\n    }\r\n\r\n    private initRenderTexture(): void {\r\n        let gl = this.gl;\r\n        this.reset = true;\r\n\r\n        this.render_width = this.render_resolution * this.super_sampling;\r\n        this.render_height = this.render_resolution * this.super_sampling;\r\n\r\n        //Texture that is rendered to screen\r\n        this.quad_render_texture = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, this.quad_render_texture);\r\n\r\n        // prettier-ignore\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.render_width,\r\n            this.render_height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n\r\n        //Set up a frame buffer\r\n        this.frame_buffers = [gl.createFramebuffer(), gl.createFramebuffer()];\r\n\r\n        //Float texture support\r\n        this.float_tex_ext = gl.getExtension(\"EXT_color_buffer_float\");\r\n\r\n        // The float texture we're going to render to\r\n        this.float_textures = [gl.createTexture(), gl.createTexture()];\r\n\r\n        for (let buffer_id = 0; buffer_id < this.frame_buffers.length; buffer_id++) {\r\n            // The framebuffer, which regroups 0, 1, or more textures, and 0 or 1 depth buffer.\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this.frame_buffers[buffer_id]);\r\n            gl.bindTexture(gl.TEXTURE_2D, this.float_textures[buffer_id]);\r\n\r\n            // prettier-ignore\r\n            if (this.float_tex_ext)\r\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, this.render_width,\r\n                    this.render_height, 0, gl.RGBA, gl.FLOAT, null);\r\n            else\r\n                gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, this.render_width,\r\n                    this.render_height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\r\n\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n\r\n            //Set \"float_texture\" as our color attachment #0\r\n            gl.framebufferTexture2D(\r\n                gl.FRAMEBUFFER,\r\n                gl.COLOR_ATTACHMENT0,\r\n                gl.TEXTURE_2D,\r\n                this.float_textures[buffer_id],\r\n                0\r\n            );\r\n\r\n            //Set \"quad_render_texture\" as our color attachment #1\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT1, gl.TEXTURE_2D, this.quad_render_texture, 0);\r\n\r\n            //Completed\r\n            const a = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n            console.log(`${a === gl.FRAMEBUFFER_COMPLETE ? \"good\" : \"bad  \"} frame buffer ${buffer_id}`);\r\n        }\r\n    }\r\n\r\n    private bigSphereScene(): void {\r\n        this.ray_trace_shader.use();\r\n        let gl = this.gl;\r\n        //RGBA32F\r\n        let sphere_tex = gl.createTexture();\r\n        //RGBA8I\r\n        let mat_tex = gl.createTexture();\r\n        //RGBA32F\r\n        let mat_tex2 = gl.createTexture();\r\n        gl.bindTexture(gl.TEXTURE_2D, sphere_tex);\r\n\r\n        let sphere_array = [];\r\n        let mat_array = [];\r\n        let mat_array2 = [];\r\n\r\n        sphere_array.push(0, -1000, 0, 1000);\r\n        mat_array.push(0.5 * 255, 0.5 * 255, 0.5 * 255, 255);\r\n        mat_array2.push(MatType.Diffuse, 0, 0, 0);\r\n\r\n        sphere_array.push(0, 1, 0, 1);\r\n        mat_array.push(0, 255, 0, 0);\r\n        mat_array2.push(MatType.Refract, 1.2, 0, 0);\r\n\r\n        sphere_array.push(0, 1, 0, -0.95);\r\n        mat_array.push(0, 0, 0, 0);\r\n        mat_array2.push(MatType.Refract, 1.2, 0, 0);\r\n\r\n        sphere_array.push(-4, 1, 0, 1);\r\n        mat_array.push(0.4 * 255, 0.2 * 255, 0.1 * 255, 0);\r\n        mat_array2.push(MatType.Diffuse, 0, 0, 0);\r\n\r\n        sphere_array.push(4, 1, 0, 1);\r\n        mat_array.push(0.7 * 255, 0.6 * 255, 0.5 * 255, 0);\r\n        mat_array2.push(MatType.Reflect, 0, 0, 0);\r\n\r\n        let j = Global.is_mobile ? -2 : -11;\r\n        let k = Global.is_mobile ? 7 : 11;\r\n\r\n        for (let a = j; a < k; a++) {\r\n            for (let b = j; b < k; b++) {\r\n                let choose_mat = gen.nextFloat();\r\n                let center = vec3.fromValues(a + 0.9 * gen.nextFloat(), 0.2, b + 0.9 * gen.nextFloat());\r\n                if (vec3.distance(center, vec3.fromValues(4, 0.2, 0)) > 0.9) {\r\n                    if (choose_mat < 0.5) {\r\n                        sphere_array.push(center[0], center[1], center[2], 0.2);\r\n                        mat_array.push(gen.nextFloat() * 255, gen.nextFloat() * 255, gen.nextFloat() * 255, 0);\r\n                        mat_array2.push(MatType.Diffuse, 0, 0, 0);\r\n                    } else if (choose_mat < 0.75) {\r\n                        sphere_array.push(center[0], center[1], center[2], 0.2);\r\n                        mat_array.push(\r\n                            0.5 * (1 + gen.nextFloat()) * 255,\r\n                            0.5 * (1 + gen.nextFloat()) * 255,\r\n                            0.5 * (1 + gen.nextFloat()) * 255,\r\n                            0\r\n                        );\r\n                        mat_array2.push(MatType.Reflect, 0.5 * gen.nextFloat(), 0, 0);\r\n                    } else if (choose_mat < 0.95) {\r\n                        sphere_array.push(center[0], center[1], center[2], 0.2);\r\n                        mat_array.push(0, 0, 0, 0);\r\n                        mat_array2.push(MatType.Refract, 1.5, 0, 0);\r\n                    } else {\r\n                        sphere_array.push(center[0], center[1], center[2], 0.2);\r\n                        mat_array.push(0, 0, 0, 0);\r\n                        mat_array2.push(MatType.Refract, 1.5, 0, 0);\r\n\r\n                        sphere_array.push(center[0], center[1], center[2], -0.18);\r\n                        mat_array.push(0, 0, 0, 0);\r\n                        mat_array2.push(MatType.Refract, 1.5, 0, 0);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let width = sphere_array.length / 4;\r\n        let num_spheres = width;\r\n\r\n\r\n        //We must round up the texture to the nearest multiple of 2 or it will not read properly\r\n        width = Math.pow(2, Math.ceil(Math.log(width) / Math.log(2)));\r\n\r\n        //Fill with empty\r\n        for (let i = num_spheres; i <= width; i++) {\r\n            sphere_array.push(0, 0, 0, 0);\r\n            mat_array.push(0, 0, 0, 0);\r\n            mat_array2.push(0, 0, 0, 0);\r\n        }\r\n\r\n        let height = 1;\r\n\r\n        gl.activeTexture(gl.TEXTURE1);\r\n        gl.bindTexture(gl.TEXTURE_2D, sphere_tex);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n\r\n        gl.texImage2D(\r\n            gl.TEXTURE_2D,\r\n            0,\r\n            gl.RGBA32F,\r\n            width,\r\n            height,\r\n            0,\r\n            gl.RGBA,\r\n            gl.FLOAT,\r\n            new Float32Array(sphere_array)\r\n        );\r\n        this.ray_trace_shader.setIntByName(\"sphere_texture\", 1);\r\n\r\n        gl.activeTexture(gl.TEXTURE2);\r\n        gl.bindTexture(gl.TEXTURE_2D, mat_tex);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texImage2D(\r\n            gl.TEXTURE_2D,\r\n            0,\r\n            gl.RGBA8,\r\n            width,\r\n            height,\r\n            0,\r\n            gl.RGBA,\r\n            gl.UNSIGNED_BYTE,\r\n            new Uint8Array(mat_array)\r\n        );\r\n        this.ray_trace_shader.setIntByName(\"mat_texture\", 2);\r\n\r\n        gl.activeTexture(gl.TEXTURE3);\r\n        gl.bindTexture(gl.TEXTURE_2D, mat_tex2);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, width, height, 0, gl.RGBA, gl.FLOAT, new Float32Array(mat_array2));\r\n        this.ray_trace_shader.setIntByName(\"mat_texture_extra\", 3);\r\n\r\n        this.ray_trace_shader.setIntByName(\"sphere_count\", num_spheres);\r\n        this.ray_trace_shader.setFloatByName(\"sphere_texture_size\", width);\r\n    }\r\n\r\n    private updateCamera() {\r\n        this.ray_trace_shader.use();\r\n        this.ray_trace_shader.setVec3ByName(\"screen.lower_left_corner\", this.camera.lower_left_corner);\r\n        this.ray_trace_shader.setVec3ByName(\"screen.horizontal\", this.camera.screen_horizontal);\r\n        this.ray_trace_shader.setVec3ByName(\"screen.vertical\", this.camera.screen_vertical);\r\n        this.ray_trace_shader.setVec3ByName(\"screen.position\", this.camera.position);\r\n        this.ray_trace_shader.setFloatByName(\"screen.lens_radius\", this.camera.lens_radius);\r\n        this.ray_trace_shader.setFloatByName(\"screen.x_wiggle\", gen.nextFloat() / this.render_width);\r\n        this.ray_trace_shader.setFloatByName(\"screen.y_wiggle\", gen.nextFloat() / this.render_height);\r\n    }\r\n\r\n    private wiggleCamera(): void {\r\n        this.ray_trace_shader.setFloatByName(\"screen.x_wiggle\", gen.nextFloat() / this.render_width);\r\n        this.ray_trace_shader.setFloatByName(\"screen.y_wiggle\", gen.nextFloat() / this.render_height);\r\n    }\r\n\r\n    private initBuffers() {\r\n        let gl = this.gl;\r\n        this.vertex_buffer = gl.createBuffer();\r\n        this.VAO = gl.createVertexArray();\r\n\r\n        //prettier-ignore\r\n        let vertices = [\r\n            -1.0, -1.0, 0.0,\r\n            1.0, -1.0, 0.0,\r\n            -1.0, 1.0, 0.0,\r\n            -1.0, 1.0, 0.0,\r\n            1.0, -1.0, 0.0,\r\n            1.0, 1.0, 0.0\r\n        ];\r\n\r\n        gl.bindVertexArray(this.VAO);\r\n        gl.activeTexture(gl.TEXTURE0);\r\n\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.vertex_buffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\r\n\r\n        gl.enableVertexAttribArray(this.ray_trace_shader.getAttribLocation(\"a_vertex\"));\r\n        gl.vertexAttribPointer(this.ray_trace_shader.getAttribLocation(\"a_vertex\"), 3, gl.FLOAT, false, 0, 0);\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, null);\r\n        gl.bindVertexArray(null);\r\n    }\r\n}\r\n\r\n","import {mat4, vec3, vec4} from \"gl-matrix\";\r\n\r\nexport class Shader {\r\n    public uniforms: Map<String, WebGLUniformLocation>;\r\n    public attributes: Map<String, GLint>;\r\n    protected readonly ID: WebGLProgram;\r\n    protected gl: WebGL2RenderingContext;\r\n\r\n    constructor(gl: WebGL2RenderingContext, vertexSourceCode: string, fragmentSourceCode: string) {\r\n        this.gl = gl;\r\n\r\n        let vertexShader: WebGLShader = this.getShader(gl, vertexSourceCode, gl.VERTEX_SHADER);\r\n        let fragmentShader: WebGLShader = this.getShader(gl, fragmentSourceCode, gl.FRAGMENT_SHADER);\r\n\r\n        this.ID = gl.createProgram();\r\n        gl.attachShader(this.ID, vertexShader);\r\n        gl.attachShader(this.ID, fragmentShader);\r\n        gl.linkProgram(this.ID);\r\n\r\n        if (!gl.getProgramParameter(this.ID, gl.LINK_STATUS)) {\r\n            alert(\"Could not initialize shaders\");\r\n        }\r\n\r\n        this.uniforms = new Map<String, WebGLUniformLocation>();\r\n        this.attributes = new Map<String, GLint>();\r\n    }\r\n\r\n    public delete(): void {\r\n        this.gl.deleteShader(this.ID);\r\n        delete this.uniforms;\r\n        delete this.attributes;\r\n    }\r\n\r\n    public use(): void {\r\n        this.gl.useProgram(this.ID);\r\n    }\r\n\r\n    public setAttributes(attr: string[]): void {\r\n        this.use();\r\n\r\n        for (let a of attr) {\r\n            this.attributes.set(a, this.gl.getAttribLocation(this.ID, a));\r\n        }\r\n    }\r\n\r\n    public setUniforms(uniforms: Map<string, any>): void {\r\n        this.use();\r\n\r\n        for (let [name, value] of uniforms) {\r\n            if (value) this.setAny(name, value);\r\n        }\r\n    }\r\n\r\n    public getUniformLocation(name: string): WebGLUniformLocation {\r\n        let a = this.uniforms.get(name);\r\n        if (a === undefined) {\r\n            a = this.gl.getUniformLocation(this.ID, name);\r\n            this.uniforms.set(name, a);\r\n        }\r\n        return a;\r\n    }\r\n\r\n    public getAttribLocation(name: string): GLint {\r\n        let a = this.attributes.get(name);\r\n        if (a === undefined) a = this.gl.getAttribLocation(this.ID, name);\r\n        return a;\r\n    }\r\n\r\n    public setBool(id: number | WebGLUniformLocation, value: boolean): void {\r\n        this.gl.uniform1i(id, value ? 1 : 0);\r\n    }\r\n\r\n    public setBoolByName(name: string, value: boolean): void {\r\n        this.gl.uniform1i(this.getUniformLocation(name), value ? 1 : 0);\r\n    }\r\n\r\n    public setInt(id: number | WebGLUniformLocation, value: number): void {\r\n        this.gl.uniform1i(id, value);\r\n    }\r\n\r\n    public setIntByName(name: string, value: number): void {\r\n        this.gl.uniform1i(this.getUniformLocation(name), value);\r\n    }\r\n\r\n    public setIntV(id: number | WebGLUniformLocation, value: number[]): void {\r\n        this.gl.uniform1iv(id, value);\r\n    }\r\n\r\n    public setIntVByName(name: string, value: number[] | Float32Array) {\r\n        this.gl.uniform1iv(this.getUniformLocation(name), value);\r\n    }\r\n\r\n    public setFloat(id: number | WebGLUniformLocation, value: number) {\r\n        this.gl.uniform1f(id, value);\r\n    }\r\n\r\n    public setFloatByName(name: string, value: number) {\r\n        this.gl.uniform1f(this.getUniformLocation(name), value);\r\n    }\r\n\r\n    public setMat4(id: number | WebGLUniformLocation, matrix: mat4 | number[] | Float32Array) {\r\n        this.gl.uniformMatrix4fv(id, false, matrix);\r\n    }\r\n\r\n    public setMat4ByName(name: string, matrix: mat4 | number[] | Float32Array) {\r\n        this.gl.uniformMatrix4fv(this.getUniformLocation(name), false, matrix);\r\n    }\r\n\r\n    public setVec3(id: number | WebGLUniformLocation, vec: vec3 | number[] | Float32Array) {\r\n        this.gl.uniform3fv(id, vec);\r\n    }\r\n\r\n    public setVec3ByName(name: string, vec: vec3 | number[] | Float32Array) {\r\n        this.gl.uniform3fv(this.getUniformLocation(name), vec);\r\n    }\r\n\r\n    public setVec4(id: number | WebGLUniformLocation, vec: vec4 | number[] | Float32Array) {\r\n        this.gl.uniform4fv(id, vec);\r\n    }\r\n\r\n    public setVec4ByName(name: string, vec: vec4 | number[] | Float32Array) {\r\n        this.gl.uniform4fv(this.getUniformLocation(name), vec);\r\n    }\r\n\r\n    public setAny(name: string, value: any) {\r\n        let uniform = this.getUniformLocation(name);\r\n        if (typeof value === \"number\") {\r\n            this.setFloat(uniform, value);\r\n        } else if (value === \"boolean\") {\r\n            this.setBool(uniform, value);\r\n        } else if (value instanceof Float32Array) {\r\n            if (value.length == 3) this.setVec3(uniform, value);\r\n            if (value.length == 4) this.setVec4(uniform, value);\r\n            if (value.length == 16) this.setMat4(uniform, value);\r\n        }\r\n    }\r\n\r\n    private getShader(gl: WebGL2RenderingContext, sourceCode, type): WebGLShader {\r\n        let shader: WebGLShader;\r\n        shader = gl.createShader(type);\r\n\r\n        gl.shaderSource(shader, sourceCode);\r\n        gl.compileShader(shader);\r\n\r\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n            alert(gl.getShaderInfoLog(shader));\r\n            return null;\r\n        }\r\n        return shader;\r\n    }\r\n}\r\n","module.exports = \"#version 300 es\\r\\nprecision mediump float;\\r\\n// Ouput data\\r\\nlayout(location = 0) out vec4 color;\\r\\n\\r\\nuniform sampler2D u_texture;\\r\\n\\r\\nin vec2 tex_coord;\\r\\n\\r\\n// Converts a color from linear light gamma to sRGB gamma\\r\\nvec4 fromLinear(vec4 linearRGB)\\r\\n{\\r\\n    bvec4 cutoff = lessThan(linearRGB, vec4(0.0031308));\\r\\n    vec4 higher = vec4(1.055)*pow(linearRGB, vec4(1.0/2.4)) - vec4(0.055);\\r\\n    vec4 lower = linearRGB * vec4(12.92);\\r\\n\\r\\n    return mix(higher, lower, cutoff);\\r\\n}\\r\\n\\r\\n// Converts a color from sRGB gamma to linear light gamma\\r\\nvec4 toLinear(vec4 sRGB)\\r\\n{\\r\\n    bvec4 cutoff = lessThan(sRGB, vec4(0.04045));\\r\\n    vec4 higher = pow((sRGB + vec4(0.055))/vec4(1.055), vec4(2.4));\\r\\n    vec4 lower = sRGB/vec4(12.92);\\r\\n\\r\\n    return mix(higher, lower, cutoff);\\r\\n}\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n\\tvec3 c = texture(u_texture, tex_coord).rgb;\\r\\n\\tcolor = fromLinear(vec4(c,1.0));\\r\\n//    if (tex_coord.x < 0.25)\\r\\n//        color = vec4(pow(color.r, 1./2.2),pow(color.g, 1./2.2),pow(color.b, 1./2.2),1.0);   // 2.2 Gamma\\r\\n//    else if (tex_coord.x < 0.5)\\r\\n//        color = fromLinear(color);        // sRGB \\r\\n//    else if (tex_coord.x < 0.75)\\r\\n//        color = (sqrt(color));    // sqrt approximation         \\r\\n//    else\\r\\n//        color = color;                // unadjusted\\r\\n}\"","module.exports = \"#version 300 es\\r\\n\\r\\n// Input vertex data, different for all executions of this shader.\\r\\nlayout(location = 0) in vec3 a_vertex;\\r\\n\\r\\n// Output data ; will be interpolated for each fragment.\\r\\nout vec2 tex_coord;\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n\\tgl_Position =  vec4(a_vertex,1);\\r\\n\\ttex_coord = (a_vertex.xy + vec2(1.0,1.0)) / (2.0);\\r\\n}\\r\\n\\r\\n\"","module.exports = \"#version 300 es\\r\\nprecision highp float;\\r\\n#define FLT_MAX 3.402823466e+38\\r\\n\\r\\nin vec2 pos;\\r\\nin vec3 eye;\\r\\nin vec3 ray_direction;\\r\\n\\r\\nlayout(location=0) out vec4 fragColor;\\r\\nlayout(location=1) out vec4 fragColor2;\\r\\n\\r\\nuniform float width;\\r\\nuniform float height;\\r\\n\\r\\nstruct Ray{\\r\\n    vec3 origin;\\r\\n    vec3 direction;\\r\\n};\\r\\n\\r\\nconst int Diffuse = 0;\\r\\nconst int Reflect = 1;\\r\\nconst int Refract = 2;\\r\\n\\r\\nstruct Material{\\r\\n    int type;\\r\\n    vec3 color;\\r\\n    float fuzz;\\r\\n    float refraction_index;\\r\\n};\\r\\n\\r\\nstruct HitRecord{\\r\\n    float t;\\r\\n    vec3 pos;\\r\\n    vec3 normal;\\r\\n    Material mat;\\r\\n};\\r\\n\\r\\nstruct Sphere{\\r\\n    vec3 center;\\r\\n    float radius;\\r\\n};\\r\\n\\r\\nstruct Screen{\\r\\n    vec3 position;\\r\\n    vec3 lower_left_corner;\\r\\n    vec3 horizontal;\\r\\n    vec3 vertical;\\r\\n    float lens_radius;\\r\\n    float x_wiggle;\\r\\n    float y_wiggle;\\r\\n};\\r\\n\\r\\nuniform Screen screen;\\r\\n\\r\\nuniform vec3 ambient_light;\\r\\nuniform int sphere_count;\\r\\nuniform int sample_count;\\r\\nuniform int samples;\\r\\nuniform int max_ray_bounce;\\r\\n//uniform Sphere spheres[150];\\r\\n\\r\\nuniform float rand_seed0;\\r\\nuniform float rand_seed1;\\r\\nuniform sampler2D last_frame;\\r\\nuniform float sphere_texture_size;\\r\\nuniform sampler2D sphere_texture;\\r\\nuniform sampler2D mat_texture; \\r\\nuniform sampler2D mat_texture_extra; \\r\\n\\r\\n\\r\\nfloat random(vec3 scale, float seed){\\r\\n    return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\\r\\n}\\r\\n\\r\\nvec3 uniformlyRandomDirection(float seed) {\\r\\n   float u = random(vec3(12.9898, 78.233, 151.7182), seed);\\r\\n   float v = random(vec3(63.7264, 10.873, 623.6736), seed);\\r\\n   float z = 1.0 - 2.0 * u;\\r\\n   float r = sqrt(1.0 - z * z);\\r\\n   float angle = 6.283185307179586 * v;\\r\\n   return vec3(r * cos(angle), r * sin(angle), z);\\r\\n}\\r\\n\\r\\nvec3 uniformlyRandomVector(float seed){\\r\\n    return uniformlyRandomDirection(seed) * sqrt(random(vec3(36.7539, 50.3658, 306.2759), seed));\\r\\n}\\r\\n\\r\\nvec2 uniformlyRandomVec2(vec3 scale, float seed, float seed2){\\r\\n    float r = sqrt(random(scale.xyz,seed));\\r\\n    float t = (random(scale.xyz,seed2))* 6.283185307179586;\\r\\n    vec2 result;\\r\\n    result.x = r * cos(t);\\r\\n    result.y = r * sin(t);\\r\\n    return result;\\r\\n}\\r\\n\\r\\n\\r\\nvec3 cosineWeightedDirection(float seed, vec3 normal){\\r\\n    float u =random(vec3(12.9898, 78.233, 151.7182), seed);\\r\\n    float v = random(vec3(63.7264, 10.873, 623.6736), seed);\\r\\n    float r = sqrt(u);\\r\\n    float angle = 6.283185307179586 * v;\\r\\n    vec3 sdir, tdir;\\r\\n    if (abs(normal.x) < 0.5)\\r\\n        sdir = cross(normal, vec3(1,0,0));\\r\\n    else \\r\\n        sdir = cross(normal, vec3(0,1,0));\\r\\n    \\r\\n    tdir = cross(normal, sdir);\\r\\n    return r*cos(angle)*sdir + r*sin(angle)*tdir + sqrt(1.-u)*normal;\\r\\n}\\r\\n\\r\\n//Schlick used for refraction\\r\\nfloat schlick(float cosine, float ref_idx){\\r\\n    float r0 = (1.0-ref_idx) / (1.0 + ref_idx);\\r\\n    r0 = r0*r0;\\r\\n    return r0 + (1.0-r0) * pow((1.0 - cosine), 5.0);\\r\\n}\\r\\n\\r\\n//Intersect with this sphere. updates hit record\\r\\nbool sphereIntersection(Sphere s, Ray ray, float t_min, float t_max, inout HitRecord rec){\\r\\n    vec3 to_sphere = ray.origin - s.center;\\r\\n    float a = dot(ray.direction, ray.direction);\\r\\n    float b = dot(to_sphere, ray.direction);\\r\\n    float c = dot(to_sphere,to_sphere) - s.radius * s.radius;\\r\\n    float discriminant = b * b -  a * c;\\r\\n    \\r\\n    float temp = (-b - sqrt(discriminant)) / a;\\r\\n    if(temp < t_max && temp > t_min){\\r\\n        rec.t = temp;\\r\\n        rec.pos = ray.origin + rec.t * ray.direction;\\r\\n        rec.normal = (rec.pos - s.center) / s.radius;\\r\\n        return true;\\r\\n    }\\r\\n    temp = (-b + sqrt(discriminant)) / a;\\r\\n    if(temp < t_max && temp > t_min){\\r\\n       rec.t = temp;\\r\\n       rec.pos = ray.origin + rec.t * ray.direction;\\r\\n       rec.normal = (rec.pos - s.center) / s.radius;\\r\\n       return true;\\r\\n    }\\r\\n    \\r\\n    return false;\\r\\n}\\r\\n\\r\\n//Intersects with all objects and updates the hit record\\r\\nbool intersectAll(Ray ray, float t_min, float t_max, inout HitRecord rec){\\r\\n    bool hit_anything = false;\\r\\n    float closest_so_far = t_max;\\r\\n    \\r\\n    //Spheres Loop\\r\\n    Sphere sphere;\\r\\n    int index_of_hit = 0;\\r\\n    float index;\\r\\n    vec4 s;\\r\\n    float size = float(sphere_texture_size);\\r\\n    \\r\\n    for(int i = 0; i < sphere_count; i++){\\r\\n        s = texelFetch(sphere_texture, ivec2(i,0), 0);\\r\\n        sphere.center = s.xyz;\\r\\n        sphere.radius = s.w;     \\r\\n\\r\\n        if(sphereIntersection(sphere, ray, t_min, closest_so_far, rec)){\\r\\n            index_of_hit = i;\\r\\n            hit_anything = true;\\r\\n            closest_so_far = rec.t;\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    //If we don't hit anything it doesnt matter since this data won't be used\\r\\n    rec.mat.color = texelFetch(mat_texture, ivec2(index_of_hit,0), 0).rgb; \\r\\n    vec2 mat = texelFetch(mat_texture_extra, ivec2(index_of_hit,0), 0).xy;\\r\\n    rec.mat.type = int(mat.x);\\r\\n    rec.mat.fuzz = mat.y;\\r\\n    rec.mat.refraction_index = mat.y;\\r\\n        \\r\\n    return hit_anything;\\r\\n}\\r\\n\\r\\nvec3 color(inout Ray ray){\\r\\n    HitRecord rec;\\r\\n    vec3 color = vec3(1.0);\\r\\n\\r\\n    for(int ray_bounce=0; ray_bounce <= max_ray_bounce; ray_bounce++){\\r\\n        float rf = float(ray_bounce);\\r\\n        \\r\\n        if(intersectAll(ray, 0.01, FLT_MAX, rec )){\\r\\n            ray.origin = rec.pos;\\r\\n            vec3 rand =  uniformlyRandomDirection(rand_seed1 + rf);    \\r\\n            \\r\\n            if(rec.mat.type == Diffuse){\\r\\n                ray.direction = rec.normal + rand;\\r\\n                color *= rec.mat.color;\\r\\n                \\r\\n            }else if(rec.mat.type == Reflect){     \\r\\n                vec3 reflected = reflect(normalize(ray.direction), rec.normal);\\r\\n                ray.direction = reflected + rec.mat.fuzz * rand;\\r\\n                if(dot(ray.direction, rec.normal) > 0.0)\\r\\n                    color *= rec.mat.color;\\r\\n                else\\r\\n                    color = vec3(0);\\r\\n                    \\r\\n            }else if(rec.mat.type == Refract){\\r\\n                vec3 outward_normal;\\r\\n                float ni_over_nt;\\r\\n                float reflect_prob;\\r\\n                float cosine;\\r\\n                vec3 reflected = reflect(normalize(ray.direction), rec.normal);\\r\\n               \\r\\n                if(dot(ray.direction, rec.normal) > 0.0){\\r\\n                   outward_normal = -rec.normal;\\r\\n                   ni_over_nt = rec.mat.refraction_index;\\r\\n                   cosine = rec.mat.refraction_index * dot(ray.direction, rec.normal) / length(ray.direction);\\r\\n                }else{\\r\\n                   outward_normal = rec.normal;\\r\\n                   ni_over_nt = 1.0 / rec.mat.refraction_index;\\r\\n                   cosine = -dot(ray.direction, rec.normal) / length(ray.direction);\\r\\n                }\\r\\n                \\r\\n                vec3 refracted = refract(normalize(ray.direction), outward_normal, ni_over_nt);\\r\\n                if(length(refracted) > 0.0){\\r\\n                   reflect_prob = schlick(cosine, rec.mat.refraction_index);\\r\\n                }else{\\r\\n                   reflect_prob = 1.0;\\r\\n                }\\r\\n                \\r\\n                float r = random(rand, rand_seed0 + rf);\\r\\n                if(r > reflect_prob){\\r\\n                   ray.direction = refracted;\\r\\n                }else\\r\\n                   ray.direction = reflected;\\r\\n            }\\r\\n            \\r\\n        }else{\\r\\n             vec3 unit_direction = normalize(ray.direction);\\r\\n             float t = 0.5 * (unit_direction.y + 1.0);\\r\\n             color *=  (1.0 - t) * vec3(1.0) +   t * ambient_light  ;\\r\\n             break;\\r\\n        }\\r\\n    }\\r\\n    return color;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n// Converts a color from linear light gamma to sRGB gamma\\r\\nvec4 fromLinear(vec4 linearRGB)\\r\\n{\\r\\n    bvec4 cutoff = lessThan(linearRGB, vec4(0.0031308));\\r\\n    vec4 higher = vec4(1.055)*pow(linearRGB, vec4(1.0/2.4)) - vec4(0.055);\\r\\n    vec4 lower = linearRGB * vec4(12.92);\\r\\n\\r\\n    return mix(higher, lower, cutoff);\\r\\n}\\r\\n\\r\\nvoid main()\\r\\n{      \\r\\n    vec3 prev_color =  texture(last_frame, vec2(pos.xy)).rgb;\\r\\n\\r\\n    //Random depth of field blur based on lens radius\\r\\n    vec2 rd =  screen.lens_radius * (uniformlyRandomVec2(gl_FragCoord.xyz, rand_seed0, rand_seed1));\\r\\n    vec3 offset =  screen.horizontal * rd.x + screen.vertical * rd.y;\\r\\n\\r\\n    Ray ray;\\r\\n    ray.origin =  eye + offset;\\r\\n    ray.direction = ray_direction - offset ;\\r\\n\\r\\n    vec3 new_color = color(ray);\\r\\n\\r\\n    float blend =  1.0 / float(sample_count+1);\\r\\n\\r\\n    //Blend new color with color of last frame\\r\\n    vec3 final_color = mix(prev_color,new_color,blend);\\r\\n\\r\\n    fragColor = vec4(final_color,1.0);         \\r\\n    fragColor2 =  fromLinear(vec4(final_color,1.0));\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n\"","module.exports = \"#version 300 es\\r\\nprecision highp  float;\\r\\nlayout (location = 0) in vec3 a_vertex;\\r\\n\\r\\nout vec2 pos;\\r\\nout vec3 eye;\\r\\nout vec3 ray_direction;\\r\\n\\r\\nconst vec2 pos_fix = vec2(0.5);\\r\\n\\r\\nstruct Screen{\\r\\n    vec3 position;\\r\\n    vec3 lower_left_corner;\\r\\n    vec3 horizontal;\\r\\n    vec3 vertical;\\r\\n    float lens_radius;\\r\\n    float x_wiggle;\\r\\n    float y_wiggle;\\r\\n};\\r\\n\\r\\nuniform Screen screen;\\r\\nuniform float rand_seed0;\\r\\nuniform float rand_seed1;\\r\\nuniform float width;\\r\\nuniform float height;\\r\\n\\r\\nuniform int num_quadrants;\\r\\nuniform int current_quadrant;\\r\\nuniform int quadrants_per_row;\\r\\nuniform int quadrants_per_col;\\r\\n\\r\\nfloat random2(vec3 scale, float seed){\\r\\n    return fract(sin(dot(a_vertex + seed, scale)) * 43758.5453 + seed);\\r\\n}\\r\\n\\r\\nvoid main()\\r\\n{\\r\\n    //match the quad to the quadrant we are rendering\\r\\n    vec3 scale = vec3(1. / float(quadrants_per_row), 1. / float(quadrants_per_col), 1.0);\\r\\n\\r\\n    vec3 new_vertex = a_vertex * vec3(scale) + vec3(float(1) - vec3(scale)) ;\\r\\n    \\r\\n    new_vertex.x -=  float(current_quadrant%quadrants_per_row)  * scale.x * 2.;\\r\\n    new_vertex.y -=  floor(float(current_quadrant) / float(quadrants_per_row))  * scale.y * 2.;\\r\\n    \\r\\n    //fix position from -1 to 1 to 0 to 1\\r\\n    pos = new_vertex.xy * pos_fix + pos_fix;\\r\\n    \\r\\n    eye = screen.position;\\r\\n\\r\\n    ray_direction = screen.lower_left_corner +\\r\\n        screen.x_wiggle*1.0 + pos.x * screen.horizontal + \\r\\n        screen.y_wiggle*1.0 + pos.y * screen.vertical - \\r\\n        eye;\\r\\n        \\r\\n    gl_Position = vec4(new_vertex,1.0);\\r\\n}   \"","\r\nvar Module = (function() {\r\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\r\n  return (\r\nfunction(Module) {\r\n  Module = Module || {};\r\n\r\nvar Module=typeof Module!==\"undefined\"?Module:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}Module[\"arguments\"]=[];Module[\"thisProgram\"]=\"./this.program\";Module[\"quit\"]=(function(status,toThrow){throw toThrow});Module[\"preRun\"]=[];Module[\"postRun\"]=[];var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof require===\"function\"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}else{return scriptDirectory+path}}if(ENVIRONMENT_IS_NODE){scriptDirectory=__dirname+\"/\";var nodeFS;var nodePath;Module[\"read\"]=function shell_read(filename,binary){var ret;ret=tryParseAsDataURI(filename);if(!ret){if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);ret=nodeFS[\"readFileSync\"](filename)}return binary?ret:ret.toString()};Module[\"readBinary\"]=function readBinary(filename){var ret=Module[\"read\"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){Module[\"thisProgram\"]=process[\"argv\"][1].replace(/\\\\/g,\"/\")}Module[\"arguments\"]=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));process[\"on\"](\"unhandledRejection\",abort);Module[\"quit\"]=(function(status){process[\"exit\"](status)});Module[\"inspect\"]=(function(){return\"[Emscripten Module object]\"})}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){Module[\"read\"]=function shell_read(f){var data=tryParseAsDataURI(f);if(data){return intArrayToString(data)}return read(f)}}Module[\"readBinary\"]=function readBinary(f){var data;data=tryParseAsDataURI(f);if(data){return data}if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){Module[\"arguments\"]=scriptArgs}else if(typeof arguments!=\"undefined\"){Module[\"arguments\"]=arguments}if(typeof quit===\"function\"){Module[\"quit\"]=(function(status){quit(status)})}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}Module[\"read\"]=function shell_read(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText}catch(err){var data=tryParseAsDataURI(url);if(data){return intArrayToString(data)}throw err}};if(ENVIRONMENT_IS_WORKER){Module[\"readBinary\"]=function readBinary(url){try{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}catch(err){var data=tryParseAsDataURI(url);if(data){return data}throw err}}}Module[\"readAsync\"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}var data=tryParseAsDataURI(url);if(data){onload(data.buffer);return}onerror()};xhr.onerror=onerror;xhr.send(null)};Module[\"setWindowTitle\"]=(function(title){document.title=title})}else{}var out=Module[\"print\"]||(typeof console!==\"undefined\"?console.log.bind(console):typeof print!==\"undefined\"?print:null);var err=Module[\"printErr\"]||(typeof printErr!==\"undefined\"?printErr:typeof console!==\"undefined\"&&console.warn.bind(console)||out);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var STACK_ALIGN=16;function staticAlloc(size){var ret=STATICTOP;STATICTOP=STATICTOP+size+15&-16;return ret}function alignMemory(size,factor){if(!factor)factor=STACK_ALIGN;var ret=size=Math.ceil(size/factor)*factor;return ret}var asm2wasmImports={\"f64-rem\":(function(x,y){return x%y}),\"debugger\":(function(){debugger})};var functionPointers=new Array(0);var GLOBAL_BASE=1024;var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}function Pointer_stringify(ptr,length){if(length===0||!ptr)return\"\";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret=\"\";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return UTF8ToString(ptr)}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx){var endPtr=idx;while(u8Array[endPtr])++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var u0,u1,u2,u3,u4,u5;var str=\"\";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}}function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;var WASM_PAGE_SIZE=65536;var ASMJS_PAGE_SIZE=16777216;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBuffer(buf){Module[\"buffer\"]=buffer=buf}function updateGlobalBufferViews(){Module[\"HEAP8\"]=HEAP8=new Int8Array(buffer);Module[\"HEAP16\"]=HEAP16=new Int16Array(buffer);Module[\"HEAP32\"]=HEAP32=new Int32Array(buffer);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buffer);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buffer);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buffer);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buffer);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE,STATICTOP,staticSealed;var STACK_BASE,STACKTOP,STACK_MAX;var DYNAMIC_BASE,DYNAMICTOP_PTR;STATIC_BASE=STATICTOP=STACK_BASE=STACKTOP=STACK_MAX=DYNAMIC_BASE=DYNAMICTOP_PTR=0;staticSealed=false;function abortOnCannotGrowMemory(){abort(\"Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value \"+TOTAL_MEMORY+\", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 \")}function enlargeMemory(){abortOnCannotGrowMemory()}var TOTAL_STACK=Module[\"TOTAL_STACK\"]||5242880;var TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||16777216;if(TOTAL_MEMORY<TOTAL_STACK)err(\"TOTAL_MEMORY should be larger than TOTAL_STACK, was \"+TOTAL_MEMORY+\"! (TOTAL_STACK=\"+TOTAL_STACK+\")\");if(Module[\"buffer\"]){buffer=Module[\"buffer\"]}else{if(typeof WebAssembly===\"object\"&&typeof WebAssembly.Memory===\"function\"){Module[\"wasmMemory\"]=new WebAssembly.Memory({\"initial\":TOTAL_MEMORY/WASM_PAGE_SIZE,\"maximum\":TOTAL_MEMORY/WASM_PAGE_SIZE});buffer=Module[\"wasmMemory\"].buffer}else{buffer=new ArrayBuffer(TOTAL_MEMORY)}Module[\"buffer\"]=buffer}updateGlobalBufferViews();function getTotalMemory(){return TOTAL_MEMORY}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}function integrateWasmJS(){var wasmTextFile=\"\";var wasmBinaryFile=\"data:application/octet-stream;base64,\";var asmjsCodeFile=\"\";if(!isDataURI(wasmTextFile)){wasmTextFile=locateFile(wasmTextFile)}if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}if(!isDataURI(asmjsCodeFile)){asmjsCodeFile=locateFile(asmjsCodeFile)}var wasmPageSize=64*1024;var info={\"global\":null,\"env\":null,\"asm2wasm\":asm2wasmImports,\"parent\":Module};var exports=null;function mergeMemory(newBuffer){var oldBuffer=Module[\"buffer\"];if(newBuffer.byteLength<oldBuffer.byteLength){err(\"the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here\")}var oldView=new Int8Array(oldBuffer);var newView=new Int8Array(newBuffer);newView.set(oldView);updateGlobalBuffer(newBuffer);updateGlobalBufferViews()}function getBinary(){try{if(Module[\"wasmBinary\"]){return new Uint8Array(Module[\"wasmBinary\"])}var binary=tryParseAsDataURI(wasmBinaryFile);if(binary){return binary}if(Module[\"readBinary\"]){return Module[\"readBinary\"](wasmBinaryFile)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!Module[\"wasmBinary\"]&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then((function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()})).catch((function(){return getBinary()}))}return new Promise((function(resolve,reject){resolve(getBinary())}))}function doNativeWasm(global,env,providedBuffer){if(typeof WebAssembly!==\"object\"){err(\"no native wasm support detected\");return false}if(!(Module[\"wasmMemory\"]instanceof WebAssembly.Memory)){err(\"no native wasm Memory in use\");return false}env[\"memory\"]=Module[\"wasmMemory\"];info[\"global\"]={\"NaN\":NaN,\"Infinity\":Infinity};info[\"global.Math\"]=Math;info[\"env\"]=env;function receiveInstance(instance,module){exports=instance.exports;if(exports.memory)mergeMemory(exports.memory);Module[\"asm\"]=exports;Module[\"usingWasm\"]=true;removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"],output[\"module\"])}function instantiateArrayBuffer(receiver){getBinaryPromise().then((function(binary){return WebAssembly.instantiate(binary,info)})).then(receiver,(function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)}))}if(!Module[\"wasmBinary\"]&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){WebAssembly.instantiateStreaming(fetch(wasmBinaryFile,{credentials:\"same-origin\"}),info).then(receiveInstantiatedSource,(function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");instantiateArrayBuffer(receiveInstantiatedSource)}))}else{instantiateArrayBuffer(receiveInstantiatedSource)}return{}}Module[\"asmPreload\"]=Module[\"asm\"];var asmjsReallocBuffer=Module[\"reallocBuffer\"];var wasmReallocBuffer=(function(size){var PAGE_MULTIPLE=Module[\"usingWasm\"]?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE;size=alignUp(size,PAGE_MULTIPLE);var old=Module[\"buffer\"];var oldSize=old.byteLength;if(Module[\"usingWasm\"]){try{var result=Module[\"wasmMemory\"].grow((size-oldSize)/wasmPageSize);if(result!==(-1|0)){return Module[\"buffer\"]=Module[\"wasmMemory\"].buffer}else{return null}}catch(e){return null}}});Module[\"reallocBuffer\"]=(function(size){if(finalMethod===\"asmjs\"){return asmjsReallocBuffer(size)}else{return wasmReallocBuffer(size)}});var finalMethod=\"\";Module[\"asm\"]=(function(global,env,providedBuffer){if(!env[\"table\"]){var TABLE_SIZE=Module[\"wasmTableSize\"];if(TABLE_SIZE===undefined)TABLE_SIZE=1024;var MAX_TABLE_SIZE=Module[\"wasmMaxTableSize\"];if(typeof WebAssembly===\"object\"&&typeof WebAssembly.Table===\"function\"){if(MAX_TABLE_SIZE!==undefined){env[\"table\"]=new WebAssembly.Table({\"initial\":TABLE_SIZE,\"maximum\":MAX_TABLE_SIZE,\"element\":\"anyfunc\"})}else{env[\"table\"]=new WebAssembly.Table({\"initial\":TABLE_SIZE,element:\"anyfunc\"})}}else{env[\"table\"]=new Array(TABLE_SIZE)}Module[\"wasmTable\"]=env[\"table\"]}if(!env[\"__memory_base\"]){env[\"__memory_base\"]=Module[\"STATIC_BASE\"]}if(!env[\"__table_base\"]){env[\"__table_base\"]=0}var exports;exports=doNativeWasm(global,env,providedBuffer);assert(exports,\"no binaryen method succeeded.\");return exports})}integrateWasmJS();STATIC_BASE=GLOBAL_BASE;STATICTOP=STATIC_BASE+84736;__ATINIT__.push({func:(function(){__GLOBAL__sub_I_bind_imgui_cpp()})},{func:(function(){__GLOBAL__sub_I_bind_cpp()})});var STATIC_BUMP=84736;Module[\"STATIC_BASE\"]=STATIC_BASE;Module[\"STATIC_BUMP\"]=STATIC_BUMP;STATICTOP+=16;function ___assert_fail(condition,filename,line,func){abort(\"Assertion failed: \"+Pointer_stringify(condition)+\", at: \"+[filename?Pointer_stringify(filename):\"unknown filename\",line,func?Pointer_stringify(func):\"unknown function\"])}function ___cxa_allocate_exception(size){return _malloc(size)}function __ZSt18uncaught_exceptionv(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:(function(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var key in EXCEPTIONS.infos){var ptr=+key;var adj=EXCEPTIONS.infos[ptr].adjusted;var len=adj.length;for(var i=0;i<len;i++){if(adj[i]===adjusted){return ptr}}}return adjusted}),addRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++}),decRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0&&!info.rethrown){if(info.destructor){Module[\"dynCall_vi\"](info.destructor,ptr)}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr)}}),clearRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0})};function ___cxa_throw(ptr,type,destructor){EXCEPTIONS.infos[ptr]={ptr:ptr,adjusted:[ptr],type:type,destructor:destructor,refcount:0,caught:false,rethrown:false};EXCEPTIONS.last=ptr;if(!(\"uncaught_exception\"in __ZSt18uncaught_exceptionv)){__ZSt18uncaught_exceptionv.uncaught_exception=1}else{__ZSt18uncaught_exceptionv.uncaught_exception++}throw ptr+\" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.\"}function ___lock(){}var SYSCALLS={buffers:[null,[],[]],printChar:(function(stream,curr){var buffer=SYSCALLS.buffers[stream];assert(buffer);if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}),varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall145(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doReadv(stream,iov,iovcnt)}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.get(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(stream,HEAPU8[ptr+j])}ret+=len}return ret}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___setErrNo(value){if(Module[\"___errno_location\"])HEAP32[Module[\"___errno_location\"]()>>2]=value;return value}function ___syscall221(which,varargs){SYSCALLS.varargs=varargs;try{return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall5(which,varargs){SYSCALLS.varargs=varargs;try{var pathname=SYSCALLS.getStr(),flags=SYSCALLS.get(),mode=SYSCALLS.get();var stream=FS.open(pathname,flags,mode);return stream.fd}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall54(which,varargs){SYSCALLS.varargs=varargs;try{return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___unlock(){}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return(new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\"))(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,(function(message){this.name=errorName;this.message=message;var stack=(new Error(message)).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}}));errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=(function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}});return errorClass}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach((function(type){typeDependencies[type]=dependentTypes}));function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push((function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}}))}}));if(0===unregisteredTypes.length){onComplete(typeConverters)}}function registerType(rawType,registeredInstance,options){options=options||{};if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach((function(cb){cb()}))}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(wt){return!!wt}),\"toWireType\":(function(destructors,o){return o?trueValue:falseValue}),\"argPackAdvance\":8,\"readValueFromPointer\":(function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])}),destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}});clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function runDestructor(handle){var $$=handle.$$;if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}this.$$.count.value-=1;var toDelete=0===this.$$.count.value;if(toDelete){runDestructor(this)}if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}var delayFunction=undefined;var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}var registeredPointers={};function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=(function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)});proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,__emval_register((function(){clonedHandle[\"delete\"]()})));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return Object.create(prototype,{$$:{value:record}})}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(dynCall){var args=[];for(var i=1;i<signature.length;++i){args.push(\"a\"+i)}var name=\"dynCall_\"+signature+\"_\"+rawFunction;var body=\"return function \"+name+\"(\"+args.join(\", \")+\") {\\n\";body+=\"    return dynCall(rawFunction\"+(args.length?\", \":\"\")+args.join(\", \")+\");\\n\";body+=\"};\\n\";return(new Function(\"dynCall\",\"rawFunction\",body))(dynCall,rawFunction)}var fp;if(Module[\"FUNCTION_TABLE_\"+signature]!==undefined){fp=Module[\"FUNCTION_TABLE_\"+signature][rawFunction]}else if(typeof FUNCTION_TABLE!==\"undefined\"){fp=FUNCTION_TABLE[rawFunction]}else{var dc=Module[\"dynCall_\"+signature];if(dc===undefined){dc=Module[\"dynCall_\"+signature.replace(/f/g,\"d\")];if(dc===undefined){throwBindingError(\"No dynCall invoker for signature: \"+signature)}}fp=makeDynCaller(dc)}if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,(function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])}));whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],(function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,(function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)}));var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]}))}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],(function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=function unboundTypeHandler(){throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)};whenDependentTypesAreResolved([],rawArgTypes,(function(argTypes){classType.registeredClass.constructor_body[argCount-1]=function constructor_body(){if(arguments.length!==argCount-1){throwBindingError(humanName+\" called with \"+arguments.length+\" arguments, expected \"+(argCount-1))}var destructors=[];var args=new Array(argCount);args[0]=rawConstructor;for(var i=1;i<argCount;++i){args[i]=argTypes[i][\"toWireType\"](destructors,arguments[i-1])}var ptr=invoker.apply(null,args);runDestructors(destructors);return argTypes[0][\"fromWireType\"](ptr)};return[]}));return[]}))}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",(function(){}));dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],(function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,(function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]}));return[]}))}function validateThis(this_,classType,humanName){if(!(this_ instanceof Object)){throwBindingError(humanName+' with invalid \"this\": '+this_)}if(!(this_ instanceof classType.registeredClass.constructor)){throwBindingError(humanName+' incompatible with \"this\" of type '+this_.constructor.name)}if(!this_.$$.ptr){throwBindingError(\"cannot call emscripten binding method \"+humanName+\" on deleted object\")}return upcastPointer(this_.$$.ptr,this_.$$.ptrType.registeredClass,classType.registeredClass)}function __embind_register_class_property(classType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){fieldName=readLatin1String(fieldName);getter=embind__requireFunction(getterSignature,getter);whenDependentTypesAreResolved([],[classType],(function(classType){classType=classType[0];var humanName=classType.name+\".\"+fieldName;var desc={get:(function(){throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])}),enumerable:true,configurable:true};if(setter){desc.set=(function(){throwUnboundTypeError(\"Cannot access \"+humanName+\" due to unbound types\",[getterReturnType,setterArgumentType])})}else{desc.set=(function(v){throwBindingError(humanName+\" is a read-only property\")})}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);whenDependentTypesAreResolved([],setter?[getterReturnType,setterArgumentType]:[getterReturnType],(function(types){var getterReturnType=types[0];var desc={get:(function(){var ptr=validateThis(this,classType,humanName+\" getter\");return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))}),enumerable:true};if(setter){setter=embind__requireFunction(setterSignature,setter);var setterArgumentType=types[1];desc.set=(function(v){var ptr=validateThis(this,classType,humanName+\" setter\");var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,v));runDestructors(destructors)})}Object.defineProperty(classType.registeredClass.instancePrototype,fieldName,desc);return[]}));return[]}))}function __embind_register_constant(name,type,value){name=readLatin1String(name);whenDependentTypesAreResolved([],[type],(function(type){type=type[0];Module[name]=type[\"fromWireType\"](value);return[]}))}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}function __emval_register(value){switch(value){case undefined:{return 1};case null:{return 2};case true:{return 3};case false:{return 4};default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(handle){var rv=emval_handle_array[handle].value;__emval_decref(handle);return rv}),\"toWireType\":(function(destructors,value){return __emval_register(value)}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return(function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])});case 3:return(function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])});default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":(function(value){return value}),\"toWireType\":(function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}return value}),\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,(function(){throwUnboundTypeError(\"Cannot call \"+name+\" due to unbound types\",argTypes)}),argCount-1);whenDependentTypesAreResolved([],argTypes,(function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn),argCount-1);return[]}))}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=(function(value){return value});if(minRange===0){var bitshift=32-8*size;fromWireType=(function(value){return value<<bitshift>>>bitshift})}var isUnsignedType=name.indexOf(\"unsigned\")!=-1;registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":(function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}if(value<minRange||value>maxRange){throw new TypeError('Passing a number \"'+_embind_repr(value)+'\" from JS side to C/C++ side to an argument of type \"'+name+'\", which is outside the valid range ['+minRange+\", \"+maxRange+\"]!\")}return isUnsignedType?value>>>0:value|0}),\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(heap[\"buffer\"],data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":(function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var endChar=HEAPU8[value+4+length];var endCharSwap=0;if(endChar!=0){endCharSwap=endChar;HEAPU8[value+4+length]=0}var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(HEAPU8[currentBytePtr]==0){var stringSegment=UTF8ToString(decodeStartPtr);if(str===undefined)str=stringSegment;else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}if(endCharSwap!=0)HEAPU8[value+4+length]=endCharSwap}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str}),\"toWireType\":(function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=(function(){return lengthBytesUTF8(value)})}else{getLength=(function(){return value.length})}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:(function(ptr){_free(ptr)})})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var getHeap,shift;if(charSize===2){getHeap=(function(){return HEAPU16});shift=1}else if(charSize===4){getHeap=(function(){return HEAPU32});shift=2}registerType(rawType,{name:name,\"fromWireType\":(function(value){var HEAP=getHeap();var length=HEAPU32[value>>2];var a=new Array(length);var start=value+4>>shift;for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAP[start+i])}_free(value);return a.join(\"\")}),\"toWireType\":(function(destructors,value){var HEAP=getHeap();var length=value.length;var ptr=_malloc(4+length*charSize);HEAPU32[ptr>>2]=length;var start=ptr+4>>shift;for(var i=0;i<length;++i){HEAP[start+i]=value.charCodeAt(i)}if(destructors!==null){destructors.push(_free,ptr)}return ptr}),\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:(function(ptr){_free(ptr)})})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":(function(){return undefined}),\"toWireType\":(function(destructors,o){return undefined})})}function requireHandle(handle){if(!handle){throwBindingError(\"Cannot use deleted val. handle = \"+handle)}return emval_handle_array[handle].value}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __emval_as(handle,returnType,destructorsRef){handle=requireHandle(handle);returnType=requireRegisteredType(returnType,\"emval::as\");var destructors=[];var rd=__emval_register(destructors);HEAP32[destructorsRef>>2]=rd;return returnType[\"toWireType\"](destructors,handle)}function __emval_lookupTypes(argCount,argTypes,argWireTypes){var a=new Array(argCount);for(var i=0;i<argCount;++i){a[i]=requireRegisteredType(HEAP32[(argTypes>>2)+i],\"parameter \"+i)}return a}function __emval_call(handle,argCount,argTypes,argv){handle=requireHandle(handle);var types=__emval_lookupTypes(argCount,argTypes);var args=new Array(argCount);for(var i=0;i<argCount;++i){var type=types[i];args[i]=type[\"readValueFromPointer\"](argv);argv+=type[\"argPackAdvance\"]}var rv=handle.apply(undefined,args);return __emval_register(rv)}var emval_symbols={};function getStringOrSymbol(address){var symbol=emval_symbols[address];if(symbol===undefined){return readLatin1String(address)}else{return symbol}}var emval_methodCallers=[];function __emval_call_void_method(caller,handle,methodName,args){caller=emval_methodCallers[caller];handle=requireHandle(handle);methodName=getStringOrSymbol(methodName);caller(handle,methodName,null,args)}function __emval_delete(object,property){object=requireHandle(object);property=requireHandle(property);return delete object[property]}function __emval_addMethodCaller(caller){var id=emval_methodCallers.length;emval_methodCallers.push(caller);return id}function __emval_get_method_caller(argCount,argTypes){var types=__emval_lookupTypes(argCount,argTypes);var retType=types[0];var signatureName=retType.name+\"_$\"+types.slice(1).map((function(t){return t.name})).join(\"_\")+\"$\";var params=[\"retType\"];var args=[retType];var argsList=\"\";for(var i=0;i<argCount-1;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;params.push(\"argType\"+i);args.push(types[1+i])}var functionName=makeLegalFunctionName(\"methodCaller_\"+signatureName);var functionBody=\"return function \"+functionName+\"(handle, name, destructors, args) {\\n\";var offset=0;for(var i=0;i<argCount-1;++i){functionBody+=\"    var arg\"+i+\" = argType\"+i+\".readValueFromPointer(args\"+(offset?\"+\"+offset:\"\")+\");\\n\";offset+=types[i+1][\"argPackAdvance\"]}functionBody+=\"    var rv = handle[name](\"+argsList+\");\\n\";for(var i=0;i<argCount-1;++i){if(types[i+1][\"deleteObject\"]){functionBody+=\"    argType\"+i+\".deleteObject(arg\"+i+\");\\n\"}}if(!retType.isVoid){functionBody+=\"    return retType.toWireType(destructors, rv);\\n\"}functionBody+=\"};\\n\";params.push(functionBody);var invokerFunction=new_(Function,params).apply(null,args);return __emval_addMethodCaller(invokerFunction)}function __emval_get_property(handle,key){handle=requireHandle(handle);key=requireHandle(key);return __emval_register(handle[key])}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function __emval_new_array(){return __emval_register([])}function __emval_new_cstring(v){return __emval_register(getStringOrSymbol(v))}function __emval_new_object(){return __emval_register({})}function __emval_run_destructors(handle){var destructors=emval_handle_array[handle].value;runDestructors(destructors);__emval_decref(handle)}function __emval_set_property(handle,key,value){handle=requireHandle(handle);key=requireHandle(key);value=requireHandle(value);handle[key]=value}function __emval_strictly_equals(first,second){first=requireHandle(first);second=requireHandle(second);return first===second}function __emval_take_value(type,argv){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](argv);return __emval_register(v)}function __emval_typeof(handle){handle=requireHandle(handle);return __emval_register(typeof handle)}function _abort(){Module[\"abort\"]()}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}var PTHREAD_SPECIFIC={};function _pthread_getspecific(key){return PTHREAD_SPECIFIC[key]||0}var PTHREAD_SPECIFIC_NEXT_KEY=1;var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _pthread_key_create(key,destructor){if(key==0){return ERRNO_CODES.EINVAL}HEAP32[key>>2]=PTHREAD_SPECIFIC_NEXT_KEY;PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY]=0;PTHREAD_SPECIFIC_NEXT_KEY++;return 0}function _pthread_once(ptr,func){if(!_pthread_once.seen)_pthread_once.seen={};if(ptr in _pthread_once.seen)return;Module[\"dynCall_v\"](func);_pthread_once.seen[ptr]=1}function _pthread_setspecific(key,value){if(!(key in PTHREAD_SPECIFIC)){return ERRNO_CODES.EINVAL}PTHREAD_SPECIFIC[key]=value;return 0}embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");init_ClassHandle();init_RegisteredPointer();init_embind();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();DYNAMICTOP_PTR=staticAlloc(4);STACK_BASE=STACKTOP=alignMemory(STATICTOP);STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=alignMemory(STACK_MAX);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;staticSealed=true;var ASSERTIONS=false;function intArrayToString(array){var ret=[];for(var i=0;i<array.length;i++){var chr=array[i];if(chr>255){if(ASSERTIONS){assert(false,\"Character code \"+chr+\" (\"+String.fromCharCode(chr)+\")  at offset \"+i+\" not in 0x00-0xFF.\")}chr&=255}ret.push(String.fromCharCode(chr))}return ret.join(\"\")}var decodeBase64=typeof atob===\"function\"?atob:(function(input){var keyStr=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";var output=\"\";var chr1,chr2,chr3;var enc1,enc2,enc3,enc4;var i=0;input=input.replace(/[^A-Za-z0-9\\+\\/\\=]/g,\"\");do{enc1=keyStr.indexOf(input.charAt(i++));enc2=keyStr.indexOf(input.charAt(i++));enc3=keyStr.indexOf(input.charAt(i++));enc4=keyStr.indexOf(input.charAt(i++));chr1=enc1<<2|enc2>>4;chr2=(enc2&15)<<4|enc3>>2;chr3=(enc3&3)<<6|enc4;output=output+String.fromCharCode(chr1);if(enc3!==64){output=output+String.fromCharCode(chr2)}if(enc4!==64){output=output+String.fromCharCode(chr3)}}while(i<input.length);return output});function intArrayFromBase64(s){if(typeof ENVIRONMENT_IS_NODE===\"boolean\"&&ENVIRONMENT_IS_NODE){var buf;try{buf=Buffer.from(s,\"base64\")}catch(_){buf=new Buffer(s,\"base64\")}return new Uint8Array(buf.buffer,buf.byteOffset,buf.byteLength)}try{var decoded=decodeBase64(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}catch(_){throw new Error(\"Converting base64 string to bytes failed.\")}}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}Module[\"wasmTableSize\"]=1438;Module[\"wasmMaxTableSize\"]=1438;Module.asmGlobalArg={};Module.asmLibraryArg={\"g\":abort,\"aa\":enlargeMemory,\"Y\":getTotalMemory,\"V\":abortOnCannotGrowMemory,\"c\":___assert_fail,\"y\":___cxa_allocate_exception,\"x\":___cxa_throw,\"G\":___lock,\"w\":___setErrNo,\"F\":___syscall140,\"$\":___syscall145,\"E\":___syscall146,\"s\":___syscall221,\"_\":___syscall5,\"D\":___syscall54,\"C\":___syscall6,\"v\":___unlock,\"Z\":__embind_register_bool,\"i\":__embind_register_class,\"r\":__embind_register_class_constructor,\"e\":__embind_register_class_function,\"d\":__embind_register_class_property,\"B\":__embind_register_constant,\"X\":__embind_register_emval,\"A\":__embind_register_float,\"f\":__embind_register_function,\"m\":__embind_register_integer,\"k\":__embind_register_memory_view,\"z\":__embind_register_std_string,\"W\":__embind_register_std_wstring,\"U\":__embind_register_void,\"j\":__emval_as,\"T\":__emval_call,\"q\":__emval_call_void_method,\"u\":__emval_decref,\"S\":__emval_delete,\"p\":__emval_get_method_caller,\"l\":__emval_get_property,\"t\":__emval_incref,\"R\":__emval_new_array,\"Q\":__emval_new_cstring,\"P\":__emval_new_object,\"O\":__emval_run_destructors,\"o\":__emval_set_property,\"N\":__emval_strictly_equals,\"h\":__emval_take_value,\"M\":__emval_typeof,\"n\":_abort,\"L\":_emscripten_memcpy_big,\"K\":_pthread_getspecific,\"J\":_pthread_key_create,\"I\":_pthread_once,\"H\":_pthread_setspecific,\"a\":DYNAMICTOP_PTR,\"b\":STACKTOP};var asm=Module[\"asm\"](Module.asmGlobalArg,Module.asmLibraryArg,buffer);Module[\"asm\"]=asm;var __GLOBAL__sub_I_bind_cpp=Module[\"__GLOBAL__sub_I_bind_cpp\"]=(function(){return Module[\"asm\"][\"ba\"].apply(null,arguments)});var __GLOBAL__sub_I_bind_imgui_cpp=Module[\"__GLOBAL__sub_I_bind_imgui_cpp\"]=(function(){return Module[\"asm\"][\"ca\"].apply(null,arguments)});var ___getTypeName=Module[\"___getTypeName\"]=(function(){return Module[\"asm\"][\"da\"].apply(null,arguments)});var _free=Module[\"_free\"]=(function(){return Module[\"asm\"][\"ea\"].apply(null,arguments)});var _malloc=Module[\"_malloc\"]=(function(){return Module[\"asm\"][\"fa\"].apply(null,arguments)});var dynCall_d=Module[\"dynCall_d\"]=(function(){return Module[\"asm\"][\"ga\"].apply(null,arguments)});var dynCall_di=Module[\"dynCall_di\"]=(function(){return Module[\"asm\"][\"ha\"].apply(null,arguments)});var dynCall_f=Module[\"dynCall_f\"]=(function(){return Module[\"asm\"][\"ia\"].apply(null,arguments)});var dynCall_fi=Module[\"dynCall_fi\"]=(function(){return Module[\"asm\"][\"ja\"].apply(null,arguments)});var dynCall_fii=Module[\"dynCall_fii\"]=(function(){return Module[\"asm\"][\"ka\"].apply(null,arguments)});var dynCall_fiii=Module[\"dynCall_fiii\"]=(function(){return Module[\"asm\"][\"la\"].apply(null,arguments)});var dynCall_i=Module[\"dynCall_i\"]=(function(){return Module[\"asm\"][\"ma\"].apply(null,arguments)});var dynCall_ii=Module[\"dynCall_ii\"]=(function(){return Module[\"asm\"][\"na\"].apply(null,arguments)});var dynCall_iif=Module[\"dynCall_iif\"]=(function(){return Module[\"asm\"][\"oa\"].apply(null,arguments)});var dynCall_iiff=Module[\"dynCall_iiff\"]=(function(){return Module[\"asm\"][\"pa\"].apply(null,arguments)});var dynCall_iifif=Module[\"dynCall_iifif\"]=(function(){return Module[\"asm\"][\"qa\"].apply(null,arguments)});var dynCall_iii=Module[\"dynCall_iii\"]=(function(){return Module[\"asm\"][\"ra\"].apply(null,arguments)});var dynCall_iiiddii=Module[\"dynCall_iiiddii\"]=(function(){return Module[\"asm\"][\"sa\"].apply(null,arguments)});var dynCall_iiif=Module[\"dynCall_iiif\"]=(function(){return Module[\"asm\"][\"ta\"].apply(null,arguments)});var dynCall_iiiff=Module[\"dynCall_iiiff\"]=(function(){return Module[\"asm\"][\"ua\"].apply(null,arguments)});var dynCall_iiifffiii=Module[\"dynCall_iiifffiii\"]=(function(){return Module[\"asm\"][\"va\"].apply(null,arguments)});var dynCall_iiifi=Module[\"dynCall_iiifi\"]=(function(){return Module[\"asm\"][\"wa\"].apply(null,arguments)});var dynCall_iiifif=Module[\"dynCall_iiifif\"]=(function(){return Module[\"asm\"][\"xa\"].apply(null,arguments)});var dynCall_iiii=Module[\"dynCall_iiii\"]=(function(){return Module[\"asm\"][\"ya\"].apply(null,arguments)});var dynCall_iiiiddii=Module[\"dynCall_iiiiddii\"]=(function(){return Module[\"asm\"][\"za\"].apply(null,arguments)});var dynCall_iiiif=Module[\"dynCall_iiiif\"]=(function(){return Module[\"asm\"][\"Aa\"].apply(null,arguments)});var dynCall_iiiifi=Module[\"dynCall_iiiifi\"]=(function(){return Module[\"asm\"][\"Ba\"].apply(null,arguments)});var dynCall_iiiifii=Module[\"dynCall_iiiifii\"]=(function(){return Module[\"asm\"][\"Ca\"].apply(null,arguments)});var dynCall_iiiii=Module[\"dynCall_iiiii\"]=(function(){return Module[\"asm\"][\"Da\"].apply(null,arguments)});var dynCall_iiiiii=Module[\"dynCall_iiiiii\"]=(function(){return Module[\"asm\"][\"Ea\"].apply(null,arguments)});var dynCall_iiiiiii=Module[\"dynCall_iiiiiii\"]=(function(){return Module[\"asm\"][\"Fa\"].apply(null,arguments)});var dynCall_iiiiiiii=Module[\"dynCall_iiiiiiii\"]=(function(){return Module[\"asm\"][\"Ga\"].apply(null,arguments)});var dynCall_iiiiiiiii=Module[\"dynCall_iiiiiiiii\"]=(function(){return Module[\"asm\"][\"Ha\"].apply(null,arguments)});var dynCall_iiiiiiiiii=Module[\"dynCall_iiiiiiiiii\"]=(function(){return Module[\"asm\"][\"Ia\"].apply(null,arguments)});var dynCall_iiiiiiiiiii=Module[\"dynCall_iiiiiiiiiii\"]=(function(){return Module[\"asm\"][\"Ja\"].apply(null,arguments)});var dynCall_v=Module[\"dynCall_v\"]=(function(){return Module[\"asm\"][\"Ka\"].apply(null,arguments)});var dynCall_vf=Module[\"dynCall_vf\"]=(function(){return Module[\"asm\"][\"La\"].apply(null,arguments)});var dynCall_vff=Module[\"dynCall_vff\"]=(function(){return Module[\"asm\"][\"Ma\"].apply(null,arguments)});var dynCall_vfffiii=Module[\"dynCall_vfffiii\"]=(function(){return Module[\"asm\"][\"Na\"].apply(null,arguments)});var dynCall_vfii=Module[\"dynCall_vfii\"]=(function(){return Module[\"asm\"][\"Oa\"].apply(null,arguments)});var dynCall_vi=Module[\"dynCall_vi\"]=(function(){return Module[\"asm\"][\"Pa\"].apply(null,arguments)});var dynCall_vif=Module[\"dynCall_vif\"]=(function(){return Module[\"asm\"][\"Qa\"].apply(null,arguments)});var dynCall_viff=Module[\"dynCall_viff\"]=(function(){return Module[\"asm\"][\"Ra\"].apply(null,arguments)});var dynCall_vifffiii=Module[\"dynCall_vifffiii\"]=(function(){return Module[\"asm\"][\"Sa\"].apply(null,arguments)});var dynCall_vifi=Module[\"dynCall_vifi\"]=(function(){return Module[\"asm\"][\"Ta\"].apply(null,arguments)});var dynCall_vifii=Module[\"dynCall_vifii\"]=(function(){return Module[\"asm\"][\"Ua\"].apply(null,arguments)});var dynCall_vii=Module[\"dynCall_vii\"]=(function(){return Module[\"asm\"][\"Va\"].apply(null,arguments)});var dynCall_viif=Module[\"dynCall_viif\"]=(function(){return Module[\"asm\"][\"Wa\"].apply(null,arguments)});var dynCall_viifffi=Module[\"dynCall_viifffi\"]=(function(){return Module[\"asm\"][\"Xa\"].apply(null,arguments)});var dynCall_viifffiii=Module[\"dynCall_viifffiii\"]=(function(){return Module[\"asm\"][\"Ya\"].apply(null,arguments)});var dynCall_viifi=Module[\"dynCall_viifi\"]=(function(){return Module[\"asm\"][\"Za\"].apply(null,arguments)});var dynCall_viifii=Module[\"dynCall_viifii\"]=(function(){return Module[\"asm\"][\"_a\"].apply(null,arguments)});var dynCall_viifiif=Module[\"dynCall_viifiif\"]=(function(){return Module[\"asm\"][\"$a\"].apply(null,arguments)});var dynCall_viifiii=Module[\"dynCall_viifiii\"]=(function(){return Module[\"asm\"][\"ab\"].apply(null,arguments)});var dynCall_viifiiifi=Module[\"dynCall_viifiiifi\"]=(function(){return Module[\"asm\"][\"bb\"].apply(null,arguments)});var dynCall_viii=Module[\"dynCall_viii\"]=(function(){return Module[\"asm\"][\"cb\"].apply(null,arguments)});var dynCall_viiif=Module[\"dynCall_viiif\"]=(function(){return Module[\"asm\"][\"db\"].apply(null,arguments)});var dynCall_viiifffi=Module[\"dynCall_viiifffi\"]=(function(){return Module[\"asm\"][\"eb\"].apply(null,arguments)});var dynCall_viiifi=Module[\"dynCall_viiifi\"]=(function(){return Module[\"asm\"][\"fb\"].apply(null,arguments)});var dynCall_viiifii=Module[\"dynCall_viiifii\"]=(function(){return Module[\"asm\"][\"gb\"].apply(null,arguments)});var dynCall_viiifiif=Module[\"dynCall_viiifiif\"]=(function(){return Module[\"asm\"][\"hb\"].apply(null,arguments)});var dynCall_viiifiii=Module[\"dynCall_viiifiii\"]=(function(){return Module[\"asm\"][\"ib\"].apply(null,arguments)});var dynCall_viiifiiifi=Module[\"dynCall_viiifiiifi\"]=(function(){return Module[\"asm\"][\"jb\"].apply(null,arguments)});var dynCall_viiii=Module[\"dynCall_viiii\"]=(function(){return Module[\"asm\"][\"kb\"].apply(null,arguments)});var dynCall_viiiif=Module[\"dynCall_viiiif\"]=(function(){return Module[\"asm\"][\"lb\"].apply(null,arguments)});var dynCall_viiiifi=Module[\"dynCall_viiiifi\"]=(function(){return Module[\"asm\"][\"mb\"].apply(null,arguments)});var dynCall_viiiifif=Module[\"dynCall_viiiifif\"]=(function(){return Module[\"asm\"][\"nb\"].apply(null,arguments)});var dynCall_viiiii=Module[\"dynCall_viiiii\"]=(function(){return Module[\"asm\"][\"ob\"].apply(null,arguments)});var dynCall_viiiiif=Module[\"dynCall_viiiiif\"]=(function(){return Module[\"asm\"][\"pb\"].apply(null,arguments)});var dynCall_viiiiifi=Module[\"dynCall_viiiiifi\"]=(function(){return Module[\"asm\"][\"qb\"].apply(null,arguments)});var dynCall_viiiiifif=Module[\"dynCall_viiiiifif\"]=(function(){return Module[\"asm\"][\"rb\"].apply(null,arguments)});var dynCall_viiiiii=Module[\"dynCall_viiiiii\"]=(function(){return Module[\"asm\"][\"sb\"].apply(null,arguments)});var dynCall_viiiiiif=Module[\"dynCall_viiiiiif\"]=(function(){return Module[\"asm\"][\"tb\"].apply(null,arguments)});var dynCall_viiiiiifi=Module[\"dynCall_viiiiiifi\"]=(function(){return Module[\"asm\"][\"ub\"].apply(null,arguments)});var dynCall_viiiiiii=Module[\"dynCall_viiiiiii\"]=(function(){return Module[\"asm\"][\"vb\"].apply(null,arguments)});var dynCall_viiiiiiif=Module[\"dynCall_viiiiiiif\"]=(function(){return Module[\"asm\"][\"wb\"].apply(null,arguments)});var dynCall_viiiiiiifi=Module[\"dynCall_viiiiiiifi\"]=(function(){return Module[\"asm\"][\"xb\"].apply(null,arguments)});var dynCall_viiiiiiii=Module[\"dynCall_viiiiiiii\"]=(function(){return Module[\"asm\"][\"yb\"].apply(null,arguments)});var dynCall_viiiiiiiifi=Module[\"dynCall_viiiiiiiifi\"]=(function(){return Module[\"asm\"][\"zb\"].apply(null,arguments)});var dynCall_viiiiiiiii=Module[\"dynCall_viiiiiiiii\"]=(function(){return Module[\"asm\"][\"Ab\"].apply(null,arguments)});var dynCall_viiiiiiiiii=Module[\"dynCall_viiiiiiiiii\"]=(function(){return Module[\"asm\"][\"Bb\"].apply(null,arguments)});var dynCall_viiiiiiiiiii=Module[\"dynCall_viiiiiiiiiii\"]=(function(){return Module[\"asm\"][\"Cb\"].apply(null,arguments)});var dynCall_viiiiiiiiiiii=Module[\"dynCall_viiiiiiiiiiii\"]=(function(){return Module[\"asm\"][\"Db\"].apply(null,arguments)});Module[\"asm\"]=asm;Module[\"then\"]=(function(func){if(Module[\"calledRun\"]){func(Module)}else{var old=Module[\"onRuntimeInitialized\"];Module[\"onRuntimeInitialized\"]=(function(){if(old)old();func(Module)})}return Module});function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;dependenciesFulfilled=function runCaller(){if(!Module[\"calledRun\"])run();if(!Module[\"calledRun\"])dependenciesFulfilled=runCaller};function run(args){args=args||Module[\"arguments\"];if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module[\"calledRun\"])return;function doRun(){if(Module[\"calledRun\"])return;Module[\"calledRun\"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout((function(){setTimeout((function(){Module[\"setStatus\"](\"\")}),1);doRun()}),1)}else{doRun()}}Module[\"run\"]=run;function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}if(what!==undefined){out(what);err(what);what=JSON.stringify(what)}else{what=\"\"}ABORT=true;EXITSTATUS=1;throw\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\"}Module[\"abort\"]=abort;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}Module[\"noExitRuntime\"]=true;run()\r\n\r\n\r\n\r\n\r\n\r\n  return Module;\r\n}\r\n);\r\n})();\r\nif (typeof exports === 'object' && typeof module === 'object')\r\n    module.exports  =  Module;\r\n  else if (typeof define === 'function' && define['amd'])\r\n    define([], function() { return Module; });\r\n  else if (typeof exports === 'object')\r\n    exports[\"Module\"] = Module;\r\n\r\n","//-----------------------------------------------------------------------------\r\n// COMPILE-TIME OPTIONS FOR DEAR IMGUI\r\n// Most options (memory allocation, clipboard callbacks, etc.) can be set at runtime via the ImGuiIO structure - ImGui::GetIO().\r\n//-----------------------------------------------------------------------------\r\n// A) You may edit imconfig.h (and not overwrite it when updating imgui, or maintain a patch/branch with your modifications to imconfig.h)\r\n// B) or add configuration directives in your own file and compile with #define IMGUI_USER_CONFIG \"myfilename.h\"\r\n// If you do so you need to make sure that configuration settings are defined consistently _everywhere_ dear imgui is used, which include\r\n// the imgui*.cpp files but also _any_ of your code that uses imgui. This is because some compile-time options have an affect on data structures.\r\n// Defining those options in imconfig.h will ensure every compilation unit gets to see the same data structure layouts.\r\n// Call IMGUI_CHECKVERSION() from your .cpp files to verify that the data structures your files are using are matching the ones imgui.cpp is using.\r\n//-----------------------------------------------------------------------------\r\n\r\n// #pragma once\r\n\r\n//---- Define assertion handler. Defaults to calling assert().\r\n//#define IM_ASSERT(_EXPR)  MyAssert(_EXPR)\r\n//#define IM_ASSERT(_EXPR)  ((void)(_EXPR))     // Disable asserts\r\n\r\n//---- Define attributes of all API symbols declarations, e.g. for DLL under Windows.\r\n//#define IMGUI_API __declspec( dllexport )\r\n//#define IMGUI_API __declspec( dllimport )\r\n\r\n//---- Don't define obsolete functions names. Consider enabling from time to time or when updating to reduce likelihood of using already obsolete function/names.\r\n//#define IMGUI_DISABLE_OBSOLETE_FUNCTIONS\r\n\r\n//---- Don't implement demo windows functionality (ShowDemoWindow()/ShowStyleEditor()/ShowUserGuide() methods will be empty)\r\n//---- It is very strongly recommended to NOT disable the demo windows. Please read the comment at the top of imgui_demo.cpp.\r\n//#define IMGUI_DISABLE_DEMO_WINDOWS\r\n\r\n//---- Don't implement some functions to reduce linkage requirements.\r\n//#define IMGUI_DISABLE_WIN32_DEFAULT_CLIPBOARD_FUNCTIONS   // Don't use and link with OpenClipboard/GetClipboardData/CloseClipboard etc.\r\n//#define IMGUI_DISABLE_WIN32_DEFAULT_IME_FUNCTIONS         // Don't use and link with ImmGetContext/ImmSetCompositionWindow.\r\n//#define IMGUI_DISABLE_FORMAT_STRING_FUNCTIONS             // Don't implement ImFormatString/ImFormatStringV so you can implement them yourself if you don't want to link with vsnprintf.\r\n//#define IMGUI_DISABLE_MATH_FUNCTIONS                      // Don't implement ImFabs/ImSqrt/ImPow/ImFmod/ImCos/ImSin/ImAcos/ImAtan2 wrapper so you can implement them yourself. Declare your prototypes in imconfig.h.\r\n//#define IMGUI_DISABLE_DEFAULT_ALLOCATORS                  // Don't implement default allocators calling malloc()/free(). You will need to call ImGui::SetAllocatorFunctions().\r\n\r\n//---- Include imgui_user.h at the end of imgui.h as a convenience\r\n//#define IMGUI_INCLUDE_IMGUI_USER_H\r\n\r\n//---- Pack colors to BGRA8 instead of RGBA8 (if you needed to convert from one to another anyway)\r\n//#define IMGUI_USE_BGRA_PACKED_COLOR\r\nexport const IMGUI_USE_BGRA_PACKED_COLOR: boolean = false;\r\n\r\n//---- Implement STB libraries in a namespace to avoid linkage conflicts (defaults to global namespace)\r\n//#define IMGUI_STB_NAMESPACE     ImGuiStb\r\n\r\n//---- Define constructor and implicit cast operators to convert back<>forth from your math types and ImVec2/ImVec4.\r\n// This will be inlined as part of ImVec2 and ImVec4 class declarations.\r\n/*\r\n#define IM_VEC2_CLASS_EXTRA                                                 \\\r\n        ImVec2(const MyVec2& f) { x = f.x; y = f.y; }                       \\\r\n        operator MyVec2() const { return MyVec2(x,y); }\r\n\r\n#define IM_VEC4_CLASS_EXTRA                                                 \\\r\n        ImVec4(const MyVec4& f) { x = f.x; y = f.y; z = f.z; w = f.w; }     \\\r\n        operator MyVec4() const { return MyVec4(x,y,z,w); }\r\n*/\r\n\r\n//---- Use 32-bit vertex indices (instead of default 16-bit) to allow meshes with more than 64K vertices. Render function needs to support it.\r\n//#define ImDrawIdx unsigned int\r\n\r\n//---- Tip: You can add extra functions within the ImGui:: namespace, here or in your own headers files.\r\n/*\r\nnamespace ImGui\r\n{\r\n    void MyFunction(const char* name, const MyMatrix44& v);\r\n}\r\n*/\r\n","export interface XY { x: number, y: number; }\r\nexport interface XYZ extends XY { z: number; }\r\nexport interface XYZW extends XYZ { w: number; }\r\n\r\nexport interface RGB { r: number; g: number; b: number; }\r\nexport interface RGBA extends RGB { a: number;\r\n}\r\n\r\nimport * as Bind from \"./bind-imgui\";\r\nimport * as config from \"./imconfig\";\r\n\r\nexport { Bind };\r\n\r\nlet bind: Bind.Module;\r\nexport default async function(value?: Partial<Bind.Module>): Promise<void> {\r\n    return new Promise<void>((resolve: () => void) => {\r\n        Bind.default(value).then((value: Bind.Module): void => {\r\n            bind = value;\r\n            resolve();\r\n        });\r\n    });\r\n}\r\nexport { bind };\r\n\r\nfunction import_Scalar(sca: XY | XYZ | XYZW | Bind.ImAccess<number> | Bind.ImScalar<number> | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number> | Bind.interface_ImVec4): Bind.ImScalar<number> {\r\n    if (Array.isArray(sca)) { return [ sca[0] ]; }\r\n    if (typeof sca === \"function\") { return [ sca() ]; }\r\n    return [ sca.x ];\r\n}\r\n\r\nfunction export_Scalar(tuple: Bind.ImScalar<number>, sca: XY | XYZ | XYZW | Bind.ImAccess<number> | Bind.ImScalar<number> | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number> | Bind.interface_ImVec4): void {\r\n    if (Array.isArray(sca)) { sca[0] = tuple[0]; return; }\r\n    if (typeof sca === \"function\") { sca(tuple[0]); return; }\r\n    sca.x = tuple[0];\r\n}\r\n\r\nfunction import_Vector2(vec: XY | XYZ | XYZW | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number> | Bind.interface_ImVec4): Bind.ImTuple2<number> {\r\n    if (Array.isArray(vec)) { return [ vec[0], vec[1] ]; }\r\n    return [ vec.x, vec.y ];\r\n}\r\n\r\nfunction export_Vector2(tuple: Bind.ImTuple2<number>, vec: XY | XYZ | XYZW | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number> | Bind.interface_ImVec4): void {\r\n    if (Array.isArray(vec)) { vec[0] = tuple[0]; vec[1] = tuple[1]; return; }\r\n    vec.x = tuple[0]; vec.y = tuple[1];\r\n}\r\n\r\nfunction import_Vector3(vec: XYZ | XYZW | Bind.ImTuple3<number> | Bind.ImTuple4<number> | Bind.interface_ImVec4): Bind.ImTuple3<number> {\r\n    if (Array.isArray(vec)) { return [ vec[0], vec[1], vec[2] ]; }\r\n    return [ vec.x, vec.y, vec.z ];\r\n}\r\n\r\nfunction export_Vector3(tuple: Bind.ImTuple3<number>, vec: XYZ | XYZW | Bind.ImTuple3<number> | Bind.ImTuple4<number> | Bind.interface_ImVec4): void {\r\n    if (Array.isArray(vec)) { vec[0] = tuple[0]; vec[1] = tuple[1]; vec[2] = tuple[2]; return; }\r\n    vec.x = tuple[0]; vec.y = tuple[1]; vec.z = tuple[2];\r\n}\r\n\r\nfunction import_Vector4(vec: XYZW | Bind.ImTuple3<number> | Bind.ImTuple4<number> | Bind.interface_ImVec4): Bind.ImTuple4<number> {\r\n    if (Array.isArray(vec)) { return [ vec[0], vec[1], vec[2], vec[3] || 0 ]; }\r\n    return [ vec.x, vec.y, vec.z, vec.w ];\r\n}\r\n\r\nfunction export_Vector4(tuple: Bind.ImTuple4<number>, vec: XYZW | Bind.ImTuple3<number> | Bind.ImTuple4<number> | Bind.interface_ImVec4): void {\r\n    if (Array.isArray(vec)) { vec[0] = tuple[0]; vec[1] = tuple[1]; vec[2] = tuple[2]; vec[3] = tuple[3]; return; }\r\n    vec.x = tuple[0]; vec.y = tuple[1]; vec.z = tuple[2]; vec.w = tuple[3];\r\n}\r\n\r\nfunction import_Color3(col: RGB | RGBA | Bind.ImTuple3<number> | Bind.ImTuple4<number> | Bind.interface_ImVec4): Bind.ImTuple3<number> {\r\n    if (Array.isArray(col)) { return [ col[0], col[1], col[2] ]; }\r\n    if (\"r\" in col) { return [ col.r, col.g, col.b ]; }\r\n    return [ col.x, col.y, col.z ];\r\n}\r\n\r\nfunction export_Color3(tuple: Bind.ImTuple3<number>, col: RGB | RGBA | Bind.ImTuple3<number> | Bind.ImTuple4<number> | Bind.interface_ImVec4): void {\r\n    if (Array.isArray(col)) { col[0] = tuple[0]; col[1] = tuple[1]; col[2] = tuple[2]; return; }\r\n    if (\"r\" in col) { col.r = tuple[0]; col.g = tuple[1]; col.b = tuple[2]; return; }\r\n    col.x = tuple[0]; col.y = tuple[1]; col.z = tuple[2];\r\n}\r\n\r\nfunction import_Color4(col: RGBA | Bind.ImTuple4<number> | Bind.interface_ImVec4 | RGBA): Bind.ImTuple4<number> {\r\n    if (Array.isArray(col)) { return [ col[0], col[1], col[2], col[3] ]; }\r\n    if (\"r\" in col) { return [ col.r, col.g, col.b, col.a ]; }\r\n    return [ col.x, col.y, col.z, col.w ];\r\n}\r\n\r\nfunction export_Color4(tuple: Bind.ImTuple4<number>, col: RGBA | Bind.ImTuple4<number> | Bind.interface_ImVec4 | RGBA): void {\r\n    if (Array.isArray(col)) { col[0] = tuple[0]; col[1] = tuple[1]; col[2] = tuple[2]; return; }\r\n    if (\"r\" in col) { col.r = tuple[0]; col.g = tuple[1]; col.b = tuple[2]; return; }\r\n    col.x = tuple[0]; col.y = tuple[1]; col.z = tuple[2];\r\n}\r\n\r\nexport const IMGUI_VERSION: string = \"1.66\"; // bind.IMGUI_VERSION;\r\nexport const IMGUI_VERSION_NUM: number = 16601; // bind.IMGUI_VERSION_NUM;\r\n\r\n// #define IMGUI_CHECKVERSION()        ImGui::DebugCheckVersionAndDataLayout(IMGUI_VERSION, sizeof(ImGuiIO), sizeof(ImGuiStyle), sizeof(ImVec2), sizeof(ImVec4), sizeof(ImDrawVert))\r\nexport function IMGUI_CHECKVERSION(): boolean { return DebugCheckVersionAndDataLayout(IMGUI_VERSION, bind.ImGuiIOSize, bind.ImGuiStyleSize, bind.ImVec2Size, bind.ImVec4Size, bind.ImDrawVertSize); }\r\n\r\nexport function IM_ASSERT(_EXPR: boolean | number): void { if (!_EXPR) { throw new Error(); } }\r\n\r\nexport function IM_ARRAYSIZE(_ARR: ArrayLike<any> | ImStringBuffer): number {\r\n    if (_ARR instanceof ImStringBuffer) {\r\n        return _ARR.size;\r\n    } else {\r\n        return _ARR.length;\r\n    }\r\n}\r\n\r\nexport class ImStringBuffer {\r\n    constructor(public size: number, public buffer: string = \"\") {}\r\n}\r\n\r\nexport { ImAccess } from \"./bind-imgui\";\r\nexport { ImScalar } from \"./bind-imgui\";\r\nexport { ImTuple2 } from \"./bind-imgui\";\r\nexport { ImTuple3 } from \"./bind-imgui\";\r\nexport { ImTuple4 } from \"./bind-imgui\";\r\n\r\nexport type ImTextureID = WebGLTexture;\r\n\r\n// Flags for ImGui::Begin()\r\nexport { ImGuiWindowFlags as WindowFlags };\r\nexport enum ImGuiWindowFlags {\r\n    None                   = 0,\r\n    NoTitleBar             = 1 << 0,   // Disable title-bar\r\n    NoResize               = 1 << 1,   // Disable user resizing with the lower-right grip\r\n    NoMove                 = 1 << 2,   // Disable user moving the window\r\n    NoScrollbar            = 1 << 3,   // Disable scrollbars (window can still scroll with mouse or programatically)\r\n    NoScrollWithMouse      = 1 << 4,   // Disable user vertically scrolling with mouse wheel. On child window, mouse wheel will be forwarded to the parent unless NoScrollbar is also set.\r\n    NoCollapse             = 1 << 5,   // Disable user collapsing window by double-clicking on it\r\n    AlwaysAutoResize       = 1 << 6,   // Resize every window to its content every frame\r\n    NoBackground           = 1 << 7,   // Disable drawing background color (WindowBg, etc.) and outside border. Similar as using SetNextWindowBgAlpha(0.0f).\r\n    NoSavedSettings        = 1 << 8,   // Never load/save settings in .ini file\r\n    NoMouseInputs          = 1 << 9,   // Disable catching mouse or keyboard inputs, hovering test with pass through.\r\n    MenuBar                = 1 << 10,  // Has a menu-bar\r\n    HorizontalScrollbar    = 1 << 11,  // Allow horizontal scrollbar to appear (off by default). You may use SetNextWindowContentSize(ImVec2(width,0.0f)); prior to calling Begin() to specify width. Read code in imgui_demo in the \"Horizontal Scrolling\" section.\r\n    NoFocusOnAppearing     = 1 << 12,  // Disable taking focus when transitioning from hidden to visible state\r\n    NoBringToFrontOnFocus  = 1 << 13,  // Disable bringing window to front when taking focus (e.g. clicking on it or programatically giving it focus)\r\n    AlwaysVerticalScrollbar= 1 << 14,  // Always show vertical scrollbar (even if ContentSize.y < Size.y)\r\n    AlwaysHorizontalScrollbar= 1 << 15,  // Always show horizontal scrollbar (even if ContentSize.x < Size.x)\r\n    AlwaysUseWindowPadding = 1 << 16,  // Ensure child windows without border uses style.WindowPadding (ignored by default for non-bordered child windows, because more convenient)\r\n    NoNavInputs            = 1 << 18,  // No gamepad/keyboard navigation within the window\r\n    NoNavFocus             = 1 << 19,  // No focusing toward this window with gamepad/keyboard navigation (e.g. skipped by CTRL+TAB)\r\n    NoNav                  = NoNavInputs | NoNavFocus,\r\n    NoDecoration           = NoTitleBar | NoResize | NoScrollbar | NoCollapse,\r\n    NoInputs               = NoMouseInputs | NoNavInputs | NoNavFocus,\r\n\r\n    // [Internal]\r\n    NavFlattened           = 1 << 23,  // (WIP) Allow gamepad/keyboard navigation to cross over parent border to this child (only use on child that have no scrolling!)\r\n    ChildWindow            = 1 << 24,  // Don't use! For internal use by BeginChild()\r\n    Tooltip                = 1 << 25,  // Don't use! For internal use by BeginTooltip()\r\n    Popup                  = 1 << 26,  // Don't use! For internal use by BeginPopup()\r\n    Modal                  = 1 << 27,  // Don't use! For internal use by BeginPopupModal()\r\n    ChildMenu              = 1 << 28,   // Don't use! For internal use by BeginMenu()\r\n}\r\n\r\n// Flags for ImGui::InputText()\r\nexport { ImGuiInputTextFlags as InputTextFlags };\r\nexport enum ImGuiInputTextFlags {\r\n    None                = 0,\r\n    CharsDecimal        = 1 << 0,   // Allow 0123456789.+-*/\r\n    CharsHexadecimal    = 1 << 1,   // Allow 0123456789ABCDEFabcdef\r\n    CharsUppercase      = 1 << 2,   // Turn a..z into A..Z\r\n    CharsNoBlank        = 1 << 3,   // Filter out spaces, tabs\r\n    AutoSelectAll       = 1 << 4,   // Select entire text when first taking mouse focus\r\n    EnterReturnsTrue    = 1 << 5,   // Return 'true' when Enter is pressed (as opposed to when the value was modified)\r\n    CallbackCompletion  = 1 << 6,   // Call user function on pressing TAB (for completion handling)\r\n    CallbackHistory     = 1 << 7,   // Call user function on pressing Up/Down arrows (for history handling)\r\n    CallbackAlways      = 1 << 8,   // Call user function every time. User code may query cursor position, modify text buffer.\r\n    CallbackCharFilter  = 1 << 9,   // Call user function to filter character. Modify data->EventChar to replace/filter input, or return 1 to discard character.\r\n    AllowTabInput       = 1 << 10,  // Pressing TAB input a '\\t' character into the text field\r\n    CtrlEnterForNewLine = 1 << 11,  // In multi-line mode, unfocus with Enter, add new line with Ctrl+Enter (default is opposite: unfocus with Ctrl+Enter, add line with Enter).\r\n    NoHorizontalScroll  = 1 << 12,  // Disable following the cursor horizontally\r\n    AlwaysInsertMode    = 1 << 13,  // Insert mode\r\n    ReadOnly            = 1 << 14,  // Read-only mode\r\n    Password            = 1 << 15,  // Password mode, display all characters as '*'\r\n    NoUndoRedo          = 1 << 16,  // Disable undo/redo. Note that input text owns the text data while active, if you want to provide your own undo/redo stack you need e.g. to call ClearActiveID().\r\n    CharsScientific     = 1 << 17,  // Allow 0123456789.+-*/eE (Scientific notation input)\r\n    CallbackResize      = 1 << 18,  // Allow buffer capacity resize + notify when the string wants to be resized (for string types which hold a cache of their Size) (see misc/stl/imgui_stl.h for an example of using this)\r\n    // [Internal]\r\n    Multiline           = 1 << 20,   // For internal use by InputTextMultiline()\r\n}\r\n\r\n// Flags for ImGui::TreeNodeEx(), ImGui::CollapsingHeader*()\r\nexport { ImGuiTreeNodeFlags as TreeNodeFlags };\r\nexport enum ImGuiTreeNodeFlags {\r\n    None                 = 0,\r\n    Selected             = 1 << 0,   // Draw as selected\r\n    Framed               = 1 << 1,   // Full colored frame (e.g. for CollapsingHeader)\r\n    AllowItemOverlap     = 1 << 2,   // Hit testing to allow subsequent widgets to overlap this one\r\n    NoTreePushOnOpen     = 1 << 3,   // Don't do a TreePush() when open (e.g. for CollapsingHeader) = no extra indent nor pushing on ID stack\r\n    NoAutoOpenOnLog      = 1 << 4,   // Don't automatically and temporarily open node when Logging is active (by default logging will automatically open tree nodes)\r\n    DefaultOpen          = 1 << 5,   // Default node to be open\r\n    OpenOnDoubleClick    = 1 << 6,   // Need double-click to open node\r\n    OpenOnArrow          = 1 << 7,   // Only open when clicking on the arrow part. If OpenOnDoubleClick is also set, single-click arrow or double-click all box to open.\r\n    Leaf                 = 1 << 8,   // No collapsing, no arrow (use as a convenience for leaf nodes).\r\n    Bullet               = 1 << 9,   // Display a bullet instead of arrow\r\n    FramePadding         = 1 << 10,  // Use FramePadding (even for an unframed text node) to vertically align text baseline to regular widget height. Equivalent to calling AlignTextToFramePadding().\r\n    //SpanAllAvailWidth  = 1 << 11,  // FIXME: TODO: Extend hit box horizontally even if not framed\r\n    //NoScrollOnOpen     = 1 << 12,  // FIXME: TODO: Disable automatic scroll on TreePop() if node got just open and contents is not visible\r\n    NavLeftJumpsBackHere = 1 << 13,  // (WIP) Nav: left direction may move to this TreeNode() from any of its child (items submitted between TreeNode and TreePop)\r\n    CollapsingHeader     = Framed | NoTreePushOnOpen | NoAutoOpenOnLog,\r\n}\r\n\r\n// Flags for ImGui::Selectable()\r\nexport { ImGuiSelectableFlags as SelectableFlags };\r\nexport enum ImGuiSelectableFlags {\r\n    None               = 0,\r\n    DontClosePopups    = 1 << 0,   // Clicking this don't close parent popup window\r\n    SpanAllColumns     = 1 << 1,   // Selectable frame can span all columns (text will still fit in current column)\r\n    AllowDoubleClick   = 1 << 2,   // Generate press events on double clicks too\r\n    Disabled           = 1 << 3    // Cannot be selected, display greyed out text\r\n}\r\n\r\n// Flags for ImGui::BeginCombo()\r\nexport { ImGuiComboFlags as ComboFlags };\r\nexport enum ImGuiComboFlags {\r\n    None                    = 0,\r\n    PopupAlignLeft          = 1 << 0,   // Align the popup toward the left by default\r\n    HeightSmall             = 1 << 1,   // Max ~4 items visible. Tip: If you want your combo popup to be a specific size you can use SetNextWindowSizeConstraints() prior to calling BeginCombo()\r\n    HeightRegular           = 1 << 2,   // Max ~8 items visible (default)\r\n    HeightLarge             = 1 << 3,   // Max ~20 items visible\r\n    HeightLargest           = 1 << 4,   // As many fitting items as possible\r\n    NoArrowButton           = 1 << 5,   // Display on the preview box without the square arrow button\r\n    NoPreview               = 1 << 6,   // Display only a square arrow button\r\n    HeightMask_             = HeightSmall | HeightRegular | HeightLarge | HeightLargest,\r\n}\r\n\r\n// Flags for ImGui::IsWindowFocused()\r\nexport { ImGuiFocusedFlags as FocusedFlags };\r\nexport enum ImGuiFocusedFlags {\r\n    None                          = 0,\r\n    ChildWindows                  = 1 << 0,   // IsWindowFocused(): Return true if any children of the window is focused\r\n    RootWindow                    = 1 << 1,   // IsWindowFocused(): Test from root window (top most parent of the current hierarchy)\r\n    AnyWindow                     = 1 << 2,   // IsWindowFocused(): Return true if any window is focused\r\n    RootAndChildWindows           = RootWindow | ChildWindows,\r\n}\r\n\r\n// Flags for ImGui::IsItemHovered(), ImGui::IsWindowHovered()\r\nexport { ImGuiHoveredFlags as HoveredFlags };\r\nexport enum ImGuiHoveredFlags {\r\n    None                          = 0,        // Return true if directly over the item/window, not obstructed by another window, not obstructed by an active popup or modal blocking inputs under them.\r\n    ChildWindows                  = 1 << 0,   // IsWindowHovered() only: Return true if any children of the window is hovered\r\n    RootWindow                    = 1 << 1,   // IsWindowHovered() only: Test from root window (top most parent of the current hierarchy)\r\n    AnyWindow                     = 1 << 2,   // IsWindowHovered() only: Return true if any window is hovered\r\n    AllowWhenBlockedByPopup       = 1 << 3,   // Return true even if a popup window is normally blocking access to this item/window\r\n    //AllowWhenBlockedByModal     = 1 << 4,   // Return true even if a modal popup window is normally blocking access to this item/window. FIXME-TODO: Unavailable yet.\r\n    AllowWhenBlockedByActiveItem  = 1 << 5,   // Return true even if an active item is blocking access to this item/window. Useful for Drag and Drop patterns.\r\n    AllowWhenOverlapped           = 1 << 6,   // Return true even if the position is overlapped by another window\r\n    AllowWhenDisabled             = 1 << 7,   // Return true even if the item is disabled\r\n    RectOnly                      = AllowWhenBlockedByPopup | AllowWhenBlockedByActiveItem | AllowWhenOverlapped,\r\n    RootAndChildWindows           = RootWindow | ChildWindows,\r\n}\r\n\r\n// Flags for ImGui::BeginDragDropSource(), ImGui::AcceptDragDropPayload()\r\nexport { ImGuiDragDropFlags as DragDropFlags };\r\nexport enum ImGuiDragDropFlags {\r\n    // BeginDragDropSource() flags\r\n    None                         = 0,\r\n    SourceNoPreviewTooltip       = 1 << 0,       // By default, a successful call to BeginDragDropSource opens a tooltip so you can display a preview or description of the source contents. This flag disable this behavior.\r\n    SourceNoDisableHover         = 1 << 1,       // By default, when dragging we clear data so that IsItemHovered() will return true, to avoid subsequent user code submitting tooltips. This flag disable this behavior so you can still call IsItemHovered() on the source item.\r\n    SourceNoHoldToOpenOthers     = 1 << 2,       // Disable the behavior that allows to open tree nodes and collapsing header by holding over them while dragging a source item.\r\n    SourceAllowNullID            = 1 << 3,       // Allow items such as Text(), Image() that have no unique identifier to be used as drag source, by manufacturing a temporary identifier based on their window-relative position. This is extremely unusual within the dear imgui ecosystem and so we made it explicit.\r\n    SourceExtern                 = 1 << 4,       // External source (from outside of imgui), won't attempt to read current item/window info. Will always return true. Only one Extern source can be active simultaneously.\r\n    SourceAutoExpirePayload      = 1 << 5,   // Automatically expire the payload if the source cease to be submitted (otherwise payloads are persisting while being dragged)\r\n    // AcceptDragDropPayload() flags\r\n    AcceptBeforeDelivery         = 1 << 10,      // AcceptDragDropPayload() will returns true even before the mouse button is released. You can then call IsDelivery() to test if the payload needs to be delivered.\r\n    AcceptNoDrawDefaultRect      = 1 << 11,      // Do not draw the default highlight rectangle when hovering over target.\r\n    AcceptNoPreviewTooltip       = 1 << 12,      // Request hiding the BeginDragDropSource tooltip from the BeginDragDropTarget site.\r\n    AcceptPeekOnly               = AcceptBeforeDelivery | AcceptNoDrawDefaultRect,  // For peeking ahead and inspecting the payload before delivery.\r\n}\r\n\r\n// Standard Drag and Drop payload types. You can define you own payload types using 12-characters long strings. Types starting with '_' are defined by Dear ImGui.\r\nexport const IMGUI_PAYLOAD_TYPE_COLOR_3F: string = \"_COL3F\";    // float[3]     // Standard type for colors, without alpha. User code may use this type.\r\nexport const IMGUI_PAYLOAD_TYPE_COLOR_4F: string = \"_COL4F\";    // float[4]     // Standard type for colors. User code may use this type.\r\n\r\n// A primary data type\r\nexport { ImGuiDataType as DataType };\r\nexport enum ImGuiDataType {\r\n    S32,      // int\r\n    U32,      // unsigned int\r\n    S64,      // long long, __int64\r\n    U64,      // unsigned long long, unsigned __int64\r\n    Float,    // float\r\n    Double,   // double\r\n    COUNT\r\n}\r\n\r\n// A cardinal direction\r\nexport { ImGuiDir as Dir };\r\nexport enum ImGuiDir {\r\n    None    = -1,\r\n    Left    = 0,\r\n    Right   = 1,\r\n    Up      = 2,\r\n    Down    = 3,\r\n    COUNT\r\n}\r\n\r\n// User fill ImGuiIO.KeyMap[] array with indices into the ImGuiIO.KeysDown[512] array\r\nexport { ImGuiKey as Key };\r\nexport enum ImGuiKey {\r\n    Tab,\r\n    LeftArrow,\r\n    RightArrow,\r\n    UpArrow,\r\n    DownArrow,\r\n    PageUp,\r\n    PageDown,\r\n    Home,\r\n    End,\r\n    Insert,\r\n    Delete,\r\n    Backspace,\r\n    Space,\r\n    Enter,\r\n    Escape,\r\n    A,         // for text edit CTRL+A: select all\r\n    C,         // for text edit CTRL+C: copy\r\n    V,         // for text edit CTRL+V: paste\r\n    X,         // for text edit CTRL+X: cut\r\n    Y,         // for text edit CTRL+Y: redo\r\n    Z,         // for text edit CTRL+Z: undo\r\n    COUNT,\r\n}\r\n\r\n// [BETA] Gamepad/Keyboard directional navigation\r\n// Keyboard: Set io.ConfigFlags |= EnableKeyboard to enable. NewFrame() will automatically fill io.NavInputs[] based on your io.KeyDown[] + io.KeyMap[] arrays.\r\n// Gamepad:  Set io.ConfigFlags |= EnableGamepad to enable. Fill the io.NavInputs[] fields before calling NewFrame(). Note that io.NavInputs[] is cleared by EndFrame().\r\n// Read instructions in imgui.cpp for more details.\r\nexport { ImGuiNavInput as NavInput };\r\nexport enum ImGuiNavInput\r\n{\r\n    // Gamepad Mapping\r\n    Activate,      // activate / open / toggle / tweak value       // e.g. Circle (PS4), A (Xbox), B (Switch), Space (Keyboard)\r\n    Cancel,        // cancel / close / exit                        // e.g. Cross  (PS4), B (Xbox), A (Switch), Escape (Keyboard)\r\n    Input,         // text input / on-screen keyboard              // e.g. Triang.(PS4), Y (Xbox), X (Switch), Return (Keyboard)\r\n    Menu,          // tap: toggle menu / hold: focus, move, resize // e.g. Square (PS4), X (Xbox), Y (Switch), Alt (Keyboard)\r\n    DpadLeft,      // move / tweak / resize window (w/ PadMenu)    // e.g. D-pad Left/Right/Up/Down (Gamepads), Arrow keys (Keyboard)\r\n    DpadRight,     //\r\n    DpadUp,        //\r\n    DpadDown,      //\r\n    LStickLeft,    // scroll / move window (w/ PadMenu)            // e.g. Left Analog Stick Left/Right/Up/Down\r\n    LStickRight,   //\r\n    LStickUp,      //\r\n    LStickDown,    //\r\n    FocusPrev,     // next window (w/ PadMenu)                     // e.g. L1 or L2 (PS4), LB or LT (Xbox), L or ZL (Switch)\r\n    FocusNext,     // prev window (w/ PadMenu)                     // e.g. R1 or R2 (PS4), RB or RT (Xbox), R or ZL (Switch)\r\n    TweakSlow,     // slower tweaks                                // e.g. L1 or L2 (PS4), LB or LT (Xbox), L or ZL (Switch)\r\n    TweakFast,     // faster tweaks                                // e.g. R1 or R2 (PS4), RB or RT (Xbox), R or ZL (Switch)\r\n\r\n    // [Internal] Don't use directly! This is used internally to differentiate keyboard from gamepad inputs for behaviors that require to differentiate them.\r\n    // Keyboard behavior that have no corresponding gamepad mapping (e.g. CTRL+TAB) may be directly reading from io.KeyDown[] instead of io.NavInputs[].\r\n    KeyMenu_,      // toggle menu                                  // = io.KeyAlt\r\n    KeyLeft_,      // move left                                    // = Arrow keys\r\n    KeyRight_,     // move right\r\n    KeyUp_,        // move up\r\n    KeyDown_,      // move down\r\n    COUNT,\r\n    InternalStart_ = KeyMenu_,\r\n}\r\n\r\n// [BETA] Gamepad/Keyboard directional navigation flags, stored in io.ConfigFlags\r\nexport { ImGuiConfigFlags as ConfigFlags };\r\nexport enum ImGuiConfigFlags\r\n{\r\n    NavEnableKeyboard    = 1 << 0,   // Master keyboard navigation enable flag. NewFrame() will automatically fill io.NavInputs[] based on io.KeyDown[].\r\n    NavEnableGamepad     = 1 << 1,   // Master gamepad navigation enable flag. This is mostly to instruct your imgui back-end to fill io.NavInputs[].\r\n    NavEnableSetMousePos = 1 << 2,   // Request navigation to allow moving the mouse cursor. May be useful on TV/console systems where moving a virtual mouse is awkward. Will update io.MousePos and set io.WantMoveMouse=true. If enabled you MUST honor io.WantMoveMouse requests in your binding, otherwise ImGui will react as if the mouse is jumping around back and forth.\r\n    NavNoCaptureKeyboard = 1 << 3,    // Do not set the io.WantCaptureKeyboard flag with io.NavActive is set.\r\n    NoMouse              = 1 << 4,   // Instruct imgui to clear mouse position/buttons in NewFrame(). This allows ignoring the mouse information back-end\r\n    NoMouseCursorChange  = 1 << 5,   // Instruct back-end to not alter mouse cursor shape and visibility.\r\n\r\n    IsSRGB               = 1 << 20,  // Application is SRGB-aware.\r\n    IsTouchScreen        = 1 << 21   // Application is using a touch screen instead of a mouse.\r\n}\r\n\r\n// Enumeration for PushStyleColor() / PopStyleColor()\r\nexport { ImGuiCol as Col };\r\nexport enum ImGuiCol {\r\n    Text,\r\n    TextDisabled,\r\n    WindowBg,              // Background of normal windows\r\n    ChildBg,               // Background of child windows\r\n    PopupBg,               // Background of popups, menus, tooltips windows\r\n    Border,\r\n    BorderShadow,\r\n    FrameBg,               // Background of checkbox, radio button, plot, slider, text input\r\n    FrameBgHovered,\r\n    FrameBgActive,\r\n    TitleBg,\r\n    TitleBgActive,\r\n    TitleBgCollapsed,\r\n    MenuBarBg,\r\n    ScrollbarBg,\r\n    ScrollbarGrab,\r\n    ScrollbarGrabHovered,\r\n    ScrollbarGrabActive,\r\n    CheckMark,\r\n    SliderGrab,\r\n    SliderGrabActive,\r\n    Button,\r\n    ButtonHovered,\r\n    ButtonActive,\r\n    Header,\r\n    HeaderHovered,\r\n    HeaderActive,\r\n    Separator,\r\n    SeparatorHovered,\r\n    SeparatorActive,\r\n    ResizeGrip,\r\n    ResizeGripHovered,\r\n    ResizeGripActive,\r\n    PlotLines,\r\n    PlotLinesHovered,\r\n    PlotHistogram,\r\n    PlotHistogramHovered,\r\n    TextSelectedBg,\r\n    DragDropTarget,\r\n    NavHighlight,          // Gamepad/keyboard: current highlighted item\r\n    NavWindowingHighlight, // Highlight window when using CTRL+TAB\r\n    NavWindowingDimBg,     // Darken/colorize entire screen behind the CTRL+TAB window list, when active\r\n    ModalWindowDimBg,      // Darken/colorize entire screen behind a modal window, when one is active\r\n    COUNT,\r\n}\r\n\r\n// Enumeration for PushStyleVar() / PopStyleVar() to temporarily modify the ImGuiStyle structure.\r\n// NB: the enum only refers to fields of ImGuiStyle which makes sense to be pushed/popped inside UI code. During initialization, feel free to just poke into ImGuiStyle directly.\r\n// NB: if changing this enum, you need to update the associated internal table GStyleVarInfo[] accordingly. This is where we link enum values to members offset/type.\r\nexport { ImGuiStyleVar as StyleVar };\r\nexport enum ImGuiStyleVar {\r\n    // Enum name ......................// Member in ImGuiStyle structure (see ImGuiStyle for descriptions)\r\n    Alpha,               // float     Alpha\r\n    WindowPadding,       // ImVec2    WindowPadding\r\n    WindowRounding,      // float     WindowRounding\r\n    WindowBorderSize,    // float     WindowBorderSize\r\n    WindowMinSize,       // ImVec2    WindowMinSize\r\n    WindowTitleAlign,    // ImVec2    WindowTitleAlign\r\n    ChildRounding,       // float     ChildRounding\r\n    ChildBorderSize,     // float     ChildBorderSize\r\n    PopupRounding,       // float     PopupRounding\r\n    PopupBorderSize,     // float     PopupBorderSize\r\n    FramePadding,        // ImVec2    FramePadding\r\n    FrameRounding,       // float     FrameRounding\r\n    FrameBorderSize,     // float     FrameBorderSize\r\n    ItemSpacing,         // ImVec2    ItemSpacing\r\n    ItemInnerSpacing,    // ImVec2    ItemInnerSpacing\r\n    IndentSpacing,       // float     IndentSpacing\r\n    ScrollbarSize,       // float     ScrollbarSize\r\n    ScrollbarRounding,   // float     ScrollbarRounding\r\n    GrabMinSize,         // float     GrabMinSize\r\n    GrabRounding,        // float     GrabRounding\r\n    ButtonTextAlign,     // ImVec2    ButtonTextAlign\r\n    Count_, COUNT = Count_,\r\n}\r\n\r\n// Back-end capabilities flags stored in io.BackendFlags. Set by imgui_impl_xxx or custom back-end.\r\nexport { ImGuiBackendFlags as BackendFlags };\r\nexport enum ImGuiBackendFlags {\r\n    HasGamepad            = 1 << 0,   // Back-end has a connected gamepad.\r\n    HasMouseCursors       = 1 << 1,   // Back-end can honor GetMouseCursor() values and change the OS cursor shape.\r\n    HasSetMousePos        = 1 << 2    // Back-end can honor io.WantSetMousePos and reposition the mouse (only used if ImGuiConfigFlags_NavEnableSetMousePos is set).\r\n}\r\n\r\n// Enumeration for ColorEdit3() / ColorEdit4() / ColorPicker3() / ColorPicker4() / ColorButton()\r\nexport { ImGuiColorEditFlags as ColorEditFlags };\r\nexport enum ImGuiColorEditFlags {\r\n    None            = 0,\r\n    NoAlpha         = 1 << 1,   //              // ColorEdit, ColorPicker, ColorButton: ignore Alpha component (read 3 components from the input pointer).\r\n    NoPicker        = 1 << 2,   //              // ColorEdit: disable picker when clicking on colored square.\r\n    NoOptions       = 1 << 3,   //              // ColorEdit: disable toggling options menu when right-clicking on inputs/small preview.\r\n    NoSmallPreview  = 1 << 4,   //              // ColorEdit, ColorPicker: disable colored square preview next to the inputs. (e.g. to show only the inputs)\r\n    NoInputs        = 1 << 5,   //              // ColorEdit, ColorPicker: disable inputs sliders/text widgets (e.g. to show only the small preview colored square).\r\n    NoTooltip       = 1 << 6,   //              // ColorEdit, ColorPicker, ColorButton: disable tooltip when hovering the preview.\r\n    NoLabel         = 1 << 7,   //              // ColorEdit, ColorPicker: disable display of inline text label (the label is still forwarded to the tooltip and picker).\r\n    NoSidePreview   = 1 << 8,   //              // ColorPicker: disable bigger color preview on right side of the picker, use small colored square preview instead.\r\n    NoDragDrop      = 1 << 9,   //              // ColorEdit: disable drag and drop target. ColorButton: disable drag and drop source.\r\n    // User Options (right-click on widget to change some of them). You can set application defaults using SetColorEditOptions(). The idea is that you probably don't want to override them in most of your calls, let the user choose and/or call SetColorEditOptions() during startup.\r\n    AlphaBar        = 1 << 16,   //              // ColorEdit, ColorPicker: show vertical alpha bar/gradient in picker.\r\n    AlphaPreview    = 1 << 17,  //              // ColorEdit, ColorPicker, ColorButton: display preview as a transparent color over a checkerboard, instead of opaque.\r\n    AlphaPreviewHalf= 1 << 18,  //              // ColorEdit, ColorPicker, ColorButton: display half opaque / half checkerboard, instead of opaque.\r\n    HDR             = 1 << 19,  //              // (WIP) ColorEdit: Currently only disable 0.0f..1.0f limits in RGBA edition (note: you probably want to use Float flag as well).\r\n    RGB             = 1 << 20,  // [Inputs]     // ColorEdit: choose one among RGB/HSV/HEX. ColorPicker: choose any combination using RGB/HSV/HEX.\r\n    HSV             = 1 << 21,  // [Inputs]     // \"\r\n    HEX             = 1 << 22,  // [Inputs]     // \"\r\n    Uint8           = 1 << 23,  // [DataType]   // ColorEdit, ColorPicker, ColorButton: _display_ values formatted as 0..255.\r\n    Float           = 1 << 24,  // [DataType]   // ColorEdit, ColorPicker, ColorButton: _display_ values formatted as 0.0f..1.0f floats instead of 0..255 integers. No round-trip of value via integers.\r\n    PickerHueBar    = 1 << 25,  // [PickerMode] // ColorPicker: bar for Hue, rectangle for Sat/Value.\r\n    PickerHueWheel  = 1 << 26,  // [PickerMode] // ColorPicker: wheel for Hue, triangle for Sat/Value.\r\n    // Internals/Masks\r\n    _InputsMask     = RGB | HSV | HEX,\r\n    _DataTypeMask   = Uint8 | Float,\r\n    _PickerMask     = PickerHueWheel | PickerHueBar,\r\n    _OptionsDefault = Uint8 | RGB | PickerHueBar,    // Change application default using SetColorEditOptions()\r\n}\r\n\r\n// Enumeration for GetMouseCursor()\r\nexport { ImGuiMouseCursor as MouseCursor };\r\nexport enum ImGuiMouseCursor {\r\n    None = -1,\r\n    Arrow = 0,\r\n    TextInput,         // When hovering over InputText, etc.\r\n    ResizeAll,         // (Unused by imgui functions)\r\n    ResizeNS,          // When hovering over an horizontal border\r\n    ResizeEW,          // When hovering over a vertical border or a column\r\n    ResizeNESW,        // When hovering over the bottom-left corner of a window\r\n    ResizeNWSE,        // When hovering over the bottom-right corner of a window\r\n    Hand,              // (Unused by imgui functions. Use for e.g. hyperlinks)\r\n    Count_, COUNT = Count_,\r\n}\r\n\r\n// Condition for ImGui::SetWindow***(), SetNextWindow***(), SetNextTreeNode***() functions\r\n// All those functions treat 0 as a shortcut to Always. From the point of view of the user use this as an enum (don't combine multiple values into flags).\r\nexport { ImGuiCond as Cond };\r\nexport enum ImGuiCond {\r\n    Always        = 1 << 0,   // Set the variable\r\n    Once          = 1 << 1,   // Set the variable once per runtime session (only the first call with succeed)\r\n    FirstUseEver  = 1 << 2,   // Set the variable if the window has no saved data (if doesn't exist in the .ini file)\r\n    Appearing     = 1 << 3,    // Set the variable if the window is appearing after being hidden/inactive (or the first time)\r\n}\r\n\r\nexport { ImDrawCornerFlags as wCornerFlags };\r\nexport enum ImDrawCornerFlags\r\n{\r\n    TopLeft   = 1 << 0, // 0x1\r\n    TopRight  = 1 << 1, // 0x2\r\n    BotLeft   = 1 << 2, // 0x4\r\n    BotRight  = 1 << 3, // 0x8\r\n    Top       = TopLeft | TopRight,   // 0x3\r\n    Bot       = BotLeft | BotRight,   // 0xC\r\n    Left      = TopLeft | BotLeft,    // 0x5\r\n    Right     = TopRight | BotRight,  // 0xA\r\n    All       = 0xF,     // In your function calls you may use ~0 (= all bits sets) instead of All, as a convenience\r\n}\r\n\r\nexport { ImDrawListFlags as wListFlags };\r\nexport enum ImDrawListFlags\r\n{\r\n    AntiAliasedLines = 1 << 0,\r\n    AntiAliasedFill  = 1 << 1,\r\n}\r\n\r\nexport { ImU32 } from \"./bind-imgui\";\r\n\r\nexport { interface_ImVec2 } from \"./bind-imgui\";\r\nexport { reference_ImVec2 } from \"./bind-imgui\";\r\n\r\nexport class ImVec2 implements Bind.interface_ImVec2 {\r\n    public static readonly ZERO: Readonly<ImVec2> = new ImVec2(0.0, 0.0);\r\n    public static readonly UNIT: Readonly<ImVec2> = new ImVec2(1.0, 1.0);\r\n    public static readonly UNIT_X: Readonly<ImVec2> = new ImVec2(1.0, 0.0);\r\n    public static readonly UNIT_Y: Readonly<ImVec2> = new ImVec2(0.0, 1.0);\r\n\r\n    constructor(public x: number = 0.0, public y: number = 0.0) {}\r\n\r\n    public Set(x: number, y: number): this {\r\n        this.x = x;\r\n        this.y = y;\r\n        return this;\r\n    }\r\n\r\n    public Copy(other: Readonly<Bind.interface_ImVec2>): this {\r\n        this.x = other.x;\r\n        this.y = other.y;\r\n        return this;\r\n    }\r\n\r\n    public Equals(other: Readonly<Bind.interface_ImVec2>): boolean {\r\n        if (this.x !== other.x) { return false; }\r\n        if (this.y !== other.y) { return false; }\r\n        return true;\r\n    }\r\n}\r\n\r\nexport { interface_ImVec4 } from \"./bind-imgui\";\r\nexport { reference_ImVec4 } from \"./bind-imgui\";\r\n\r\nexport class ImVec4 implements Bind.interface_ImVec4 {\r\n    public static readonly ZERO: Readonly<ImVec4> = new ImVec4(0.0, 0.0, 0.0, 0.0);\r\n    public static readonly UNIT: Readonly<ImVec4> = new ImVec4(1.0, 1.0, 1.0, 1.0);\r\n    public static readonly UNIT_X: Readonly<ImVec4> = new ImVec4(1.0, 0.0, 0.0, 0.0);\r\n    public static readonly UNIT_Y: Readonly<ImVec4> = new ImVec4(0.0, 1.0, 0.0, 0.0);\r\n    public static readonly UNIT_Z: Readonly<ImVec4> = new ImVec4(0.0, 0.0, 1.0, 0.0);\r\n    public static readonly UNIT_W: Readonly<ImVec4> = new ImVec4(0.0, 0.0, 0.0, 1.0);\r\n    public static readonly BLACK: Readonly<ImVec4> = new ImVec4(0.0, 0.0, 0.0, 1.0);\r\n    public static readonly WHITE: Readonly<ImVec4> = new ImVec4(1.0, 1.0, 1.0, 1.0);\r\n\r\n    constructor(public x: number = 0.0, public y: number = 0.0, public z: number = 0.0, public w: number = 1.0) {}\r\n\r\n    public Set(x: number, y: number, z: number, w: number): this {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.w = w;\r\n        return this;\r\n    }\r\n\r\n    public Copy(other: Readonly<Bind.interface_ImVec4>): this {\r\n        this.x = other.x;\r\n        this.y = other.y;\r\n        this.z = other.z;\r\n        this.w = other.w;\r\n        return this;\r\n    }\r\n\r\n    public Equals(other: Readonly<Bind.interface_ImVec4>): boolean {\r\n        if (this.x !== other.x) { return false; }\r\n        if (this.y !== other.y) { return false; }\r\n        if (this.z !== other.z) { return false; }\r\n        if (this.w !== other.w) { return false; }\r\n        return true;\r\n    }\r\n}\r\n\r\n//-----------------------------------------------------------------------------\r\n// Helpers\r\n//-----------------------------------------------------------------------------\r\n\r\n// Lightweight std::vector<> like class to avoid dragging dependencies (also: windows implementation of STL with debug enabled is absurdly slow, so let's bypass it so our code runs fast in debug).\r\n// Our implementation does NOT call C++ constructors/destructors. This is intentional and we do not require it. Do not use this class as a straight std::vector replacement in your code!\r\nexport class ImVector<T> extends Array<T>\r\n{\r\n    public get Size(): number { return this.length; }\r\n    public Data: T[] = this;\r\n    public empty(): boolean { return this.length === 0; }\r\n    public clear(): void { this.length = 0; }\r\n    public pop_back(): T | undefined { return this.pop(); }\r\n    public push_back(value: T): void { this.push(value); }\r\n    // public:\r\n    // int                         Size;\r\n    // int                         Capacity;\r\n    // T*                          Data;\r\n\r\n    // typedef T                   value_type;\r\n    // typedef value_type*         iterator;\r\n    // typedef const value_type*   const_iterator;\r\n\r\n    // inline ImVector()           { Size = Capacity = 0; Data = NULL; }\r\n    // inline ~ImVector()          { if (Data) ImGui::MemFree(Data); }\r\n\r\n    // inline bool                 empty() const                   { return Size == 0; }\r\n    // inline int                  size() const                    { return Size; }\r\n    // inline int                  capacity() const                { return Capacity; }\r\n\r\n    // inline value_type&          operator[](int i)               { IM_ASSERT(i < Size); return Data[i]; }\r\n    // inline const value_type&    operator[](int i) const         { IM_ASSERT(i < Size); return Data[i]; }\r\n\r\n    // inline void                 clear()                         { if (Data) { Size = Capacity = 0; ImGui::MemFree(Data); Data = NULL; } }\r\n    // inline iterator             begin()                         { return Data; }\r\n    // inline const_iterator       begin() const                   { return Data; }\r\n    // inline iterator             end()                           { return Data + Size; }\r\n    // inline const_iterator       end() const                     { return Data + Size; }\r\n    // inline value_type&          front()                         { IM_ASSERT(Size > 0); return Data[0]; }\r\n    // inline const value_type&    front() const                   { IM_ASSERT(Size > 0); return Data[0]; }\r\n    // inline value_type&          back()                          { IM_ASSERT(Size > 0); return Data[Size - 1]; }\r\n    // inline const value_type&    back() const                    { IM_ASSERT(Size > 0); return Data[Size - 1]; }\r\n    // inline void                 swap(ImVector<T>& rhs)          { int rhs_size = rhs.Size; rhs.Size = Size; Size = rhs_size; int rhs_cap = rhs.Capacity; rhs.Capacity = Capacity; Capacity = rhs_cap; value_type* rhs_data = rhs.Data; rhs.Data = Data; Data = rhs_data; }\r\n\r\n    // inline int                  _grow_capacity(int size) const  { int new_capacity = Capacity ? (Capacity + Capacity/2) : 8; return new_capacity > size ? new_capacity : size; }\r\n\r\n    // inline void                 resize(int new_size)            { if (new_size > Capacity) reserve(_grow_capacity(new_size)); Size = new_size; }\r\n    // inline void                 resize(int new_size, const T& v){ if (new_size > Capacity) reserve(_grow_capacity(new_size)); if (new_size > Size) for (int n = Size; n < new_size; n++) Data[n] = v; Size = new_size; }\r\n    // inline void                 reserve(int new_capacity)\r\n    // {\r\n    //     if (new_capacity <= Capacity)\r\n    //         return;\r\n    //     T* new_data = (value_type*)ImGui::MemAlloc((size_t)new_capacity * sizeof(T));\r\n    //     if (Data)\r\n    //         memcpy(new_data, Data, (size_t)Size * sizeof(T));\r\n    //     ImGui::MemFree(Data);\r\n    //     Data = new_data;\r\n    //     Capacity = new_capacity;\r\n    // }\r\n\r\n    // inline void                 push_back(const value_type& v)  { if (Size == Capacity) reserve(_grow_capacity(Size + 1)); Data[Size++] = v; }\r\n    // inline void                 pop_back()                      { IM_ASSERT(Size > 0); Size--; }\r\n    // inline void                 push_front(const value_type& v) { if (Size == 0) push_back(v); else insert(Data, v); }\r\n\r\n    // inline iterator             erase(const_iterator it)                        { IM_ASSERT(it >= Data && it < Data+Size); const ptrdiff_t off = it - Data; memmove(Data + off, Data + off + 1, ((size_t)Size - (size_t)off - 1) * sizeof(value_type)); Size--; return Data + off; }\r\n    // inline iterator             erase(const_iterator it, const_iterator it_last){ IM_ASSERT(it >= Data && it < Data+Size && it_last > it && it_last <= Data+Size); const ptrdiff_t count = it_last - it; const ptrdiff_t off = it - Data; memmove(Data + off, Data + off + count, ((size_t)Size - (size_t)off - count) * sizeof(value_type)); Size -= (int)count; return Data + off; }\r\n    // inline iterator             erase_unsorted(const_iterator it)               { IM_ASSERT(it >= Data && it < Data+Size);  const ptrdiff_t off = it - Data; if (it < Data+Size-1) memcpy(Data + off, Data + Size - 1, sizeof(value_type)); Size--; return Data + off; }\r\n    // inline iterator             insert(const_iterator it, const value_type& v)  { IM_ASSERT(it >= Data && it <= Data+Size); const ptrdiff_t off = it - Data; if (Size == Capacity) reserve(_grow_capacity(Size + 1)); if (off < (int)Size) memmove(Data + off + 1, Data + off, ((size_t)Size - (size_t)off) * sizeof(value_type)); Data[off] = v; Size++; return Data + off; }\r\n    // inline bool                 contains(const value_type& v) const             { const T* data = Data;  const T* data_end = Data + Size; while (data < data_end) if (*data++ == v) return true; return false; }\r\n}\r\n\r\n// Helper: Parse and apply text filters. In format \"aaaaa[,bbbb][,ccccc]\"\r\nexport class ImGuiTextFilter\r\n{\r\n    // IMGUI_API           ImGuiTextFilter(const char* default_filter = \"\");\r\n    constructor(default_filter: string = \"\") {\r\n        if (default_filter)\r\n        {\r\n            // ImStrncpy(InputBuf, default_filter, IM_ARRAYSIZE(InputBuf));\r\n            this.InputBuf.buffer = default_filter;\r\n            this.Build();\r\n        }\r\n        else\r\n        {\r\n            // InputBuf[0] = 0;\r\n            this.InputBuf.buffer = \"\";\r\n            this.CountGrep = 0;\r\n        }\r\n    }\r\n    // IMGUI_API bool      Draw(const char* label = \"Filter (inc,-exc)\", float width = 0.0f);    // Helper calling InputText+Build\r\n    public Draw(label: string = \"Filter (inc,-exc)\", width: number = 0.0): boolean {\r\n        if (width !== 0.0)\r\n            bind.PushItemWidth(width);\r\n        const value_changed: boolean = InputText(label, this.InputBuf, IM_ARRAYSIZE(this.InputBuf));\r\n        if (width !== 0.0)\r\n            bind.PopItemWidth();\r\n        if (value_changed)\r\n            this.Build();\r\n        return value_changed;\r\n    }\r\n    // IMGUI_API bool      PassFilter(const char* text, const char* text_end = NULL) const;\r\n    public PassFilter(text: string, text_end: number | null = null): boolean {\r\n        // if (Filters.empty())\r\n        //     return true;\r\n\r\n        // if (text == NULL)\r\n        //     text = \"\";\r\n\r\n        // for (int i = 0; i != Filters.Size; i++)\r\n        // {\r\n        //     const TextRange& f = Filters[i];\r\n        //     if (f.empty())\r\n        //         continue;\r\n        //     if (f.front() == '-')\r\n        //     {\r\n        //         // Subtract\r\n        //         if (ImStristr(text, text_end, f.begin()+1, f.end()) != NULL)\r\n        //             return false;\r\n        //     }\r\n        //     else\r\n        //     {\r\n        //         // Grep\r\n        //         if (ImStristr(text, text_end, f.begin(), f.end()) != NULL)\r\n        //             return true;\r\n        //     }\r\n        // }\r\n\r\n        // Implicit * grep\r\n        if (this.CountGrep === 0)\r\n            return true;\r\n\r\n        return false;\r\n    }\r\n    // IMGUI_API void      Build();\r\n    public Build(): void {\r\n        // Filters.resize(0);\r\n        // TextRange input_range(InputBuf, InputBuf+strlen(InputBuf));\r\n        // input_range.split(',', Filters);\r\n\r\n        this.CountGrep = 0;\r\n        // for (int i = 0; i != Filters.Size; i++)\r\n        // {\r\n        //     Filters[i].trim_blanks();\r\n        //     if (Filters[i].empty())\r\n        //         continue;\r\n        //     if (Filters[i].front() != '-')\r\n        //         CountGrep += 1;\r\n        // }\r\n    }\r\n    // void                Clear() { InputBuf[0] = 0; Build(); }\r\n    public Clear(): void { this.InputBuf.buffer = \"\"; this.Build(); }\r\n    // bool                IsActive() const { return !Filters.empty(); }\r\n    public IsActive(): boolean { return false; }\r\n\r\n    // [Internal]\r\n    // struct TextRange\r\n    // {\r\n    //     const char* b;\r\n    //     const char* e;\r\n\r\n    //     TextRange() { b = e = NULL; }\r\n    //     TextRange(const char* _b, const char* _e) { b = _b; e = _e; }\r\n    //     const char* begin() const { return b; }\r\n    //     const char* end() const { return e; }\r\n    //     bool empty() const { return b == e; }\r\n    //     char front() const { return *b; }\r\n    //     static bool is_blank(char c) { return c == ' ' || c == '\\t'; }\r\n    //     void trim_blanks() { while (b < e && is_blank(*b)) b++; while (e > b && is_blank(*(e-1))) e--; }\r\n    //     IMGUI_API void split(char separator, ImVector<TextRange>& out);\r\n    // };\r\n\r\n    // char                InputBuf[256];\r\n    public InputBuf: ImStringBuffer = new ImStringBuffer(256);\r\n    // ImVector<TextRange> Filters;\r\n    // int                 CountGrep;\r\n    public CountGrep: number = 0;\r\n}\r\n\r\n// Helper: Text buffer for logging/accumulating text\r\nexport class ImGuiTextBuffer\r\n{\r\n    // ImVector<char>      Buf;\r\n    public Buf: string = \"\";\r\n    public begin(): string { return this.Buf; }\r\n    public size(): number { return this.Buf.length; }\r\n    public clear(): void { this.Buf = \"\"; }\r\n    public append(text: string): void { this.Buf += text; }\r\n\r\n    // ImGuiTextBuffer()   { Buf.push_back(0); }\r\n    // inline char         operator[](int i) { return Buf.Data[i]; }\r\n    // const char*         begin() const { return &Buf.front(); }\r\n    // const char*         end() const { return &Buf.back(); }      // Buf is zero-terminated, so end() will point on the zero-terminator\r\n    // int                 size() const { return Buf.Size - 1; }\r\n    // bool                empty() { return Buf.Size <= 1; }\r\n    // void                clear() { Buf.clear(); Buf.push_back(0); }\r\n    // void                reserve(int capacity) { Buf.reserve(capacity); }\r\n    // const char*         c_str() const { return Buf.Data; }\r\n    // IMGUI_API void      appendf(const char* fmt, ...) IM_FMTARGS(2);\r\n    // IMGUI_API void      appendfv(const char* fmt, va_list args) IM_FMTLIST(2);\r\n}\r\n\r\n// Helper: Simple Key->value storage\r\n// Typically you don't have to worry about this since a storage is held within each Window.\r\n// We use it to e.g. store collapse state for a tree (Int 0/1), store color edit options.\r\n// This is optimized for efficient reading (dichotomy into a contiguous buffer), rare writing (typically tied to user interactions)\r\n// You can use it as custom user storage for temporary values. Declare your own storage if, for example:\r\n// - You want to manipulate the open/close state of a particular sub-tree in your interface (tree node uses Int 0/1 to store their state).\r\n// - You want to store custom debug data easily without adding or editing structures in your code (probably not efficient, but convenient)\r\n// Types are NOT stored, so it is up to you to make sure your Key don't collide with different types.\r\nexport class ImGuiStorage\r\n{\r\n    // struct Pair\r\n    // {\r\n    //     ImGuiID key;\r\n    //     union { int val_i; float val_f; void* val_p; };\r\n    //     Pair(ImGuiID _key, int _val_i)   { key = _key; val_i = _val_i; }\r\n    //     Pair(ImGuiID _key, float _val_f) { key = _key; val_f = _val_f; }\r\n    //     Pair(ImGuiID _key, void* _val_p) { key = _key; val_p = _val_p; }\r\n    // };\r\n    // ImVector<Pair>      Data;\r\n\r\n    // - Get***() functions find pair, never add/allocate. Pairs are sorted so a query is O(log N)\r\n    // - Set***() functions find pair, insertion on demand if missing.\r\n    // - Sorted insertion is costly, paid once. A typical frame shouldn't need to insert any new pair.\r\n    // void                Clear() { Data.clear(); }\r\n    // IMGUI_API int       GetInt(ImGuiID key, int default_val = 0) const;\r\n    // IMGUI_API void      SetInt(ImGuiID key, int val);\r\n    // IMGUI_API bool      GetBool(ImGuiID key, bool default_val = false) const;\r\n    // IMGUI_API void      SetBool(ImGuiID key, bool val);\r\n    // IMGUI_API float     GetFloat(ImGuiID key, float default_val = 0.0f) const;\r\n    // IMGUI_API void      SetFloat(ImGuiID key, float val);\r\n    // IMGUI_API void*     GetVoidPtr(ImGuiID key) const; // default_val is NULL\r\n    // IMGUI_API void      SetVoidPtr(ImGuiID key, void* val);\r\n\r\n    // - Get***Ref() functions finds pair, insert on demand if missing, return pointer. Useful if you intend to do Get+Set.\r\n    // - References are only valid until a new value is added to the storage. Calling a Set***() function or a Get***Ref() function invalidates the pointer.\r\n    // - A typical use case where this is convenient for quick hacking (e.g. add storage during a live Edit&Continue session if you can't modify existing struct)\r\n    //      float* pvar = ImGui::GetFloatRef(key); ImGui::SliderFloat(\"var\", pvar, 0, 100.0f); some_var += *pvar;\r\n    // IMGUI_API int*      GetIntRef(ImGuiID key, int default_val = 0);\r\n    // IMGUI_API bool*     GetBoolRef(ImGuiID key, bool default_val = false);\r\n    // IMGUI_API float*    GetFloatRef(ImGuiID key, float default_val = 0.0f);\r\n    // IMGUI_API void**    GetVoidPtrRef(ImGuiID key, void* default_val = NULL);\r\n\r\n    // Use on your own storage if you know only integer are being stored (open/close all tree nodes)\r\n    // IMGUI_API void      SetAllInt(int val);\r\n\r\n    // For quicker full rebuild of a storage (instead of an incremental one), you may add all your contents and then sort once.\r\n    // IMGUI_API void      BuildSortByKey();\r\n}\r\n\r\n// Data payload for Drag and Drop operations\r\nexport class ImGuiPayload<T>\r\n{\r\n    // Members\r\n    // void*           Data;               // Data (copied and owned by dear imgui)\r\n    Data!: T;\r\n    // int             DataSize;           // Data size\r\n\r\n    // [Internal]\r\n    // ImGuiID         SourceId;           // Source item id\r\n    // ImGuiID         SourceParentId;     // Source parent id (if available)\r\n    // int             DataFrameCount;     // Data timestamp\r\n    // char            DataType[12 + 1];    // Data type tag (short user-supplied string, 12 characters max)\r\n    // bool            Preview;            // Set when AcceptDragDropPayload() was called and mouse has been hovering the target item (nb: handle overlapping drag targets)\r\n    // bool            Delivery;           // Set when AcceptDragDropPayload() was called and mouse button is released over the target item.\r\n\r\n    // ImGuiPayload()  { Clear(); }\r\n    // void Clear()    { SourceId = SourceParentId = 0; Data = NULL; DataSize = 0; memset(DataType, 0, sizeof(DataType)); DataFrameCount = -1; Preview = Delivery = false; }\r\n    // bool IsDataType(const char* type) const { return DataFrameCount != -1 && strcmp(type, DataType) == 0; }\r\n    // bool IsPreview() const                  { return Preview; }\r\n    // bool IsDelivery() const                 { return Delivery; }\r\n}\r\n\r\n// Helpers macros to generate 32-bits encoded colors\r\nexport const IM_COL32_R_SHIFT: number = config.IMGUI_USE_BGRA_PACKED_COLOR ? 16 : 0;\r\nexport const IM_COL32_G_SHIFT: number = 8;\r\nexport const IM_COL32_B_SHIFT: number = config.IMGUI_USE_BGRA_PACKED_COLOR ? 0 : 16;\r\nexport const IM_COL32_A_SHIFT: number = 24;\r\nexport const IM_COL32_A_MASK: number = 0xFF000000;\r\nexport function IM_COL32(R: number, G: number, B: number, A: number = 255): number {\r\n    return ((A << IM_COL32_A_SHIFT) | (B << IM_COL32_B_SHIFT) | (G << IM_COL32_G_SHIFT) | (R << IM_COL32_R_SHIFT)) >>> 0;\r\n}\r\nexport const IM_COL32_WHITE: number = IM_COL32(255, 255, 255, 255);  // Opaque white = 0xFFFFFFFF\r\nexport const IM_COL32_BLACK: number = IM_COL32(0, 0, 0, 255);        // Opaque black\r\nexport const IM_COL32_BLACK_TRANS: number = IM_COL32(0, 0, 0, 0);    // Transparent black = 0x00000000\r\n\r\n// ImColor() helper to implicity converts colors to either ImU32 (packed 4x1 byte) or ImVec4 (4x1 float)\r\n// Prefer using IM_COL32() macros if you want a guaranteed compile-time ImU32 for usage with ImDrawList API.\r\n// **Avoid storing ImColor! Store either u32 of ImVec4. This is not a full-featured color class. MAY OBSOLETE.\r\n// **None of the ImGui API are using ImColor directly but you can use it as a convenience to pass colors in either ImU32 or ImVec4 formats. Explicitly cast to ImU32 or ImVec4 if needed.\r\nexport class ImColor\r\n{\r\n    // ImVec4              Value;\r\n    public Value: ImVec4 = new ImVec4();\r\n\r\n    // ImColor()                                                       { Value.x = Value.y = Value.z = Value.w = 0.0f; }\r\n    // ImColor(int r, int g, int b, int a = 255)                       { float sc = 1.0f/255.0f; Value.x = (float)r * sc; Value.y = (float)g * sc; Value.z = (float)b * sc; Value.w = (float)a * sc; }\r\n    // ImColor(ImU32 rgba)                                             { float sc = 1.0f/255.0f; Value.x = (float)((rgba>>IM_COL32_R_SHIFT)&0xFF) * sc; Value.y = (float)((rgba>>IM_COL32_G_SHIFT)&0xFF) * sc; Value.z = (float)((rgba>>IM_COL32_B_SHIFT)&0xFF) * sc; Value.w = (float)((rgba>>IM_COL32_A_SHIFT)&0xFF) * sc; }\r\n    // ImColor(float r, float g, float b, float a = 1.0f)              { Value.x = r; Value.y = g; Value.z = b; Value.w = a; }\r\n    // ImColor(const ImVec4& col)                                      { Value = col; }\r\n    constructor();\r\n    constructor(r: number, g: number, b: number);\r\n    constructor(r: number, g: number, b: number, a: number);\r\n    constructor(rgba: Bind.ImU32);\r\n    constructor(col: Readonly<Bind.interface_ImVec4>);\r\n    constructor(r: number | Bind.ImU32 | Readonly<Bind.interface_ImVec4> = 0.0, g: number = 0.0, b: number = 0.0, a: number = 1.0) {\r\n        if (typeof(r) === \"number\") {\r\n            if (r > 255 && g === 0.0 && b === 0.0 && a === 1.0) {\r\n                this.Value.x = Math.max(0.0, Math.min(1.0, ((r >> IM_COL32_R_SHIFT) & 0xFF) / 255));\r\n                this.Value.y = Math.max(0.0, Math.min(1.0, ((r >> IM_COL32_G_SHIFT) & 0xFF) / 255));\r\n                this.Value.z = Math.max(0.0, Math.min(1.0, ((r >> IM_COL32_B_SHIFT) & 0xFF) / 255));\r\n                this.Value.w = Math.max(0.0, Math.min(1.0, ((r >> IM_COL32_A_SHIFT) & 0xFF) / 255));\r\n            } else if (r <= 1.0 && g <= 1.0 && b <= 1.0 && a <= 1.0) {\r\n                this.Value.x = Math.max(0.0, r);\r\n                this.Value.y = Math.max(0.0, g);\r\n                this.Value.z = Math.max(0.0, b);\r\n                this.Value.w = Math.max(0.0, a);\r\n            } else {\r\n                this.Value.x = Math.max(0.0, Math.min(1.0, r / 255));\r\n                this.Value.y = Math.max(0.0, Math.min(1.0, g / 255));\r\n                this.Value.z = Math.max(0.0, Math.min(1.0, b / 255));\r\n                if (a <= 1.0) {\r\n                    this.Value.w = Math.max(0.0, a);\r\n                } else {\r\n                    this.Value.w = Math.max(0.0, Math.min(1.0, a / 255));\r\n                }\r\n            }\r\n        } else {\r\n            this.Value.Copy(r);\r\n        }\r\n    }\r\n    // inline operator ImU32() const                                   { return ImGui::ColorConvertFloat4ToU32(Value); }\r\n    public toImU32(): Bind.ImU32 { return ColorConvertFloat4ToU32(this.Value); }\r\n    // inline operator ImVec4() const                                  { return Value; }\r\n    public toImVec4(): ImVec4 { return this.Value; }\r\n\r\n    // FIXME-OBSOLETE: May need to obsolete/cleanup those helpers.\r\n    // inline void    SetHSV(float h, float s, float v, float a = 1.0f){ ImGui::ColorConvertHSVtoRGB(h, s, v, Value.x, Value.y, Value.z); Value.w = a; }\r\n    public SetHSV(h: number, s: number, v: number, a: number = 1.0): void {\r\n        const ref_r: Bind.ImScalar<number> = [ this.Value.x ];\r\n        const ref_g: Bind.ImScalar<number> = [ this.Value.y ];\r\n        const ref_b: Bind.ImScalar<number> = [ this.Value.z ];\r\n        ColorConvertHSVtoRGB(h, s, v, ref_r, ref_g, ref_b);\r\n        this.Value.x = ref_r[0];\r\n        this.Value.y = ref_g[0];\r\n        this.Value.z = ref_b[0];\r\n        this.Value.w = a;\r\n    }\r\n    // static ImColor HSV(float h, float s, float v, float a = 1.0f)   { float r,g,b; ImGui::ColorConvertHSVtoRGB(h, s, v, r, g, b); return ImColor(r,g,b,a); }\r\n    public static HSV(h: number, s: number, v: number, a: number = 1.0): ImColor {\r\n        const color = new ImColor();\r\n        color.SetHSV(h, s, v, a);\r\n        return color;\r\n    }\r\n}\r\n\r\nexport const ImGuiInputTextDefaultSize: number = 128;\r\n\r\nexport type ImGuiInputTextCallback = (data: ImGuiInputTextCallbackData) => number;\r\n\r\n// Shared state of InputText(), passed to callback when a ImGuiInputTextFlags_Callback* flag is used and the corresponding callback is triggered.\r\nexport class ImGuiInputTextCallbackData {\r\n    constructor(public readonly native: Bind.reference_ImGuiInputTextCallbackData, public readonly UserData: any) {}\r\n\r\n    // ImGuiInputTextFlags EventFlag;      // One of ImGuiInputTextFlags_Callback* // Read-only\r\n    public get EventFlag(): ImGuiInputTextFlags { return this.native.EventFlag; }\r\n    // ImGuiInputTextFlags Flags;          // What user passed to InputText()      // Read-only\r\n    public get Flags(): ImGuiInputTextFlags { return this.native.Flags; }\r\n    // void*               UserData;       // What user passed to InputText()      // Read-only\r\n    // public get UserData(): any { return this.native.UserData; }\r\n\r\n    // CharFilter event:\r\n    // ImWchar             EventChar;      // Character input                      // Read-write (replace character or set to zero)\r\n    public get EventChar(): Bind.ImWchar { return this.native.EventChar; }\r\n    public set EventChar(value: Bind.ImWchar) { this.native.EventChar = value; }\r\n\r\n    // Completion,History,Always events:\r\n    // If you modify the buffer contents make sure you update 'BufTextLen' and set 'BufDirty' to true.\r\n    // ImGuiKey            EventKey;       // Key pressed (Up/Down/TAB)            // Read-only\r\n    public get EventKey(): ImGuiKey { return this.native.EventKey; }\r\n    // char*               Buf;            // Current text buffer                  // Read-write (pointed data only, can't replace the actual pointer)\r\n    public get Buf(): string { return this.native.Buf; }\r\n    public set Buf(value: string) { this.native.Buf = value; }\r\n    // int                 BufTextLen;     // Current text length in bytes         // Read-write\r\n    public get BufTextLen(): number { return this.native.BufTextLen; }\r\n    public set BufTextLen(value: number) { this.native.BufTextLen = value; }\r\n    // int                 BufSize;        // Maximum text length in bytes         // Read-only\r\n    public get BufSize(): number { return this.native.BufSize; }\r\n    // bool                BufDirty;       // Set if you modify Buf/BufTextLen!!   // Write\r\n    public set BufDirty(value: boolean) { this.native.BufDirty = value; }\r\n    // int                 CursorPos;      //                                      // Read-write\r\n    public get CursorPos(): number { return this.native.CursorPos; }\r\n    public set CursorPos(value: number) { this.native.CursorPos = value; }\r\n    // int                 SelectionStart; //                                      // Read-write (== to SelectionEnd when no selection)\r\n    public get SelectionStart(): number { return this.native.SelectionStart; }\r\n    public set SelectionStart(value: number) { this.native.SelectionStart = value; }\r\n    // int                 SelectionEnd;   //                                      // Read-write\r\n    public get SelectionEnd(): number { return this.native.SelectionEnd; }\r\n    public set SelectionEnd(value: number) { this.native.SelectionEnd = value; }\r\n\r\n    // NB: Helper functions for text manipulation. Calling those function loses selection.\r\n    // IMGUI_API void    DeleteChars(int pos, int bytes_count);\r\n    public DeleteChars(pos: number, bytes_count: number): void { return this.native.DeleteChars(pos, bytes_count); }\r\n    // IMGUI_API void    InsertChars(int pos, const char* text, const char* text_end = NULL);\r\n    public InsertChars(pos: number, text: string, text_end: number | null = null): void { return this.native.InsertChars(pos, text_end !== null ? text.substring(0, text_end) : text); }\r\n    // bool              HasSelection() const { return SelectionStart != SelectionEnd; }\r\n    public HasSelection(): boolean { return this.native.HasSelection(); }\r\n}\r\n\r\nexport type ImGuiSizeConstraintCallback = (data: ImGuiSizeCallbackData) => void;\r\n\r\n// Resizing callback data to apply custom constraint. As enabled by SetNextWindowSizeConstraints(). Callback is called during the next Begin().\r\n// NB: For basic min/max size constraint on each axis you don't need to use the callback! The SetNextWindowSizeConstraints() parameters are enough.\r\nexport class ImGuiSizeCallbackData {\r\n    constructor(public readonly native: Bind.reference_ImGuiSizeCallbackData, public readonly UserData: any) {}\r\n\r\n    get Pos(): Readonly<Bind.interface_ImVec2> { return this.native.Pos; }\r\n    get CurrentSize(): Readonly<Bind.interface_ImVec2> { return this.native.CurrentSize; }\r\n    get DesiredSize(): Bind.interface_ImVec2 { return this.native.DesiredSize; }\r\n}\r\n\r\nexport class ImGuiListClipper\r\n{\r\n    private native: Bind.ImGuiListClipper;\r\n\r\n    public get StartPosY(): number { return this.native.StartPosY; }\r\n    public get ItemsHeight(): number { return this.native.ItemsHeight; }\r\n    public get ItemsCount(): number { return this.native.ItemsCount; }\r\n    public get StepNo(): number { return this.native.StepNo; }\r\n    public get DisplayStart(): number { return this.native.DisplayStart; }\r\n    public get DisplayEnd(): number { return this.native.DisplayEnd; }\r\n\r\n    // items_count:  Use -1 to ignore (you can call Begin later). Use INT_MAX if you don't know how many items you have (in which case the cursor won't be advanced in the final step).\r\n    // items_height: Use -1.0f to be calculated automatically on first step. Otherwise pass in the distance between your items, typically GetTextLineHeightWithSpacing() or GetFrameHeightWithSpacing().\r\n    // If you don't specify an items_height, you NEED to call Step(). If you specify items_height you may call the old Begin()/End() api directly, but prefer calling Step().\r\n    // ImGuiListClipper(int items_count = -1, float items_height = -1.0f)  { Begin(items_count, items_height); } // NB: Begin() initialize every fields (as we allow user to call Begin/End multiple times on a same instance if they want).\r\n    constructor(items_count: number = -1, items_height: number = -1.0) {\r\n        this.native = new bind.ImGuiListClipper(items_count, items_height);\r\n    }\r\n    // ~ImGuiListClipper()                                                 { IM_ASSERT(ItemsCount == -1); }      // Assert if user forgot to call End() or Step() until false.\r\n    public delete(): void {\r\n        if (this.native) {\r\n            this.native.delete();\r\n            delete this.native;\r\n        }\r\n    }\r\n\r\n    // IMGUI_API bool Step();                                              // Call until it returns false. The DisplayStart/DisplayEnd fields will be set and you can process/draw those items.\r\n    public Step(): boolean {\r\n        if (!this.native) { throw new Error(); }\r\n        const busy: boolean = this.native.Step();\r\n        if (!busy) {\r\n            this.delete();\r\n        }\r\n        return busy;\r\n    }\r\n    // IMGUI_API void Begin(int items_count, float items_height = -1.0f);  // Automatically called by constructor if you passed 'items_count' or by Step() in Step 1.\r\n    public Begin(items_count: number, items_height: number = -1.0): void {\r\n        if (!this.native) {\r\n            this.native = new Bind.ImGuiListClipper(items_count, items_height);\r\n        }\r\n        this.native.Begin(items_count, items_height);\r\n    }\r\n    // IMGUI_API void End();                                               // Automatically called on the last call of Step() that returns false.\r\n    public End(): void {\r\n        if (!this.native) { throw new Error(); }\r\n        this.native.End();\r\n        this.delete();\r\n    }\r\n}\r\n\r\n//-----------------------------------------------------------------------------\r\n// Draw List\r\n// Hold a series of drawing commands. The user provides a renderer for ImDrawData which essentially contains an array of ImDrawList.\r\n//-----------------------------------------------------------------------------\r\n\r\n// Draw callbacks for advanced uses.\r\n// NB- You most likely do NOT need to use draw callbacks just to create your own widget or customized UI rendering (you can poke into the draw list for that)\r\n// Draw callback may be useful for example, A) Change your GPU render state, B) render a complex 3D scene inside a UI element (without an intermediate texture/render target), etc.\r\n// The expected behavior from your rendering function is 'if (cmd.UserCallback != NULL) cmd.UserCallback(parent_list, cmd); else RenderTriangles()'\r\n// typedef void (*ImDrawCallback)(const ImDrawList* parent_list, const ImDrawCmd* cmd);\r\nexport type ImDrawCallback = (parent_list: Readonly<ImDrawList>, cmd: Readonly<ImDrawCmd>) => void;\r\n\r\n// Typically, 1 command = 1 GPU draw call (unless command is a callback)\r\nexport class ImDrawCmd\r\n{\r\n    constructor(public readonly native: Bind.reference_ImDrawCmd) {}\r\n\r\n    // unsigned int    ElemCount;              // Number of indices (multiple of 3) to be rendered as triangles. Vertices are stored in the callee ImDrawList's vtx_buffer[] array, indices in idx_buffer[].\r\n    get ElemCount(): number { return this.native.ElemCount; }\r\n    // ImVec4          ClipRect;               // Clipping rectangle (x1, y1, x2, y2)\r\n    get ClipRect(): Readonly<Bind.reference_ImVec4> { return this.native.ClipRect; }\r\n    // ImTextureID     TextureId;              // User-provided texture ID. Set by user in ImfontAtlas::SetTexID() for fonts or passed to Image*() functions. Ignore if never using images or multiple fonts atlas.\r\n    get TextureId(): ImTextureID | null {\r\n        return ImGuiContext.getTexture(this.native.TextureId);\r\n    }\r\n    // ImDrawCallback  UserCallback;           // If != NULL, call the function instead of rendering the vertices. clip_rect and texture_id will be set normally.\r\n    public readonly UserCallback: ImDrawCallback | null = null; // TODO\r\n    // void*           UserCallbackData;       // The draw callback code can access this.\r\n    public readonly UserCallbackData: any = null; // TODO\r\n\r\n    // ImDrawCmd() { ElemCount = 0; ClipRect.x = ClipRect.y = ClipRect.z = ClipRect.w = 0.0f; TextureId = NULL; UserCallback = NULL; UserCallbackData = NULL; }\r\n}\r\n\r\n// Vertex index (override with '#define ImDrawIdx unsigned int' inside in imconfig.h)\r\n// #ifndef ImDrawIdx\r\n// typedef unsigned short ImDrawIdx;\r\n// #endif\r\nexport const ImDrawIdxSize: number = 2; // bind.ImDrawIdxSize;\r\nexport type ImDrawIdx = number;\r\n\r\n// Vertex layout\r\n// #ifndef IMGUI_OVERRIDE_DRAWVERT_STRUCT_LAYOUT\r\nexport const ImDrawVertSize: number = 20; // bind.ImDrawVertSize;\r\nexport const ImDrawVertPosOffset: number = 0; // bind.ImDrawVertPosOffset;\r\nexport const ImDrawVertUVOffset: number = 8; // bind.ImDrawVertUVOffset;\r\nexport const ImDrawVertColOffset: number = 16; // bind.ImDrawVertColOffset;\r\nexport class ImDrawVert\r\n{\r\n    // ImVec2  pos;\r\n    public pos: Float32Array;\r\n    // ImVec2  uv;\r\n    public uv: Float32Array;\r\n    // ImU32   col;\r\n    public col: Uint32Array;\r\n\r\n    constructor(buffer: ArrayBuffer, byteOffset: number = 0) {\r\n        this.pos = new Float32Array(buffer, byteOffset + bind.ImDrawVertPosOffset, 2);\r\n        this.uv = new Float32Array(buffer, byteOffset + bind.ImDrawVertUVOffset, 2);\r\n        this.col = new Uint32Array(buffer, byteOffset + bind.ImDrawVertColOffset, 1);\r\n    }\r\n}\r\n// #else\r\n// You can override the vertex format layout by defining IMGUI_OVERRIDE_DRAWVERT_STRUCT_LAYOUT in imconfig.h\r\n// The code expect ImVec2 pos (8 bytes), ImVec2 uv (8 bytes), ImU32 col (4 bytes), but you can re-order them or add other fields as needed to simplify integration in your engine.\r\n// The type has to be described within the macro (you can either declare the struct or use a typedef)\r\n// NOTE: IMGUI DOESN'T CLEAR THE STRUCTURE AND DOESN'T CALL A CONSTRUCTOR SO ANY CUSTOM FIELD WILL BE UNINITIALIZED. IF YOU ADD EXTRA FIELDS (SUCH AS A 'Z' COORDINATES) YOU WILL NEED TO CLEAR THEM DURING RENDER OR TO IGNORE THEM.\r\n// IMGUI_OVERRIDE_DRAWVERT_STRUCT_LAYOUT;\r\n// #endif\r\n\r\n// Draw channels are used by the Columns API to \"split\" the render list into different channels while building, so items of each column can be batched together.\r\n// You can also use them to simulate drawing layers and submit primitives in a different order than how they will be rendered.\r\nexport class ImDrawChannel\r\n{\r\n    // ImVector<ImDrawCmd>     CmdBuffer;\r\n    // ImVector<ImDrawIdx>     IdxBuffer;\r\n}\r\n\r\nexport class ImDrawListSharedData\r\n{\r\n    constructor(public readonly native: Bind.reference_ImDrawListSharedData) {}\r\n}\r\n\r\n// Draw command list\r\n// This is the low-level list of polygons that ImGui functions are filling. At the end of the frame, all command lists are passed to your ImGuiIO::RenderDrawListFn function for rendering.\r\n// Each ImGui window contains its own ImDrawList. You can use ImGui::GetWindowDrawList() to access the current window draw list and draw custom primitives.\r\n// You can interleave normal ImGui:: calls and adding primitives to the current draw list.\r\n// All positions are generally in pixel coordinates (top-left at (0,0), bottom-right at io.DisplaySize), however you are totally free to apply whatever transformation matrix to want to the data (if you apply such transformation you'll want to apply it to ClipRect as well)\r\n// Important: Primitives are always added to the list and not culled (culling is done at higher-level by ImGui:: functions), if you use this API a lot consider coarse culling your drawn objects.\r\nexport class ImDrawList\r\n{\r\n    constructor(public readonly native: Bind.reference_ImDrawList) {}\r\n\r\n    public IterateDrawCmds(callback: (draw_cmd: ImDrawCmd, ElemStart: number) => void): void {\r\n        this.native.IterateDrawCmds((draw_cmd: Bind.reference_ImDrawCmd, ElemStart: number): void => {\r\n            callback(new ImDrawCmd(draw_cmd), ElemStart);\r\n        });\r\n    }\r\n\r\n    // This is what you have to render\r\n    // ImVector<ImDrawCmd>     CmdBuffer;          // Draw commands. Typically 1 command = 1 GPU draw call, unless the command is a callback.\r\n    // ImVector<ImDrawIdx>     IdxBuffer;          // Index buffer. Each command consume ImDrawCmd::ElemCount of those\r\n    get IdxBuffer(): Uint8Array { return this.native.IdxBuffer; }\r\n    // ImVector<ImDrawVert>    VtxBuffer;          // Vertex buffer.\r\n    get VtxBuffer(): Uint8Array { return this.native.VtxBuffer; }\r\n    // ImDrawListFlags         Flags;              // Flags, you may poke into these to adjust anti-aliasing settings per-primitive.\r\n    get Flags(): ImDrawListFlags { return this.native.Flags; }\r\n    set Flags(value: ImDrawListFlags) { this.native.Flags = value; }\r\n\r\n    // [Internal, used while building lists]\r\n    // const ImDrawListSharedData* _Data;          // Pointer to shared draw data (you can use ImGui::GetDrawListSharedData() to get the one from current ImGui context)\r\n    // const char*             _OwnerName;         // Pointer to owner window's name for debugging\r\n    // unsigned int            _VtxCurrentIdx;     // [Internal] == VtxBuffer.Size\r\n    // ImDrawVert*             _VtxWritePtr;       // [Internal] point within VtxBuffer.Data after each add command (to avoid using the ImVector<> operators too much)\r\n    // ImDrawIdx*              _IdxWritePtr;       // [Internal] point within IdxBuffer.Data after each add command (to avoid using the ImVector<> operators too much)\r\n    // ImVector<ImVec4>        _ClipRectStack;     // [Internal]\r\n    // ImVector<ImTextureID>   _TextureIdStack;    // [Internal]\r\n    // ImVector<ImVec2>        _Path;              // [Internal] current path building\r\n    // int                     _ChannelsCurrent;   // [Internal] current channel number (0)\r\n    // int                     _ChannelsCount;     // [Internal] number of active channels (1+)\r\n    // ImVector<ImDrawChannel> _Channels;          // [Internal] draw channels for columns API (not resized down so _ChannelsCount may be smaller than _Channels.Size)\r\n\r\n    // ImDrawList(const ImDrawListSharedData* shared_data) { _Data = shared_data; _OwnerName = NULL; Clear(); }\r\n    // ~ImDrawList() { ClearFreeMemory(); }\r\n    // IMGUI_API void  PushClipRect(ImVec2 clip_rect_min, ImVec2 clip_rect_max, bool intersect_with_current_clip_rect = false);  // Render-level scissoring. This is passed down to your render function but not used for CPU-side coarse clipping. Prefer using higher-level ImGui::PushClipRect() to affect logic (hit-testing and widget culling)\r\n    public PushClipRect(clip_rect_min: Readonly<Bind.interface_ImVec2>, clip_rect_max: Readonly<Bind.interface_ImVec2>, intersect_with_current_clip_rect: boolean = false): void {\r\n        this.native.PushClipRect(clip_rect_min, clip_rect_max, intersect_with_current_clip_rect);\r\n    }\r\n    // IMGUI_API void  PushClipRectFullScreen();\r\n    public PushClipRectFullScreen(): void { this.native.PushClipRectFullScreen(); }\r\n    // IMGUI_API void  PopClipRect();\r\n    public PopClipRect(): void { this.native.PopClipRect(); }\r\n    // IMGUI_API void  PushTextureID(ImTextureID texture_id);\r\n    public PushTextureID(texture_id: ImTextureID): void {\r\n        this.native.PushTextureID(ImGuiContext.setTexture(texture_id));\r\n    }\r\n    // IMGUI_API void  PopTextureID();\r\n    public PopTextureID(): void { this.native.PopTextureID(); }\r\n    // inline ImVec2   GetClipRectMin() const { const ImVec4& cr = _ClipRectStack.back(); return ImVec2(cr.x, cr.y); }\r\n    public GetClipRectMin(out: Bind.interface_ImVec2 = new ImVec2()): typeof out {\r\n        return this.native.GetClipRectMin(out);\r\n    }\r\n    // inline ImVec2   GetClipRectMax() const { const ImVec4& cr = _ClipRectStack.back(); return ImVec2(cr.z, cr.w); }\r\n    public GetClipRectMax(out: Bind.interface_ImVec2 = new ImVec2()): typeof out {\r\n        return this.native.GetClipRectMax(out);\r\n    }\r\n\r\n    // Primitives\r\n    // IMGUI_API void  AddLine(const ImVec2& a, const ImVec2& b, ImU32 col, float thickness = 1.0f);\r\n    public AddLine(a: Readonly<Bind.interface_ImVec2>, b: Readonly<Bind.interface_ImVec2>, col: Bind.ImU32, thickness: number = 1.0): void {\r\n        this.native.AddLine(a, b, col, thickness);\r\n    }\r\n    // IMGUI_API void  AddRect(const ImVec2& a, const ImVec2& b, ImU32 col, float rounding = 0.0f, int rounding_corners_flags = ImDrawCornerFlags_All, float thickness = 1.0f);   // a: upper-left, b: lower-right, rounding_corners_flags: 4-bits corresponding to which corner to round\r\n    public AddRect(a: Readonly<Bind.interface_ImVec2>, b: Readonly<Bind.interface_ImVec2>, col: Bind.ImU32, rounding: number = 0.0, rounding_corners_flags: ImDrawCornerFlags = ImDrawCornerFlags.All, thickness: number = 1.0): void {\r\n        this.native.AddRect(a, b, col, rounding, rounding_corners_flags, thickness);\r\n    }\r\n    // IMGUI_API void  AddRectFilled(const ImVec2& a, const ImVec2& b, ImU32 col, float rounding = 0.0f, int rounding_corners_flags = ImDrawCornerFlags_All);                     // a: upper-left, b: lower-right\r\n    public AddRectFilled(a: Readonly<Bind.interface_ImVec2>, b: Readonly<Bind.interface_ImVec2>, col: Bind.ImU32, rounding: number = 0.0, rounding_corners_flags: ImDrawCornerFlags = ImDrawCornerFlags.All): void {\r\n        this.native.AddRectFilled(a, b, col, rounding, rounding_corners_flags);\r\n    }\r\n    // IMGUI_API void  AddRectFilledMultiColor(const ImVec2& a, const ImVec2& b, ImU32 col_upr_left, ImU32 col_upr_right, ImU32 col_bot_right, ImU32 col_bot_left);\r\n    public AddRectFilledMultiColor(a: Readonly<Bind.interface_ImVec2>, b: Readonly<Bind.interface_ImVec2>, col_upr_left: Bind.ImU32, col_upr_right: Bind.ImU32, col_bot_right: Bind.ImU32, col_bot_left: Bind.ImU32): void {\r\n        this.native.AddRectFilledMultiColor(a, b, col_upr_left, col_upr_right, col_bot_right, col_bot_left);\r\n    }\r\n    // IMGUI_API void  AddQuad(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& d, ImU32 col, float thickness = 1.0f);\r\n    public AddQuad(a: Readonly<Bind.interface_ImVec2>, b: Readonly<Bind.interface_ImVec2>, c: Readonly<Bind.interface_ImVec2>, d: Readonly<Bind.interface_ImVec2>, col: Bind.ImU32, thickness: number = 1.0): void {\r\n        this.native.AddQuad(a, b, c, d, col, thickness);\r\n    }\r\n    // IMGUI_API void  AddQuadFilled(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& d, ImU32 col);\r\n    public AddQuadFilled(a: Readonly<Bind.interface_ImVec2>, b: Readonly<Bind.interface_ImVec2>, c: Readonly<Bind.interface_ImVec2>, d: Readonly<Bind.interface_ImVec2>, col: Bind.ImU32): void {\r\n        this.native.AddQuadFilled(a, b, c, d, col);\r\n    }\r\n    // IMGUI_API void  AddTriangle(const ImVec2& a, const ImVec2& b, const ImVec2& c, ImU32 col, float thickness = 1.0f);\r\n    public AddTriangle(a: Readonly<Bind.interface_ImVec2>, b: Readonly<Bind.interface_ImVec2>, c: Readonly<Bind.interface_ImVec2>, col: Bind.ImU32, thickness: number = 1.0): void {\r\n        this.native.AddTriangle(a, b, c, col, thickness);\r\n    }\r\n    // IMGUI_API void  AddTriangleFilled(const ImVec2& a, const ImVec2& b, const ImVec2& c, ImU32 col);\r\n    public AddTriangleFilled(a: Readonly<Bind.interface_ImVec2>, b: Readonly<Bind.interface_ImVec2>, c: Readonly<Bind.interface_ImVec2>, col: Bind.ImU32): void {\r\n        this.native.AddTriangleFilled(a, b, c, col);\r\n    }\r\n    // IMGUI_API void  AddCircle(const ImVec2& centre, float radius, ImU32 col, int num_segments = 12, float thickness = 1.0f);\r\n    public AddCircle(centre: Readonly<Bind.interface_ImVec2>, radius: number, col: Bind.ImU32, num_segments: number = 12, thickness: number = 1.0): void {\r\n        this.native.AddCircle(centre, radius, col, num_segments, thickness);\r\n    }\r\n    // IMGUI_API void  AddCircleFilled(const ImVec2& centre, float radius, ImU32 col, int num_segments = 12);\r\n    public AddCircleFilled(centre: Readonly<Bind.interface_ImVec2>, radius: number, col: Bind.ImU32, num_segments: number = 12): void {\r\n        this.native.AddCircleFilled(centre, radius, col, num_segments);\r\n    }\r\n    // IMGUI_API void  AddText(const ImVec2& pos, ImU32 col, const char* text_begin, const char* text_end = NULL);\r\n    // IMGUI_API void  AddText(const ImFont* font, float font_size, const ImVec2& pos, ImU32 col, const char* text_begin, const char* text_end = NULL, float wrap_width = 0.0f, const ImVec4* cpu_fine_clip_rect = NULL);\r\n    public AddText(pos: Readonly<Bind.interface_ImVec2>, col: Bind.ImU32, text_begin: string, text_end?: number | null): void;\r\n    public AddText(font: ImFont, font_size: number, pos: Readonly<Bind.interface_ImVec2>, col: Bind.ImU32, text_begin: string, text_end?: number | null, wrap_width?: number, cpu_fine_clip_rect?: Readonly<Bind.interface_ImVec4> | null): void;\r\n    public AddText(...args: any[]): void {\r\n        if (args[0] instanceof ImFont) {\r\n            const font: ImFont = args[0];\r\n            const font_size: number = args[1];\r\n            const pos: Readonly<Bind.interface_ImVec2> = args[2];\r\n            const col: Bind.ImU32 = args[3];\r\n            const text_begin: string = args[4];\r\n            const text_end: number | null = args[5] || null;\r\n            const wrap_width: number = args[6] = 0.0;\r\n            const cpu_fine_clip_rect: Readonly<Bind.interface_ImVec4> | null = args[7] || null;\r\n            this.native.AddText_B(font.native, font_size, pos, col, text_end !== null ? text_begin.substring(0, text_end) : text_begin, wrap_width, cpu_fine_clip_rect);\r\n        } else {\r\n            const pos: Readonly<Bind.interface_ImVec2> = args[0];\r\n            const col: Bind.ImU32 = args[1];\r\n            const text_begin: string = args[2];\r\n            const text_end: number | null = args[3] || null;\r\n            this.native.AddText_A(pos, col, text_end !== null ? text_begin.substring(0, text_end) : text_begin);\r\n        }\r\n    }\r\n    // IMGUI_API void  AddImage(ImTextureID user_texture_id, const ImVec2& a, const ImVec2& b, const ImVec2& uv_a = ImVec2(0,0), const ImVec2& uv_b = ImVec2(1,1), ImU32 col = 0xFFFFFFFF);\r\n    public AddImage(user_texture_id: ImTextureID | null, a: Readonly<Bind.interface_ImVec2>, b: Readonly<Bind.interface_ImVec2>, uv_a: Readonly<Bind.interface_ImVec2> = ImVec2.ZERO, uv_b: Readonly<Bind.interface_ImVec2> = ImVec2.UNIT, col: Bind.ImU32 = 0xFFFFFFFF): void {\r\n        this.native.AddImage(ImGuiContext.setTexture(user_texture_id), a, b, uv_a, uv_b, col);\r\n    }\r\n    // IMGUI_API void  AddImageQuad(ImTextureID user_texture_id, const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& d, const ImVec2& uv_a = ImVec2(0,0), const ImVec2& uv_b = ImVec2(1,0), const ImVec2& uv_c = ImVec2(1,1), const ImVec2& uv_d = ImVec2(0,1), ImU32 col = 0xFFFFFFFF);\r\n    public AddImageQuad(user_texture_id: ImTextureID | null, a: Readonly<Bind.interface_ImVec2>, b: Readonly<Bind.interface_ImVec2>, c: Readonly<Bind.interface_ImVec2>, d: Readonly<Bind.interface_ImVec2>, uv_a: Readonly<Bind.interface_ImVec2> = ImVec2.ZERO, uv_b: Readonly<Bind.interface_ImVec2> = ImVec2.UNIT_X, uv_c: Readonly<Bind.interface_ImVec2> = ImVec2.UNIT, uv_d: Readonly<Bind.interface_ImVec2> = ImVec2.UNIT_Y, col: Bind.ImU32 = 0xFFFFFFFF): void {\r\n        this.native.AddImageQuad(ImGuiContext.setTexture(user_texture_id), a, b, c, d, uv_a, uv_b, uv_c, uv_d, col);\r\n    }\r\n    // IMGUI_API void  AddImageRounded(ImTextureID user_texture_id, const ImVec2& a, const ImVec2& b, const ImVec2& uv_a, const ImVec2& uv_b, ImU32 col, float rounding, int rounding_corners = ImDrawCornerFlags_All);\r\n    public AddImageRounded(user_texture_id: ImTextureID | null, a: Readonly<Bind.interface_ImVec2>, b: Readonly<Bind.interface_ImVec2>, uv_a: Readonly<Bind.interface_ImVec2>, uv_b: Readonly<Bind.interface_ImVec2>, col: Bind.ImU32, rounding: number, rounding_corners: ImDrawCornerFlags = ImDrawCornerFlags.All): void {\r\n        this.native.AddImageRounded(ImGuiContext.setTexture(user_texture_id), a, b, uv_a, uv_b, col, rounding, rounding_corners);\r\n    }\r\n    // IMGUI_API void  AddPolyline(const ImVec2* points, const int num_points, ImU32 col, bool closed, float thickness);\r\n    public AddPolyline(points: Array<Readonly<Bind.interface_ImVec2>>, num_points: number, col: Bind.ImU32, closed: boolean, thickness: number): void {\r\n        this.native.AddPolyline(points, num_points, col, closed, thickness);\r\n    }\r\n    // IMGUI_API void  AddConvexPolyFilled(const ImVec2* points, const int num_points, ImU32 col);\r\n    public AddConvexPolyFilled(points: Array<Readonly<Bind.interface_ImVec2>>, num_points: number, col: Bind.ImU32): void {\r\n        this.native.AddConvexPolyFilled(points, num_points, col);\r\n    }\r\n    // IMGUI_API void  AddBezierCurve(const ImVec2& pos0, const ImVec2& cp0, const ImVec2& cp1, const ImVec2& pos1, ImU32 col, float thickness, int num_segments = 0);\r\n    public AddBezierCurve(pos0: Readonly<Bind.interface_ImVec2>, cp0: Readonly<Bind.interface_ImVec2>, cp1: Readonly<Bind.interface_ImVec2>, pos1: Readonly<Bind.interface_ImVec2>, col: Bind.ImU32, thickness: number = 1.0, num_segments: number = 0): void {\r\n        this.native.AddBezierCurve(pos0, cp0, cp1, pos1, col, thickness, num_segments);\r\n    }\r\n\r\n    // Stateful path API, add points then finish with PathFill() or PathStroke()\r\n    // inline    void  PathClear()                                                 { _Path.resize(0); }\r\n    public PathClear(): void { this.native.PathClear(); }\r\n    // inline    void  PathLineTo(const ImVec2& pos)                               { _Path.push_back(pos); }\r\n    public PathLineTo(pos: Readonly<Bind.interface_ImVec2>): void { this.native.PathLineTo(pos); }\r\n    // inline    void  PathLineToMergeDuplicate(const ImVec2& pos)                 { if (_Path.Size == 0 || memcmp(&_Path[_Path.Size-1], &pos, 8) != 0) _Path.push_back(pos); }\r\n    public PathLineToMergeDuplicate(pos: Readonly<Bind.interface_ImVec2>): void { this.native.PathLineToMergeDuplicate(pos); }\r\n    // inline    void  PathFillConvex(ImU32 col)                                   { AddConvexPolyFilled(_Path.Data, _Path.Size, col); PathClear(); }\r\n    public PathFillConvex(col: Bind.ImU32): void { this.native.PathFillConvex(col); }\r\n    // inline    void  PathStroke(ImU32 col, bool closed, float thickness = 1.0f)  { AddPolyline(_Path.Data, _Path.Size, col, closed, thickness); PathClear(); }\r\n    public PathStroke(col: Bind.ImU32, closed: boolean, thickness: number = 1.0): void { this.native.PathStroke(col, closed, thickness); }\r\n    // IMGUI_API void  PathArcTo(const ImVec2& centre, float radius, float a_min, float a_max, int num_segments = 10);\r\n    public PathArcTo(centre: Readonly<Bind.interface_ImVec2>, radius: number, a_min: number, a_max: number, num_segments: number = 10): void { this.native.PathArcTo(centre, radius, a_min, a_max, num_segments); }\r\n    // IMGUI_API void  PathArcToFast(const ImVec2& centre, float radius, int a_min_of_12, int a_max_of_12);                                // Use precomputed angles for a 12 steps circle\r\n    public PathArcToFast(centre: Readonly<Bind.interface_ImVec2>, radius: number, a_min_of_12: number, a_max_of_12: number): void { this.native.PathArcToFast(centre, radius, a_min_of_12, a_max_of_12); }\r\n    // IMGUI_API void  PathBezierCurveTo(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, int num_segments = 0);\r\n    public PathBezierCurveTo(p1: Readonly<Bind.interface_ImVec2>, p2: Readonly<Bind.interface_ImVec2>, p3: Readonly<Bind.interface_ImVec2>, num_segments: number = 0): void { this.native.PathBezierCurveTo(p1, p2, p3, num_segments); }\r\n    // IMGUI_API void  PathRect(const ImVec2& rect_min, const ImVec2& rect_max, float rounding = 0.0f, int rounding_corners_flags = ImDrawCornerFlags_All);\r\n    public PathRect(rect_min: Readonly<Bind.interface_ImVec2>, rect_max: Readonly<Bind.interface_ImVec2>, rounding: number = 0.0, rounding_corners_flags: ImDrawCornerFlags = ImDrawCornerFlags.All): void { this.native.PathRect(rect_min, rect_max, rounding, rounding_corners_flags); }\r\n\r\n    // Channels\r\n    // - Use to simulate layers. By switching channels to can render out-of-order (e.g. submit foreground primitives before background primitives)\r\n    // - Use to minimize draw calls (e.g. if going back-and-forth between multiple non-overlapping clipping rectangles, prefer to append into separate channels then merge at the end)\r\n    // IMGUI_API void  ChannelsSplit(int channels_count);\r\n    public ChannelsSplit(channels_count: number): void { this.native.ChannelsSplit(channels_count); }\r\n    // IMGUI_API void  ChannelsMerge();\r\n    public ChannelsMerge(): void { this.native.ChannelsMerge(); }\r\n    // IMGUI_API void  ChannelsSetCurrent(int channel_index);\r\n    public ChannelsSetCurrent(channel_index: number): void { this.native.ChannelsSetCurrent(channel_index); }\r\n\r\n    // Advanced\r\n    // IMGUI_API void  AddCallback(ImDrawCallback callback, void* callback_data);  // Your rendering function must check for 'UserCallback' in ImDrawCmd and call the function instead of rendering triangles.\r\n    public AddCallback(callback: ImDrawCallback, callback_data: any): void {\r\n        const _callback: Bind.ImDrawCallback = (parent_list: Readonly<Bind.reference_ImDrawList>, draw_cmd: Readonly<Bind.reference_ImDrawCmd>): void => {\r\n            callback(new ImDrawList(parent_list), new ImDrawCmd(draw_cmd));\r\n        };\r\n        this.native.AddCallback(_callback, callback_data);\r\n    }\r\n    // IMGUI_API void  AddDrawCmd();                                               // This is useful if you need to forcefully create a new draw call (to allow for dependent rendering / blending). Otherwise primitives are merged into the same draw-call as much as possible\r\n    public AddDrawCmd(): void { this.native.AddDrawCmd(); }\r\n\r\n    // Internal helpers\r\n    // NB: all primitives needs to be reserved via PrimReserve() beforehand!\r\n    // IMGUI_API void  Clear();\r\n    public Clear(): void { this.native.Clear(); }\r\n    // IMGUI_API void  ClearFreeMemory();\r\n    public ClearFreeMemory(): void { this.native.ClearFreeMemory(); }\r\n    // IMGUI_API void  PrimReserve(int idx_count, int vtx_count);\r\n    public PrimReserve(idx_count: number, vtx_count: number): void { this.native.PrimReserve(idx_count, vtx_count); }\r\n    // IMGUI_API void  PrimRect(const ImVec2& a, const ImVec2& b, ImU32 col);      // Axis aligned rectangle (composed of two triangles)\r\n    public PrimRect(a: Readonly<Bind.interface_ImVec2>, b: Readonly<Bind.interface_ImVec2>, col: Bind.ImU32): void { this.native.PrimRect(a, b, col); }\r\n    // IMGUI_API void  PrimRectUV(const ImVec2& a, const ImVec2& b, const ImVec2& uv_a, const ImVec2& uv_b, ImU32 col);\r\n    public PrimRectUV(a: Readonly<Bind.interface_ImVec2>, b: Readonly<Bind.interface_ImVec2>, uv_a: Readonly<Bind.interface_ImVec2>, uv_b: Readonly<Bind.interface_ImVec2>, col: Bind.ImU32): void { this.native.PrimRectUV(a, b, uv_a, uv_b, col); }\r\n    // IMGUI_API void  PrimQuadUV(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& d, const ImVec2& uv_a, const ImVec2& uv_b, const ImVec2& uv_c, const ImVec2& uv_d, ImU32 col);\r\n    public PrimQuadUV(a: Readonly<Bind.interface_ImVec2>, b: Readonly<Bind.interface_ImVec2>, c: Readonly<Bind.interface_ImVec2>, d: Readonly<Bind.interface_ImVec2>, uv_a: Readonly<Bind.interface_ImVec2>, uv_b: Readonly<Bind.interface_ImVec2>, uv_c: Readonly<Bind.interface_ImVec2>, uv_d: Readonly<Bind.interface_ImVec2>, col: Bind.ImU32): void { this.native.PrimQuadUV(a, b, c, d, uv_a, uv_b, uv_c, uv_d, col); }\r\n    // inline    void  PrimWriteVtx(const ImVec2& pos, const ImVec2& uv, ImU32 col){ _VtxWritePtr->pos = pos; _VtxWritePtr->uv = uv; _VtxWritePtr->col = col; _VtxWritePtr++; _VtxCurrentIdx++; }\r\n    public PrimWriteVtx(pos: Readonly<Bind.interface_ImVec2>, uv: Readonly<Bind.interface_ImVec2>, col: Bind.ImU32): void { this.native.PrimWriteVtx(pos, uv, col); }\r\n    // inline    void  PrimWriteIdx(ImDrawIdx idx)                                 { *_IdxWritePtr = idx; _IdxWritePtr++; }\r\n    public PrimWriteIdx(idx: ImDrawIdx): void { this.native.PrimWriteIdx(idx); }\r\n    // inline    void  PrimVtx(const ImVec2& pos, const ImVec2& uv, ImU32 col)     { PrimWriteIdx((ImDrawIdx)_VtxCurrentIdx); PrimWriteVtx(pos, uv, col); }\r\n    public PrimVtx(pos: Readonly<Bind.interface_ImVec2>, uv: Readonly<Bind.interface_ImVec2>, col: Bind.ImU32): void { this.native.PrimVtx(pos, uv, col); }\r\n    // IMGUI_API void  UpdateClipRect();\r\n    public UpdateClipRect(): void { this.native.UpdateClipRect(); }\r\n    // IMGUI_API void  UpdateTextureID();\r\n    public UpdateTextureID(): void { this.native.UpdateTextureID(); }\r\n}\r\n\r\n// All draw data to render an ImGui frame\r\nexport class ImDrawData\r\n{\r\n    constructor(public readonly native: Bind.reference_ImDrawData) {}\r\n\r\n    public IterateDrawLists(callback: (draw_list: ImDrawList) => void): void {\r\n        this.native.IterateDrawLists((draw_list: Bind.reference_ImDrawList): void => {\r\n            callback(new ImDrawList(draw_list));\r\n        });\r\n    }\r\n\r\n    // bool            Valid;                  // Only valid after Render() is called and before the next NewFrame() is called.\r\n    get Valid(): boolean { return this.native.Valid; }\r\n    // ImDrawList**    CmdLists;\r\n    // int             CmdListsCount;\r\n    get CmdListsCount(): number { return this.native.CmdListsCount; }\r\n    // int             TotalIdxCount;          // For convenience, sum of all cmd_lists idx_buffer.Size\r\n    get TotalIdxCount(): number { return this.native.TotalIdxCount; }\r\n    // int             TotalVtxCount;          // For convenience, sum of all cmd_lists vtx_buffer.Size\r\n    get TotalVtxCount(): number { return this.native.TotalVtxCount; }\r\n    // ImVec2          DisplayPos;             // Upper-left position of the viewport to render (== upper-left of the orthogonal projection matrix to use)\r\n    get DisplayPos(): Readonly<Bind.reference_ImVec2> { return this.native.DisplayPos; }\r\n    // ImVec2          DisplaySize;            // Size of the viewport to render (== io.DisplaySize for the main viewport) (DisplayPos + DisplaySize == lower-right of the orthogonal projection matrix to use)\r\n    get DisplaySize(): Readonly<Bind.reference_ImVec2> { return this.native.DisplaySize; }\r\n\r\n    // Functions\r\n    // ImDrawData() { Valid = false; CmdLists = NULL; CmdListsCount = TotalVtxCount = TotalIdxCount = 0; }\r\n    // IMGUI_API void DeIndexAllBuffers();               // For backward compatibility or convenience: convert all buffers from indexed to de-indexed, in case you cannot render indexed. Note: this is slow and most likely a waste of resources. Always prefer indexed rendering!\r\n    public DeIndexAllBuffers(): void { this.native.DeIndexAllBuffers(); }\r\n    // IMGUI_API void ScaleClipRects(const ImVec2& sc);  // Helper to scale the ClipRect field of each ImDrawCmd. Use if your final output buffer is at a different scale than ImGui expects, or if there is a difference between your window resolution and framebuffer resolution.\r\n    public ScaleClipRects(sc: Readonly<Bind.interface_ImVec2>): void {\r\n        this.native.ScaleClipRects(sc);\r\n    }\r\n}\r\n\r\nexport class script_ImFontConfig implements Bind.interface_ImFontConfig\r\n{\r\n    // void*           FontData;                   //          // TTF/OTF data\r\n    // int             FontDataSize;               //          // TTF/OTF data size\r\n    FontData: DataView | null = null;\r\n    // bool            FontDataOwnedByAtlas;       // true     // TTF/OTF data ownership taken by the container ImFontAtlas (will delete memory itself).\r\n    FontDataOwnedByAtlas: boolean = true;\r\n    // int             FontNo;                     // 0        // Index of font within TTF/OTF file\r\n    FontNo: number = 0;\r\n    // float           SizePixels;                 //          // Size in pixels for rasterizer.\r\n    SizePixels: number = 0;\r\n    // int             OversampleH, OversampleV;   // 3, 1     // Rasterize at higher quality for sub-pixel positioning. We don't use sub-pixel positions on the Y axis.\r\n    OversampleH: number = 3;\r\n    OversampleV: number = 1;\r\n    // bool            PixelSnapH;                 // false    // Align every glyph to pixel boundary. Useful e.g. if you are merging a non-pixel aligned font with the default font. If enabled, you can set OversampleH/V to 1.\r\n    PixelSnapH: boolean = false;\r\n    // ImVec2          GlyphExtraSpacing;          // 0, 0     // Extra spacing (in pixels) between glyphs. Only X axis is supported for now.\r\n    GlyphExtraSpacing: ImVec2 = new ImVec2(0, 0);\r\n    // ImVec2          GlyphOffset;                // 0, 0     // Offset all glyphs from this font input.\r\n    GlyphOffset: ImVec2 = new ImVec2(0, 0);\r\n    // const ImWchar*  GlyphRanges;                // NULL     // Pointer to a user-provided list of Unicode range (2 value per range, values are inclusive, zero-terminated list). THE ARRAY DATA NEEDS TO PERSIST AS LONG AS THE FONT IS ALIVE.\r\n    GlyphRanges: number | null = null;\r\n    // float           GlyphMinAdvanceX;           // 0        // Minimum AdvanceX for glyphs, set Min to align font icons, set both Min/Max to enforce mono-space font\r\n    GlyphMinAdvanceX: number = 0;\r\n    // float           GlyphMaxAdvanceX;           // FLT_MAX  // Maximum AdvanceX for glyphs\r\n    GlyphMaxAdvanceX: number = Number.MAX_VALUE;\r\n    // bool            MergeMode;                  // false    // Merge into previous ImFont, so you can combine multiple inputs font into one ImFont (e.g. ASCII font + icons + Japanese glyphs). You may want to use GlyphOffset.y when merge font of different heights.\r\n    MergeMode: boolean = false;\r\n    // unsigned int    RasterizerFlags;            // 0x00     // Settings for custom font rasterizer (e.g. ImGuiFreeType). Leave as zero if you aren't using one.\r\n    RasterizerFlags: number = 0;\r\n    // float           RasterizerMultiply;         // 1.0f     // Brighten (>1.0f) or darken (<1.0f) font output. Brightening small fonts may be a good workaround to make them more readable.\r\n    RasterizerMultiply: number = 1.0;\r\n\r\n    // [Internal]\r\n    // char            Name[32];                               // Name (strictly to ease debugging)\r\n    Name: string = \"\";\r\n    // ImFont*         DstFont;\r\n    DstFont: Bind.reference_ImFont | null = null;\r\n\r\n    // IMGUI_API ImFontConfig();\r\n}\r\n\r\nexport class ImFontConfig {\r\n    constructor(public readonly internal: Bind.interface_ImFontConfig = new script_ImFontConfig()) {}\r\n\r\n    // void*           FontData;                   //          // TTF/OTF data\r\n    // int             FontDataSize;               //          // TTF/OTF data size\r\n    get FontData(): DataView | null { return this.internal.FontData; }\r\n    // bool            FontDataOwnedByAtlas;       // true     // TTF/OTF data ownership taken by the container ImFontAtlas (will delete memory itself).\r\n    get FontDataOwnedByAtlas(): boolean { return this.internal.FontDataOwnedByAtlas; }\r\n    // int             FontNo;                     // 0        // Index of font within TTF/OTF file\r\n    get FontNo(): number { return this.internal.FontNo; }\r\n    // float           SizePixels;                 //          // Size in pixels for rasterizer.\r\n    get SizePixels(): number { return this.internal.SizePixels; }\r\n    // int             OversampleH, OversampleV;   // 3, 1     // Rasterize at higher quality for sub-pixel positioning. We don't use sub-pixel positions on the Y axis.\r\n    get OversampleH(): number { return this.internal.OversampleH; }\r\n    get OversampleV(): number { return this.internal.OversampleV; }\r\n    // bool            PixelSnapH;                 // false    // Align every glyph to pixel boundary. Useful e.g. if you are merging a non-pixel aligned font with the default font. If enabled, you can set OversampleH/V to 1.\r\n    get PixelSnapH(): boolean { return this.internal.PixelSnapH; }\r\n    // ImVec2          GlyphExtraSpacing;          // 0, 0     // Extra spacing (in pixels) between glyphs. Only X axis is supported for now.\r\n    get GlyphExtraSpacing(): ImVec2 { return this.internal.GlyphExtraSpacing; }\r\n    // ImVec2          GlyphOffset;                // 0, 0     // Offset all glyphs from this font input.\r\n    get GlyphOffset(): ImVec2 { return this.internal.GlyphOffset; }\r\n    // const ImWchar*  GlyphRanges;                // NULL     // Pointer to a user-provided list of Unicode range (2 value per range, values are inclusive, zero-terminated list). THE ARRAY DATA NEEDS TO PERSIST AS LONG AS THE FONT IS ALIVE.\r\n    get GlyphRanges(): number | null { return this.internal.GlyphRanges; }\r\n    // float           GlyphMinAdvanceX;           // 0        // Minimum AdvanceX for glyphs, set Min to align font icons, set both Min/Max to enforce mono-space font\r\n    get GlyphMinAdvanceX(): number { return this.internal.GlyphMinAdvanceX; }\r\n    // float           GlyphMaxAdvanceX;           // FLT_MAX  // Maximum AdvanceX for glyphs\r\n    get GlyphMaxAdvanceX(): number { return this.internal.GlyphMaxAdvanceX; }\r\n    // bool            MergeMode;                  // false    // Merge into previous ImFont, so you can combine multiple inputs font into one ImFont (e.g. ASCII font + icons + Japanese glyphs). You may want to use GlyphOffset.y when merge font of different heights.\r\n    get MergeMode(): boolean { return this.internal.MergeMode; }\r\n    // unsigned int    RasterizerFlags;            // 0x00     // Settings for custom font rasterizer (e.g. ImGuiFreeType). Leave as zero if you aren't using one.\r\n    get RasterizerFlags(): number { return this.internal.RasterizerFlags; }\r\n    // float           RasterizerMultiply;         // 1.0f     // Brighten (>1.0f) or darken (<1.0f) font output. Brightening small fonts may be a good workaround to make them more readable.\r\n    get RasterizerMultiply(): number { return this.internal.RasterizerMultiply; }\r\n\r\n    // [Internal]\r\n    // char            Name[32];                               // Name (strictly to ease debugging)\r\n    get Name(): string { return this.internal.Name; }\r\n    set Name(value: string) { this.internal.Name = value; }\r\n    // ImFont*         DstFont;\r\n    get DstFont(): ImFont | null {\r\n        const font = this.internal.DstFont;\r\n        return font && new ImFont(font);\r\n    }\r\n\r\n    // IMGUI_API ImFontConfig();\r\n}\r\n\r\n// struct ImFontGlyph\r\nexport class script_ImFontGlyph implements Bind.interface_ImFontGlyph\r\n{\r\n    // ImWchar         Codepoint;          // 0x0000..0xFFFF\r\n    Codepoint: number = 0;\r\n    // float           AdvanceX;           // Distance to next character (= data from font + ImFontConfig::GlyphExtraSpacing.x baked in)\r\n    AdvanceX: number = 0.0;\r\n    // float           X0, Y0, X1, Y1;     // Glyph corners\r\n    X0: number = 0.0;\r\n    Y0: number = 0.0;\r\n    X1: number = 1.0;\r\n    Y1: number = 1.0;\r\n    // float           U0, V0, U1, V1;     // Texture coordinates\r\n    U0: number = 0.0;\r\n    V0: number = 0.0;\r\n    U1: number = 1.0;\r\n    V1: number = 1.0;\r\n}\r\n\r\nexport class ImFontGlyph implements Bind.interface_ImFontGlyph {\r\n    constructor(public readonly internal: Bind.interface_ImFontGlyph = new script_ImFontGlyph()) {}\r\n    // ImWchar         Codepoint;          // 0x0000..0xFFFF\r\n    get Codepoint(): number {  return this.internal.Codepoint; }\r\n    // float           AdvanceX;           // Distance to next character (= data from font + ImFontConfig::GlyphExtraSpacing.x baked in)\r\n    get AdvanceX(): number { return this.internal.AdvanceX; };\r\n    // float           X0, Y0, X1, Y1;     // Glyph corners\r\n    get X0(): number { return this.internal.X0; };\r\n    get Y0(): number { return this.internal.Y0; };\r\n    get X1(): number { return this.internal.X1; };\r\n    get Y1(): number { return this.internal.Y1; };\r\n    // float           U0, V0, U1, V1;     // Texture coordinates\r\n    get U0(): number { return this.internal.U0; };\r\n    get V0(): number { return this.internal.V0; };\r\n    get U1(): number { return this.internal.U1; };\r\n    get V1(): number { return this.internal.V1; };\r\n}\r\n\r\nexport enum ImFontAtlasFlags\r\n{\r\n    None               = 0,\r\n    NoPowerOfTwoHeight = 1 << 0,   // Don't round the height to next power of two\r\n    NoMouseCursors     = 1 << 1,   // Don't build software mouse cursors into the atlas\r\n}\r\n\r\n// Load and rasterize multiple TTF/OTF fonts into a same texture.\r\n// Sharing a texture for multiple fonts allows us to reduce the number of draw calls during rendering.\r\n// We also add custom graphic data into the texture that serves for ImGui.\r\n//  1. (Optional) Call AddFont*** functions. If you don't call any, the default font will be loaded for you.\r\n//  2. Call GetTexDataAsAlpha8() or GetTexDataAsRGBA32() to build and retrieve pixels data.\r\n//  3. Upload the pixels data into a texture within your graphics system.\r\n//  4. Call SetTexID(my_tex_id); and pass the pointer/identifier to your texture. This value will be passed back to you during rendering to identify the texture.\r\n// IMPORTANT: If you pass a 'glyph_ranges' array to AddFont*** functions, you need to make sure that your array persist up until the ImFont is build (when calling GetTextData*** or Build()). We only copy the pointer, not the data.\r\nexport class ImFontAtlas\r\n{\r\n    constructor(public readonly native: Bind.reference_ImFontAtlas) {}\r\n\r\n    // IMGUI_API ImFontAtlas();\r\n    // IMGUI_API ~ImFontAtlas();\r\n    // IMGUI_API ImFont*           AddFont(const ImFontConfig* font_cfg);\r\n    // IMGUI_API ImFont*           AddFontDefault(const ImFontConfig* font_cfg = NULL);\r\n    public AddFontDefault(font_cfg: Bind.interface_ImFontConfig | null = null): ImFont {\r\n        return new ImFont(this.native.AddFontDefault(font_cfg));\r\n    }\r\n    // IMGUI_API ImFont*           AddFontFromFileTTF(const char* filename, float size_pixels, const ImFontConfig* font_cfg = NULL, const ImWchar* glyph_ranges = NULL);\r\n    // IMGUI_API ImFont*           AddFontFromMemoryTTF(void* font_data, int font_size, float size_pixels, const ImFontConfig* font_cfg = NULL, const ImWchar* glyph_ranges = NULL); // Note: Transfer ownership of 'ttf_data' to ImFontAtlas! Will be deleted after Build(). Set font_cfg->FontDataOwnedByAtlas to false to keep ownership.\r\n    public AddFontFromMemoryTTF(data: ArrayBuffer, size_pixels: number, font_cfg: ImFontConfig | null = null, glyph_ranges: number | null = null): ImFont {\r\n        return new ImFont(this.native.AddFontFromMemoryTTF(new Uint8Array(data), size_pixels, font_cfg && font_cfg.internal, glyph_ranges));\r\n    }\r\n    // IMGUI_API ImFont*           AddFontFromMemoryCompressedTTF(const void* compressed_font_data, int compressed_font_size, float size_pixels, const ImFontConfig* font_cfg = NULL, const ImWchar* glyph_ranges = NULL); // 'compressed_font_data' still owned by caller. Compress with binary_to_compressed_c.cpp.\r\n    // IMGUI_API ImFont*           AddFontFromMemoryCompressedBase85TTF(const char* compressed_font_data_base85, float size_pixels, const ImFontConfig* font_cfg = NULL, const ImWchar* glyph_ranges = NULL);              // 'compressed_font_data_base85' still owned by caller. Compress with binary_to_compressed_c.cpp with -base85 parameter.\r\n    // IMGUI_API void              ClearTexData();             // Clear the CPU-side texture data. Saves RAM once the texture has been copied to graphics memory.\r\n    public ClearTexData(): void { this.native.ClearTexData(); }\r\n    // IMGUI_API void              ClearInputData();           // Clear the input TTF data (inc sizes, glyph ranges)\r\n    public ClearInputData(): void { this.native.ClearInputData(); }\r\n    // IMGUI_API void              ClearFonts();               // Clear the ImGui-side font data (glyphs storage, UV coordinates)\r\n    public ClearFonts(): void { this.native.ClearFonts(); }\r\n    // IMGUI_API void              Clear();                    // Clear all\r\n    public Clear(): void { this.native.Clear(); }\r\n\r\n    // Build atlas, retrieve pixel data.\r\n    // User is in charge of copying the pixels into graphics memory (e.g. create a texture with your engine). Then store your texture handle with SetTexID().\r\n    // RGBA32 format is provided for convenience and compatibility, but note that unless you use CustomRect to draw color data, the RGB pixels emitted from Fonts will all be white (~75% of waste).\r\n    // Pitch = Width * BytesPerPixels\r\n    // IMGUI_API bool              Build();                    // Build pixels data. This is called automatically for you by the GetTexData*** functions.\r\n    public Build(): boolean { return this.native.Build(); }\r\n    // IMGUI_API bool              IsBuilt()                   { return Fonts.Size > 0 && (TexPixelsAlpha8 != NULL || TexPixelsRGBA32 != NULL); }\r\n    public IsBuilt(): boolean { return this.native.IsBuilt(); }\r\n    // IMGUI_API void              GetTexDataAsAlpha8(unsigned char** out_pixels, int* out_width, int* out_height, int* out_bytes_per_pixel = NULL);  // 1 byte per-pixel\r\n    public GetTexDataAsAlpha8(): { pixels: Uint8Array, width: number, height: number, bytes_per_pixel: number } {\r\n        return this.native.GetTexDataAsAlpha8();\r\n    }\r\n    // IMGUI_API void              GetTexDataAsRGBA32(unsigned char** out_pixels, int* out_width, int* out_height, int* out_bytes_per_pixel = NULL);  // 4 bytes-per-pixel\r\n    public GetTexDataAsRGBA32(): { pixels: Uint8Array, width: number, height: number, bytes_per_pixel: number } {\r\n        return this.native.GetTexDataAsRGBA32();\r\n    }\r\n    // void                        SetTexID(ImTextureID id)    { TexID = id; }\r\n    public SetTexID(id: ImTextureID | null): void { this.TexID = id; }\r\n\r\n    //-------------------------------------------\r\n    // Glyph Ranges\r\n    //-------------------------------------------\r\n\r\n    // Helpers to retrieve list of common Unicode ranges (2 value per range, values are inclusive, zero-terminated list)\r\n    // NB: Make sure that your string are UTF-8 and NOT in your local code page. In C++11, you can create UTF-8 string literal using the u8\"Hello world\" syntax. See FAQ for details.\r\n    // IMGUI_API const ImWchar*    GetGlyphRangesDefault();    // Basic Latin, Extended Latin\r\n    GetGlyphRangesDefault(): number { return this.native.GetGlyphRangesDefault(); }\r\n    // IMGUI_API const ImWchar*    GetGlyphRangesKorean();     // Default + Korean characters\r\n    GetGlyphRangesKorean(): number { return this.native.GetGlyphRangesKorean(); }\r\n    // IMGUI_API const ImWchar*    GetGlyphRangesJapanese();   // Default + Hiragana, Katakana, Half-Width, Selection of 1946 Ideographs\r\n    GetGlyphRangesJapanese(): number { return this.native.GetGlyphRangesJapanese(); }\r\n    // IMGUI_API const ImWchar*    GetGlyphRangesChineseFull();            // Default + Half-Width + Japanese Hiragana/Katakana + full set of about 21000 CJK Unified Ideographs\r\n    GetGlyphRangesChineseFull(): number { return this.native.GetGlyphRangesChineseFull(); }\r\n    // IMGUI_API const ImWchar*    GetGlyphRangesChineseSimplifiedCommon();// Default + Half-Width + Japanese Hiragana/Katakana + set of 2500 CJK Unified Ideographs for common simplified Chinese\r\n    GetGlyphRangesChineseSimplifiedCommon(): number { return this.native.GetGlyphRangesChineseSimplifiedCommon(); }\r\n    // IMGUI_API const ImWchar*    GetGlyphRangesCyrillic();   // Default + about 400 Cyrillic characters\r\n    GetGlyphRangesCyrillic(): number { return this.native.GetGlyphRangesCyrillic(); }\r\n    // IMGUI_API const ImWchar*    GetGlyphRangesThai();       // Default + Thai characters\r\n    GetGlyphRangesThai(): number { return this.native.GetGlyphRangesThai(); }\r\n\r\n    // Helpers to build glyph ranges from text data. Feed your application strings/characters to it then call BuildRanges().\r\n    // struct GlyphRangesBuilder\r\n    // {\r\n    //     ImVector<unsigned char> UsedChars;  // Store 1-bit per Unicode code point (0=unused, 1=used)\r\n    //     GlyphRangesBuilder()                { UsedChars.resize(0x10000 / 8); memset(UsedChars.Data, 0, 0x10000 / 8); }\r\n    //     bool           GetBit(int n) const  { return (UsedChars[n >> 3] & (1 << (n & 7))) != 0; }\r\n    //     void           SetBit(int n)        { UsedChars[n >> 3] |= 1 << (n & 7); }  // Set bit 'c' in the array\r\n    //     void           AddChar(ImWchar c)   { SetBit(c); }                          // Add character\r\n    //     IMGUI_API void AddText(const char* text, const char* text_end = NULL);      // Add string (each character of the UTF-8 string are added)\r\n    //     IMGUI_API void AddRanges(const ImWchar* ranges);                            // Add ranges, e.g. builder.AddRanges(ImFontAtlas::GetGlyphRangesDefault) to force add all of ASCII/Latin+Ext\r\n    //     IMGUI_API void BuildRanges(ImVector<ImWchar>* out_ranges);                  // Output new ranges\r\n    // };\r\n\r\n    //-------------------------------------------\r\n    // Custom Rectangles/Glyphs API\r\n    //-------------------------------------------\r\n\r\n    // You can request arbitrary rectangles to be packed into the atlas, for your own purposes. After calling Build(), you can query the rectangle position and render your pixels.\r\n    // You can also request your rectangles to be mapped as font glyph (given a font + Unicode point), so you can render e.g. custom colorful icons and use them as regular glyphs.\r\n    // struct CustomRect\r\n    // {\r\n    //     unsigned int    ID;             // Input    // User ID. Use <0x10000 to map into a font glyph, >=0x10000 for other/internal/custom texture data.\r\n    //     unsigned short  Width, Height;  // Input    // Desired rectangle dimension\r\n    //     unsigned short  X, Y;           // Output   // Packed position in Atlas\r\n    //     float           GlyphAdvanceX;  // Input    // For custom font glyphs only (ID<0x10000): glyph xadvance\r\n    //     ImVec2          GlyphOffset;    // Input    // For custom font glyphs only (ID<0x10000): glyph display offset\r\n    //     ImFont*         Font;           // Input    // For custom font glyphs only (ID<0x10000): target font\r\n    //     CustomRect()            { ID = 0xFFFFFFFF; Width = Height = 0; X = Y = 0xFFFF; GlyphAdvanceX = 0.0f; GlyphOffset = ImVec2(0,0); Font = NULL; }\r\n    //     bool IsPacked() const   { return X != 0xFFFF; }\r\n    // };\r\n\r\n    // IMGUI_API int       AddCustomRectRegular(unsigned int id, int width, int height);                                                                   // Id needs to be >= 0x10000. Id >= 0x80000000 are reserved for ImGui and ImDrawList\r\n    // IMGUI_API int       AddCustomRectFontGlyph(ImFont* font, ImWchar id, int width, int height, float advance_x, const ImVec2& offset = ImVec2(0,0));   // Id needs to be < 0x10000 to register a rectangle to map into a specific font.\r\n    // IMGUI_API void      CalcCustomRectUV(const CustomRect* rect, ImVec2* out_uv_min, ImVec2* out_uv_max);\r\n    // const CustomRect*   GetCustomRectByIndex(int index) const { if (index < 0) return NULL; return &CustomRects[index]; }\r\n\r\n    //-------------------------------------------\r\n    // Members\r\n    //-------------------------------------------\r\n\r\n    // bool                        Locked;             // Marked as Locked by ImGui::NewFrame() so attempt to modify the atlas will assert.\r\n    get Locked(): boolean { return this.native.Locked; }\r\n    set Locked(value: boolean) { this.native.Locked = value; }\r\n    // ImFontAtlasFlags            Flags;              // Build flags (see ImFontAtlasFlags_)\r\n    get Flags(): ImFontAtlasFlags { return this.native.Flags; }\r\n    set Flags(value: ImFontAtlasFlags) { this.native.Flags = value; }\r\n    // ImTextureID                 TexID;              // User data to refer to the texture once it has been uploaded to user's graphic systems. It is passed back to you during rendering via the ImDrawCmd structure.\r\n    get TexID(): ImTextureID | null {\r\n        return ImGuiContext.getTexture(this.native.TexID);\r\n    }\r\n    set TexID(value: ImTextureID | null) {\r\n        this.native.TexID = ImGuiContext.setTexture(value);\r\n    }\r\n    // int                         TexDesiredWidth;    // Texture width desired by user before Build(). Must be a power-of-two. If have many glyphs your graphics API have texture size restrictions you may want to increase texture width to decrease height.\r\n    get TexDesiredWidth(): number { return this.native.TexDesiredWidth; }\r\n    set TexDesiredWidth(value: number) { this.native.TexDesiredWidth = value; }\r\n    // int                         TexGlyphPadding;    // Padding between glyphs within texture in pixels. Defaults to 1.\r\n    get TexGlyphPadding(): number { return this.native.TexGlyphPadding; }\r\n    set TexGlyphPadding(value: number) { this.native.TexGlyphPadding = value; }\r\n\r\n    // [Internal]\r\n    // NB: Access texture data via GetTexData*() calls! Which will setup a default font for you.\r\n    // unsigned char*              TexPixelsAlpha8;    // 1 component per pixel, each component is unsigned 8-bit. Total size = TexWidth * TexHeight\r\n    // unsigned int*               TexPixelsRGBA32;    // 4 component per pixel, each component is unsigned 8-bit. Total size = TexWidth * TexHeight * 4\r\n    // int                         TexWidth;           // Texture width calculated during Build().\r\n    get TexWidth(): number { return this.native.TexWidth; }\r\n    // int                         TexHeight;          // Texture height calculated during Build().\r\n    get TexHeight(): number { return this.native.TexHeight; }\r\n    // ImVec2                      TexUvScale;         // = (1.0f/TexWidth, 1.0f/TexHeight)\r\n    get TexUvScale(): Readonly<Bind.reference_ImVec2> { return this.native.TexUvScale; }\r\n    // ImVec2                      TexUvWhitePixel;    // Texture coordinates to a white pixel\r\n    get TexUvWhitePixel(): Readonly<Bind.reference_ImVec2> { return this.native.TexUvWhitePixel; }\r\n    // ImVector<ImFont*>           Fonts;              // Hold all the fonts returned by AddFont*. Fonts[0] is the default font upon calling ImGui::NewFrame(), use ImGui::PushFont()/PopFont() to change the current font.\r\n    get Fonts(): ImVector<ImFont> {\r\n        const fonts: ImVector<ImFont> = new ImVector<ImFont>();\r\n        this.native.IterateFonts((font: Bind.reference_ImFont) => {\r\n            fonts.push(new ImFont(font));\r\n        });\r\n        return fonts;\r\n    }\r\n    // ImVector<CustomRect>        CustomRects;        // Rectangles for packing custom texture data into the atlas.\r\n    // ImVector<ImFontConfig>      ConfigData;         // Internal data\r\n    // int                         CustomRectIds[1];   // Identifiers of custom texture rectangle used by ImFontAtlas/ImDrawList\r\n}\r\n\r\n// Font runtime data and rendering\r\n// ImFontAtlas automatically loads a default embedded font for you when you call GetTexDataAsAlpha8() or GetTexDataAsRGBA32().\r\nexport class ImFont\r\n{\r\n    constructor(public readonly native: Bind.reference_ImFont) {}\r\n\r\n    // Members: Hot ~62/78 bytes\r\n    // float                       FontSize;           // <user set>   // Height of characters, set during loading (don't change after loading)\r\n    get FontSize(): number { return this.native.FontSize; }\r\n    // float                       Scale;              // = 1.f        // Base font scale, multiplied by the per-window font scale which you can adjust with SetFontScale()\r\n    get Scale(): number { return this.native.Scale; }\r\n    set Scale(value: number) { this.native.Scale = value; }\r\n    // ImVec2                      DisplayOffset;      // = (0.f,1.f)  // Offset font rendering by xx pixels\r\n    get DisplayOffset(): Bind.interface_ImVec2 { return this.native.DisplayOffset; }\r\n    // ImVector<ImFontGlyph>       Glyphs;             //              // All glyphs.\r\n    get Glyphs(): ImVector<ImFontGlyph> {\r\n        const glyphs = new ImVector<ImFontGlyph>();\r\n        this.native.IterateGlyphs((glyph: Bind.reference_ImFontGlyph): void => {\r\n            glyphs.push(new ImFontGlyph(glyph)); // TODO: wrap native\r\n        });\r\n        return glyphs;\r\n    }\r\n    // ImVector<float>             IndexAdvanceX;      //              // Sparse. Glyphs->AdvanceX in a directly indexable way (more cache-friendly, for CalcTextSize functions which are often bottleneck in large UI).\r\n    // get IndexAdvanceX(): any { return this.native.IndexAdvanceX; }\r\n    // ImVector<unsigned short>    IndexLookup;        //              // Sparse. Index glyphs by Unicode code-point.\r\n    // get IndexLookup(): any { return this.native.IndexLookup; }\r\n    // const ImFontGlyph*          FallbackGlyph;      // == FindGlyph(FontFallbackChar)\r\n    get FallbackGlyph(): ImFontGlyph | null {\r\n        const glyph = this.native.FallbackGlyph;\r\n        return glyph && new ImFontGlyph(glyph);\r\n    }\r\n    set FallbackGlyph(value: ImFontGlyph | null) {\r\n        this.native.FallbackGlyph = value && value.internal as Bind.reference_ImFontGlyph;\r\n    }\r\n    // float                       FallbackAdvanceX;   // == FallbackGlyph->AdvanceX\r\n    get FallbackAdvanceX(): number { return this.native.FallbackAdvanceX; }\r\n    // ImWchar                     FallbackChar;       // = '?'        // Replacement glyph if one isn't found. Only set via SetFallbackChar()\r\n    get FallbackChar(): number { return this.native.FallbackChar; }\r\n\r\n    // Members: Cold ~18/26 bytes\r\n    // short                       ConfigDataCount;    // ~ 1          // Number of ImFontConfig involved in creating this font. Bigger than 1 when merging multiple font sources into one ImFont.\r\n    get ConfigDataCount(): number { return this.ConfigData.length; }\r\n    // ImFontConfig*               ConfigData;         //              // Pointer within ContainerAtlas->ConfigData\r\n    get ConfigData(): ImFontConfig[] {\r\n        const cfg_data: ImFontConfig[] = [];\r\n        this.native.IterateConfigData((cfg: Bind.interface_ImFontConfig): void => {\r\n            cfg_data.push(new ImFontConfig(cfg));\r\n        });\r\n        return cfg_data;\r\n    }\r\n    // ImFontAtlas*                ContainerAtlas;     //              // What we has been loaded into\r\n    get ContainerAtlas(): ImFontAtlas | null { return null; }\r\n    // float                       Ascent, Descent;    //              // Ascent: distance from top to bottom of e.g. 'A' [0..FontSize]\r\n    get Ascent(): number { return this.native.Ascent; }\r\n    get Descent(): number { return this.native.Descent; }\r\n    // int                         MetricsTotalSurface;//              // Total surface in pixels to get an idea of the font rasterization/texture cost (not exact, we approximate the cost of padding between glyphs)\r\n    get MetricsTotalSurface(): number { return this.native.MetricsTotalSurface; }\r\n\r\n    // Methods\r\n    // IMGUI_API ImFont();\r\n    // IMGUI_API ~ImFont();\r\n    // IMGUI_API void              ClearOutputData();\r\n    public ClearOutputData(): void { return this.native.ClearOutputData(); }\r\n    // IMGUI_API void              BuildLookupTable();\r\n    public BuildLookupTable(): void { return this.native.BuildLookupTable(); }\r\n    // IMGUI_API const ImFontGlyph*FindGlyph(ImWchar c) const;\r\n    public FindGlyph(c: number): Readonly<ImFontGlyph> | null {\r\n        const glyph: Readonly<Bind.reference_ImFontGlyph> | null = this.native.FindGlyph(c);\r\n        return glyph && new ImFontGlyph(glyph);\r\n    }\r\n    // IMGUI_API const ImFontGlyph*FindGlyphNoFallback(ImWchar c) const;\r\n    public FindGlyphNoFallback(c: number): ImFontGlyph | null {\r\n        const glyph: Readonly<Bind.reference_ImFontGlyph> | null = this.native.FindGlyphNoFallback(c);\r\n        return glyph && new ImFontGlyph(glyph);\r\n    }\r\n    // IMGUI_API void              SetFallbackChar(ImWchar c);\r\n    public SetFallbackChar(c: number): void { return this.native.SetFallbackChar(c); }\r\n    // float                       GetCharAdvance(ImWchar c) const     { return ((int)c < IndexAdvanceX.Size) ? IndexAdvanceX[(int)c] : FallbackAdvanceX; }\r\n    public GetCharAdvance(c: number): number { return this.native.GetCharAdvance(c); }\r\n    // bool                        IsLoaded() const                    { return ContainerAtlas != NULL; }\r\n    public IsLoaded(): boolean { return this.native.IsLoaded(); }\r\n    // const char*                 GetDebugName() const                { return ConfigData ? ConfigData->Name : \"<unknown>\"; }\r\n    public GetDebugName(): string { return this.native.GetDebugName(); }\r\n\r\n    // 'max_width' stops rendering after a certain width (could be turned into a 2d size). FLT_MAX to disable.\r\n    // 'wrap_width' enable automatic word-wrapping across multiple lines to fit into given width. 0.0f to disable.\r\n    // IMGUI_API ImVec2            CalcTextSizeA(float size, float max_width, float wrap_width, const char* text_begin, const char* text_end = NULL, const char** remaining = NULL) const; // utf8\r\n    public CalcTextSizeA(size: number, max_width: number, wrap_width: number, text_begin: string, text_end: number | null = null, remaining: Bind.ImScalar<number> | null = null): Bind.interface_ImVec2 {\r\n        return this.native.CalcTextSizeA(size, max_width, wrap_width, text_end !== null ? text_begin.substring(0, text_end) : text_begin, remaining, new ImVec2());\r\n    }\r\n    // IMGUI_API const char*       CalcWordWrapPositionA(float scale, const char* text, const char* text_end, float wrap_width) const;\r\n    public CalcWordWrapPositionA(scale: number, text: string, text_end: number | null = null, wrap_width: number): number {\r\n        return this.native.CalcWordWrapPositionA(scale, text_end !== null ? text.substring(0, text_end) : text, wrap_width);\r\n    }\r\n    // IMGUI_API void              RenderChar(ImDrawList* draw_list, float size, ImVec2 pos, ImU32 col, unsigned short c) const;\r\n    public RenderChar(draw_list: ImDrawList, size: number, pos: Readonly<Bind.interface_ImVec2>, col: Bind.ImU32, c: Bind.ImWchar): void {\r\n        this.native.RenderChar(draw_list.native, size, pos, col, c);\r\n    }\r\n    // IMGUI_API void              RenderText(ImDrawList* draw_list, float size, ImVec2 pos, ImU32 col, const ImVec4& clip_rect, const char* text_begin, const char* text_end, float wrap_width = 0.0f, bool cpu_fine_clip = false) const;\r\n    public RenderText(draw_list: ImDrawList, size: number, pos: Readonly<Bind.interface_ImVec2>, col: Bind.ImU32, clip_rect: Readonly<Bind.interface_ImVec4>, text_begin: string, text_end: number | null = null, wrap_width: number = 0.0, cpu_fine_clip: boolean = false): void {}\r\n\r\n    // [Internal]\r\n    // IMGUI_API void              GrowIndex(int new_size);\r\n    // IMGUI_API void              AddGlyph(ImWchar c, float x0, float y0, float x1, float y1, float u0, float v0, float u1, float v1, float advance_x);\r\n    // IMGUI_API void              AddRemapChar(ImWchar dst, ImWchar src, bool overwrite_dst = true); // Makes 'dst' character/glyph points to 'src' character/glyph. Currently needs to be called AFTER fonts have been built.\r\n\r\n    // #ifndef IMGUI_DISABLE_OBSOLETE_FUNCTIONS\r\n    // typedef ImFontGlyph Glyph; // OBSOLETE 1.52+\r\n    // #endif\r\n}\r\n\r\n// a script version of BindImGui.ImGuiStyle with matching interface\r\nclass script_ImGuiStyle implements Bind.interface_ImGuiStyle {\r\n    public Alpha: number = 1.0;\r\n    public WindowPadding: ImVec2 = new ImVec2(8, 8);\r\n    public WindowRounding: number = 7.0;\r\n    public WindowBorderSize: number = 0.0;\r\n    public WindowMinSize: ImVec2 = new ImVec2(32, 32);\r\n    public WindowTitleAlign: ImVec2 = new ImVec2(0.0, 0.5);\r\n    public ChildRounding: number = 0.0;\r\n    public ChildBorderSize: number = 1.0;\r\n    public PopupRounding: number = 0.0;\r\n    public PopupBorderSize: number = 1.0;\r\n    public FramePadding: ImVec2 = new ImVec2(4, 3);\r\n    public FrameRounding: number = 0.0;\r\n    public FrameBorderSize: number = 0.0;\r\n    public ItemSpacing: ImVec2 = new ImVec2(8, 4);\r\n    public ItemInnerSpacing: ImVec2 = new ImVec2(4, 4);\r\n    public TouchExtraPadding: ImVec2 = new ImVec2(0, 0);\r\n    public IndentSpacing: number = 21.0;\r\n    public ColumnsMinSpacing: number = 6.0;\r\n    public ScrollbarSize: number = 16.0;\r\n    public ScrollbarRounding: number = 9.0;\r\n    public GrabMinSize: number = 10.0;\r\n    public GrabRounding: number = 0.0;\r\n    public ButtonTextAlign: ImVec2 = new ImVec2(0.5, 0.5);\r\n    public DisplayWindowPadding: ImVec2 = new ImVec2(22, 22);\r\n    public DisplaySafeAreaPadding: ImVec2 = new ImVec2(4, 4);\r\n    public MouseCursorScale: number = 1;\r\n    public AntiAliasedLines: boolean = true;\r\n    public AntiAliasedFill: boolean = true;\r\n    public CurveTessellationTol: number = 1.25;\r\n    private Colors: ImVec4[] = [];\r\n    public _getAt_Colors(index: number): Bind.interface_ImVec4 { return this.Colors[index]; }\r\n    public _setAt_Colors(index: number, color: Readonly<Bind.interface_ImVec4>): boolean { this.Colors[index].Copy(color); return true; }\r\n\r\n    constructor() {\r\n        for (let i = 0; i < ImGuiCol.COUNT; ++i) {\r\n            this.Colors[i] = new ImVec4();\r\n        }\r\n        const _this = new ImGuiStyle(this);\r\n        const native = new bind.ImGuiStyle();\r\n        const _that = new ImGuiStyle(native);\r\n        _that.Copy(_this);\r\n        bind.StyleColorsClassic(native);\r\n        _this.Copy(_that);\r\n        native.delete();\r\n    }\r\n\r\n    public ScaleAllSizes(scale_factor: number): void {\r\n        const _this = new ImGuiStyle(this);\r\n        const native = new bind.ImGuiStyle();\r\n        const _that = new ImGuiStyle(native);\r\n        _that.Copy(_this);\r\n        native.ScaleAllSizes(scale_factor);\r\n        _this.Copy(_that);\r\n        native.delete();\r\n    }\r\n}\r\n\r\nexport class ImGuiStyle\r\n{\r\n    constructor(public readonly internal: Bind.interface_ImGuiStyle = new script_ImGuiStyle()) {}\r\n\r\n    get Alpha(): number { return this.internal.Alpha; } set Alpha(value: number) { this.internal.Alpha = value; }\r\n    get WindowPadding(): Bind.interface_ImVec2 { return this.internal.WindowPadding; }\r\n    get WindowRounding(): number { return this.internal.WindowRounding; } set WindowRounding(value: number) { this.internal.WindowRounding = value; }\r\n    get WindowBorderSize(): number { return this.internal.WindowBorderSize; } set WindowBorderSize(value: number) { this.internal.WindowBorderSize = value; }\r\n    get WindowMinSize(): Bind.interface_ImVec2 { return this.internal.WindowMinSize; }\r\n    get WindowTitleAlign(): Bind.interface_ImVec2 { return this.internal.WindowTitleAlign; }\r\n    get ChildRounding(): number { return this.internal.ChildRounding; } set ChildRounding(value: number) { this.internal.ChildRounding = value; }\r\n    get ChildBorderSize(): number { return this.internal.ChildBorderSize; } set ChildBorderSize(value: number) { this.internal.ChildBorderSize = value; }\r\n    get PopupRounding(): number { return this.internal.PopupRounding; } set PopupRounding(value: number) { this.internal.PopupRounding = value; }\r\n    get PopupBorderSize(): number { return this.internal.PopupBorderSize; } set PopupBorderSize(value: number) { this.internal.PopupBorderSize = value; }\r\n    get FramePadding(): Bind.interface_ImVec2 { return this.internal.FramePadding; }\r\n    get FrameRounding(): number { return this.internal.FrameRounding; } set FrameRounding(value: number) { this.internal.FrameRounding = value; }\r\n    get FrameBorderSize(): number { return this.internal.FrameBorderSize; } set FrameBorderSize(value: number) { this.internal.FrameBorderSize = value; }\r\n    get ItemSpacing(): Bind.interface_ImVec2 { return this.internal.ItemSpacing; }\r\n    get ItemInnerSpacing(): Bind.interface_ImVec2 { return this.internal.ItemInnerSpacing; }\r\n    get TouchExtraPadding(): Bind.interface_ImVec2 { return this.internal.TouchExtraPadding; }\r\n    get IndentSpacing(): number { return this.internal.IndentSpacing; } set IndentSpacing(value: number) { this.internal.IndentSpacing = value; }\r\n    get ColumnsMinSpacing(): number { return this.internal.ColumnsMinSpacing; } set ColumnsMinSpacing(value: number) { this.internal.ColumnsMinSpacing = value; }\r\n    get ScrollbarSize(): number { return this.internal.ScrollbarSize; } set ScrollbarSize(value: number) { this.internal.ScrollbarSize = value; }\r\n    get ScrollbarRounding(): number { return this.internal.ScrollbarRounding; } set ScrollbarRounding(value: number) { this.internal.ScrollbarRounding = value; }\r\n    get GrabMinSize(): number { return this.internal.GrabMinSize; } set GrabMinSize(value: number) { this.internal.GrabMinSize = value; }\r\n    get GrabRounding(): number { return this.internal.GrabRounding; } set GrabRounding(value: number) { this.internal.GrabRounding = value; }\r\n    get ButtonTextAlign(): Bind.interface_ImVec2 { return this.internal.ButtonTextAlign; }\r\n    get DisplayWindowPadding(): Bind.interface_ImVec2 { return this.internal.DisplayWindowPadding; }\r\n    get DisplaySafeAreaPadding(): Bind.interface_ImVec2 { return this.internal.DisplaySafeAreaPadding; }\r\n    get MouseCursorScale(): number { return this.internal.MouseCursorScale; } set MouseCursorScale(value: number) { this.internal.MouseCursorScale = value; }\r\n    get AntiAliasedLines(): boolean { return this.internal.AntiAliasedLines; } set AntiAliasedLines(value: boolean) { this.internal.AntiAliasedLines = value; }\r\n    get AntiAliasedFill(): boolean { return this.internal.AntiAliasedFill; } set AntiAliasedFill(value: boolean) { this.internal.AntiAliasedFill = value; }\r\n    get CurveTessellationTol(): number { return this.internal.CurveTessellationTol; } set CurveTessellationTol(value: number) { this.internal.CurveTessellationTol = value; }\r\n    public Colors: Bind.interface_ImVec4[] = new Proxy([], {\r\n        get: (target: Bind.interface_ImVec4[], key: PropertyKey): number | Bind.interface_ImVec4 => {\r\n            if (key === \"length\") { return ImGuiCol.COUNT; }\r\n            return this.internal._getAt_Colors(Number(key));\r\n        },\r\n        set: (target: Bind.interface_ImVec4[], key: PropertyKey, value: Readonly<Bind.interface_ImVec4>): boolean => {\r\n            return this.internal._setAt_Colors(Number(key), value);\r\n        },\r\n    });\r\n\r\n    public Copy(other: Readonly<ImGuiStyle>): this {\r\n        this.Alpha = other.Alpha;\r\n        this.WindowPadding.Copy(this.WindowPadding);\r\n        this.WindowRounding = other.WindowRounding;\r\n        this.WindowBorderSize = other.WindowBorderSize;\r\n        this.WindowMinSize.Copy(this.WindowMinSize);\r\n        this.WindowTitleAlign.Copy(this.WindowTitleAlign);\r\n        this.ChildRounding = other.ChildRounding;\r\n        this.ChildBorderSize = other.ChildBorderSize;\r\n        this.PopupRounding = other.PopupRounding;\r\n        this.PopupBorderSize = other.PopupBorderSize;\r\n        this.FramePadding.Copy(this.FramePadding);\r\n        this.FrameRounding = other.FrameRounding;\r\n        this.FrameBorderSize = other.FrameBorderSize;\r\n        this.ItemSpacing.Copy(this.ItemSpacing);\r\n        this.ItemInnerSpacing.Copy(this.ItemInnerSpacing);\r\n        this.TouchExtraPadding.Copy(this.TouchExtraPadding);\r\n        this.IndentSpacing = other.IndentSpacing;\r\n        this.ColumnsMinSpacing = other.ColumnsMinSpacing;\r\n        this.ScrollbarSize = other.ScrollbarSize;\r\n        this.ScrollbarRounding = other.ScrollbarRounding;\r\n        this.GrabMinSize = other.GrabMinSize;\r\n        this.GrabRounding = other.GrabRounding;\r\n        this.ButtonTextAlign.Copy(this.ButtonTextAlign);\r\n        this.DisplayWindowPadding.Copy(this.DisplayWindowPadding);\r\n        this.DisplaySafeAreaPadding.Copy(this.DisplaySafeAreaPadding);\r\n        this.MouseCursorScale = other.MouseCursorScale;\r\n        this.AntiAliasedLines = other.AntiAliasedLines;\r\n        this.AntiAliasedFill = other.AntiAliasedFill;\r\n        this.CurveTessellationTol = other.CurveTessellationTol;\r\n        for (let i = 0; i < ImGuiCol.COUNT; ++i) {\r\n            this.Colors[i].Copy(other.Colors[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public ScaleAllSizes(scale_factor: number): void { this.internal.ScaleAllSizes(scale_factor); }\r\n}\r\n\r\n// This is where your app communicate with Dear ImGui. Access via ImGui::GetIO().\r\n// Read 'Programmer guide' section in .cpp file for general usage.\r\nexport class ImGuiIO\r\n{\r\n    constructor(public readonly native: Bind.reference_ImGuiIO) {}\r\n\r\n    //------------------------------------------------------------------\r\n    // Settings (fill once)                 // Default value:\r\n    //------------------------------------------------------------------\r\n\r\n    // ImGuiConfigFlags   ConfigFlags;         // = 0                  // See ImGuiConfigFlags_ enum. Set by user/application. Gamepad/keyboard navigation options, etc.\r\n    get ConfigFlags(): ImGuiConfigFlags { return this.native.ConfigFlags; }\r\n    set ConfigFlags(value: ImGuiConfigFlags) { this.native.ConfigFlags = value; }\r\n    // ImGuiBackendFlags  BackendFlags;        // = 0                  // Set ImGuiBackendFlags_ enum. Set by imgui_impl_xxx files or custom back-end to communicate features supported by the back-end.\r\n    get BackendFlags(): ImGuiBackendFlags { return this.native.BackendFlags; }\r\n    set BackendFlags(value: ImGuiBackendFlags) { this.native.BackendFlags = value; }\r\n    // ImVec2        DisplaySize;              // <unset>              // Display size, in pixels. For clamping windows positions.\r\n    get DisplaySize(): Bind.reference_ImVec2 { return this.native.DisplaySize; }\r\n    // float         DeltaTime;                // = 1.0f/60.0f         // Time elapsed since last frame, in seconds.\r\n    get DeltaTime(): number { return this.native.DeltaTime; }\r\n    set DeltaTime(value: number) { this.native.DeltaTime = value; }\r\n    // float         IniSavingRate;            // = 5.0f               // Maximum time between saving positions/sizes to .ini file, in seconds.\r\n    get IniSavingRate(): number { return this.native.IniSavingRate; }\r\n    set IniSavingRate(value: number) { this.native.IniSavingRate = value; }\r\n    // const char*   IniFilename;              // = \"imgui.ini\"        // Path to .ini file. NULL to disable .ini saving.\r\n    get IniFilename(): string { return this.native.IniFilename; }\r\n    set IniFilename(value: string) { this.native.IniFilename = value; }\r\n    // const char*   LogFilename;              // = \"imgui_log.txt\"    // Path to .log file (default parameter to ImGui::LogToFile when no file is specified).\r\n    get LogFilename(): string { return this.native.LogFilename; }\r\n    set LogFilename(value: string) { this.native.LogFilename = value; }\r\n    // float         MouseDoubleClickTime;     // = 0.30f              // Time for a double-click, in seconds.\r\n    get MouseDoubleClickTime(): number { return this.native.MouseDoubleClickTime; }\r\n    set MouseDoubleClickTime(value: number) { this.native.MouseDoubleClickTime = value; }\r\n    // float         MouseDoubleClickMaxDist;  // = 6.0f               // Distance threshold to stay in to validate a double-click, in pixels.\r\n    get MouseDoubleClickMaxDist(): number { return this.native.MouseDoubleClickMaxDist; }\r\n    set MouseDoubleClickMaxDist(value: number) { this.native.MouseDoubleClickMaxDist = value; }\r\n    // float         MouseDragThreshold;       // = 6.0f               // Distance threshold before considering we are dragging\r\n    get MouseDragThreshold(): number { return this.native.MouseDragThreshold; }\r\n    set MouseDragThreshold(value: number) { this.native.MouseDragThreshold = value; }\r\n    // int           KeyMap[ImGuiKey_COUNT];   // <unset>              // Map of indices into the KeysDown[512] entries array\r\n    public KeyMap: number[] = new Proxy([], {\r\n        get: (target: number[], key: PropertyKey): number => {\r\n            if (key === \"length\") { return ImGuiKey.COUNT; }\r\n            return this.native._getAt_KeyMap(Number(key));\r\n        },\r\n        set: (target: number[], key: PropertyKey, value: number): boolean => {\r\n            return this.native._setAt_KeyMap(Number(key), value);\r\n        },\r\n    });\r\n    // float         KeyRepeatDelay;           // = 0.250f             // When holding a key/button, time before it starts repeating, in seconds (for buttons in Repeat mode, etc.).\r\n    get KeyRepeatDelay(): number { return this.native.KeyRepeatDelay; }\r\n    set KeyRepeatDelay(value: number) { this.native.KeyRepeatDelay = value; }\r\n    // float         KeyRepeatRate;            // = 0.050f             // When holding a key/button, rate at which it repeats, in seconds.\r\n    get KeyRepeatRate(): number { return this.native.KeyRepeatRate; }\r\n    set KeyRepeatRate(value: number) { this.native.KeyRepeatRate = value; }\r\n    // void*         UserData;                 // = NULL               // Store your own data for retrieval by callbacks.\r\n    get UserData(): any { return this.native.UserData; }\r\n    set UserData(value: any) { this.native.UserData = value; }\r\n\r\n    // ImFontAtlas*  Fonts;                    // <auto>               // Load and assemble one or more fonts into a single tightly packed texture. Output to Fonts array.\r\n    get Fonts(): ImFontAtlas { return new ImFontAtlas(this.native.Fonts); }\r\n    // float         FontGlobalScale;          // = 1.0f               // Global scale all fonts\r\n    get FontGlobalScale(): number { return this.native.FontGlobalScale; }\r\n    set FontGlobalScale(value: number) { this.native.FontGlobalScale = value; }\r\n    // bool          FontAllowUserScaling;     // = false              // Allow user scaling text of individual window with CTRL+Wheel.\r\n    get FontAllowUserScaling(): boolean { return this.native.FontAllowUserScaling; }\r\n    set FontAllowUserScaling(value: boolean) { this.native.FontAllowUserScaling = value; }\r\n    // ImFont*       FontDefault;              // = NULL               // Font to use on NewFrame(). Use NULL to uses Fonts->Fonts[0].\r\n    get FontDefault(): ImFont | null {\r\n        const font: Bind.reference_ImFont | null = this.native.FontDefault;\r\n        return (font === null) ? null : new ImFont(font);\r\n    }\r\n    set FontDefault(value: ImFont | null) {\r\n        this.native.FontDefault = value && value.native;\r\n    }\r\n    // ImVec2        DisplayFramebufferScale;  // = (1.0f,1.0f)        // For retina display or other situations where window coordinates are different from framebuffer coordinates. User storage only, presently not used by ImGui.\r\n    get DisplayFramebufferScale(): Bind.reference_ImVec2 { return this.native.DisplayFramebufferScale; }\r\n    // ImVec2        DisplayVisibleMin;        // <unset> (0.0f,0.0f)  // If you use DisplaySize as a virtual space larger than your screen, set DisplayVisibleMin/Max to the visible area.\r\n    get DisplayVisibleMin(): Bind.reference_ImVec2 { return this.native.DisplayVisibleMin; }\r\n    // ImVec2        DisplayVisibleMax;        // <unset> (0.0f,0.0f)  // If the values are the same, we defaults to Min=(0.0f) and Max=DisplaySize\r\n    get DisplayVisibleMax(): Bind.reference_ImVec2 { return this.native.DisplayVisibleMax; }\r\n\r\n    // Miscellaneous configuration options\r\n    // bool          OptMacOSXBehaviors;       // = defined(__APPLE__) // OS X style: Text editing cursor movement using Alt instead of Ctrl, Shortcuts using Cmd/Super instead of Ctrl, Line/Text Start and End using Cmd+Arrows instead of Home/End, Double click selects by word instead of selecting whole text, Multi-selection in lists uses Cmd/Super instead of Ctrl\r\n    get ConfigMacOSXBehaviors(): boolean { return this.native.ConfigMacOSXBehaviors; }\r\n    set ConfigMacOSXBehaviors(value: boolean) { this.native.ConfigMacOSXBehaviors = value; }\r\n    // bool          ConfigInputTextCursorBlink;   // = true               // Enable blinking cursor, for users who consider it annoying.\r\n    get ConfigInputTextCursorBlink(): boolean { return this.native.ConfigInputTextCursorBlink; }\r\n    set ConfigInputTextCursorBlink(value: boolean) { this.native.ConfigInputTextCursorBlink = value; }\r\n    // bool          ConfigResizeWindowsFromEdges; // = false          // [BETA] Enable resizing of windows from their edges and from the lower-left corner. This requires (io.BackendFlags & ImGuiBackendFlags_HasMouseCursors) because it needs mouse cursor feedback. (This used to be the ImGuiWindowFlags_ResizeFromAnySide flag)\r\n    get ConfigResizeWindowsFromEdges(): boolean { return this.native.ConfigResizeWindowsFromEdges; }\r\n    set ConfigResizeWindowsFromEdges(value: boolean) { this.native.ConfigResizeWindowsFromEdges = value; }\r\n\r\n    //------------------------------------------------------------------\r\n    // Settings (User Functions)\r\n    //------------------------------------------------------------------\r\n\r\n    // Optional: access OS clipboard\r\n    // (default to use native Win32 clipboard on Windows, otherwise uses a private clipboard. Override to access OS clipboard on other architectures)\r\n    // const char* (*GetClipboardTextFn)(void* user_data);\r\n    get GetClipboardTextFn(): ((user_data: any) => string) | null { return this.native.GetClipboardTextFn; }\r\n    set GetClipboardTextFn(value: ((user_data: any) => string) | null) { this.native.GetClipboardTextFn = value; }\r\n    // void        (*SetClipboardTextFn)(void* user_data, const char* text);\r\n    get SetClipboardTextFn(): ((user_data: any, text: string) => void) | null { return this.native.SetClipboardTextFn; }\r\n    set SetClipboardTextFn(value: ((user_data: any, text: string) => void) | null) { this.native.SetClipboardTextFn = value; }\r\n    // void*       ClipboardUserData;\r\n    get ClipboardUserData(): any { return this.native.ClipboardUserData; }\r\n    set ClipboardUserData(value: any) { this.native.ClipboardUserData = value; }\r\n\r\n    // Optional: override memory allocations. MemFreeFn() may be called with a NULL pointer.\r\n    // (default to posix malloc/free)\r\n    // void*       (*MemAllocFn)(size_t sz);\r\n    // void        (*MemFreeFn)(void* ptr);\r\n\r\n    // Optional: notify OS Input Method Editor of the screen position of your cursor for text input position (e.g. when using Japanese/Chinese IME in Windows)\r\n    // (default to use native imm32 api on Windows)\r\n    // void        (*ImeSetInputScreenPosFn)(int x, int y);\r\n    // void*       ImeWindowHandle;            // (Windows) Set this to your HWND to get automatic IME cursor positioning.\r\n\r\n    //------------------------------------------------------------------\r\n    // Input - Fill before calling NewFrame()\r\n    //------------------------------------------------------------------\r\n\r\n    // ImVec2      MousePos;                   // Mouse position, in pixels. Set to ImVec2(-FLT_MAX,-FLT_MAX) if mouse is unavailable (on another screen, etc.)\r\n    get MousePos(): Bind.reference_ImVec2 { return this.native.MousePos; }\r\n    // bool        MouseDown[5];               // Mouse buttons: left, right, middle + extras. ImGui itself mostly only uses left button (BeginPopupContext** are using right button). Others buttons allows us to track if the mouse is being used by your application + available to user as a convenience via IsMouse** API.\r\n    public MouseDown: boolean[] = new Proxy([], {\r\n        get: (target: boolean[], key: PropertyKey): number | boolean => {\r\n            if (key === \"length\") { return 5; }\r\n            return this.native._getAt_MouseDown(Number(key));\r\n        },\r\n        set: (target: boolean[], key: PropertyKey, value: boolean): boolean => {\r\n            return this.native._setAt_MouseDown(Number(key), value);\r\n        },\r\n    });\r\n    // float       MouseWheel;                 // Mouse wheel: 1 unit scrolls about 5 lines text.\r\n    public get MouseWheel(): number { return this.native.MouseWheel; }\r\n    public set MouseWheel(value: number) { this.native.MouseWheel = value; }\r\n    // float       MouseWheelH;                    // Mouse wheel (Horizontal). Most users don't have a mouse with an horizontal wheel, may not be filled by all back-ends.\r\n    public get MouseWheelH(): number { return this.native.MouseWheelH; }\r\n    public set MouseWheelH(value: number) { this.native.MouseWheelH = value; }\r\n    // bool        MouseDrawCursor;            // Request ImGui to draw a mouse cursor for you (if you are on a platform without a mouse cursor).\r\n    get MouseDrawCursor(): boolean { return this.native.MouseDrawCursor; } set MouseDrawCursor(value: boolean) { this.native.MouseDrawCursor = value; }\r\n    // bool        KeyCtrl;                    // Keyboard modifier pressed: Control\r\n    get KeyCtrl(): boolean { return this.native.KeyCtrl; } set KeyCtrl(value: boolean) { this.native.KeyCtrl = value; }\r\n    // bool        KeyShift;                   // Keyboard modifier pressed: Shift\r\n    get KeyShift(): boolean { return this.native.KeyShift; } set KeyShift(value: boolean) { this.native.KeyShift = value; }\r\n    // bool        KeyAlt;                     // Keyboard modifier pressed: Alt\r\n    get KeyAlt(): boolean { return this.native.KeyAlt; } set KeyAlt(value: boolean) { this.native.KeyAlt = value; }\r\n    // bool        KeySuper;                   // Keyboard modifier pressed: Cmd/Super/Windows\r\n    get KeySuper(): boolean { return this.native.KeySuper; } set KeySuper(value: boolean) { this.native.KeySuper = value; }\r\n    // bool        KeysDown[512];              // Keyboard keys that are pressed (in whatever storage order you naturally have access to keyboard data)\r\n    public KeysDown: boolean[] = new Proxy([], {\r\n        get: (target: boolean[], key: PropertyKey): number | boolean => {\r\n            if (key === \"length\") { return 512; }\r\n            return this.native._getAt_KeysDown(Number(key));\r\n        },\r\n        set: (target: boolean[], key: PropertyKey, value: boolean): boolean => {\r\n            return this.native._setAt_KeysDown(Number(key), value);\r\n        },\r\n    });\r\n    // ImWchar     InputCharacters[16+1];      // List of characters input (translated by user from keypress+keyboard state). Fill using AddInputCharacter() helper.\r\n    public get InputCharacters(): Readonly<Uint16Array> { return this.native.InputCharacters; }\r\n    // float       NavInputs[ImGuiNavInput_COUNT]; // Gamepad inputs (keyboard keys will be auto-mapped and be written here by ImGui::NewFrame)\r\n    public NavInputs: number[] = new Proxy([], {\r\n        get: (target: number[], key: PropertyKey): number => {\r\n            if (key === \"length\") { return ImGuiNavInput.COUNT; }\r\n            return this.native._getAt_NavInputs(Number(key));\r\n        },\r\n        set: (target: number[], key: PropertyKey, value: number): boolean => {\r\n            return this.native._setAt_NavInputs(Number(key), value);\r\n        },\r\n    });\r\n\r\n    // Functions\r\n    // IMGUI_API void AddInputCharacter(ImWchar c);                        // Add new character into InputCharacters[]\r\n    public AddInputCharacter(c: number): void { this.native.AddInputCharacter(c); }\r\n    // IMGUI_API void AddInputCharactersUTF8(const char* utf8_chars);      // Add new characters into InputCharacters[] from an UTF-8 string\r\n    public AddInputCharactersUTF8(utf8_chars: string): void { this.native.AddInputCharactersUTF8(utf8_chars); }\r\n    // inline void    ClearInputCharacters() { InputCharacters[0] = 0; }   // Clear the text input buffer manually\r\n    public ClearInputCharacters(): void { this.native.ClearInputCharacters(); }\r\n\r\n    //------------------------------------------------------------------\r\n    // Output - Retrieve after calling NewFrame()\r\n    //------------------------------------------------------------------\r\n\r\n    // bool        WantCaptureMouse;           // When io.WantCaptureMouse is true, do not dispatch mouse input data to your main application. This is set by ImGui when it wants to use your mouse (e.g. unclicked mouse is hovering a window, or a widget is active).\r\n    get WantCaptureMouse(): boolean { return this.native.WantCaptureMouse; } set WantCaptureMouse(value: boolean) { this.native.WantCaptureMouse = value; }\r\n    // bool        WantCaptureKeyboard;        // When io.WantCaptureKeyboard is true, do not dispatch keyboard input data to your main application. This is set by ImGui when it wants to use your keyboard inputs.\r\n    get WantCaptureKeyboard(): boolean { return this.native.WantCaptureKeyboard; } set WantCaptureKeyboard(value: boolean) { this.native.WantCaptureKeyboard = value; }\r\n    // bool        WantTextInput;              // Mobile/console: when io.WantTextInput is true, you may display an on-screen keyboard. This is set by ImGui when it wants textual keyboard input to happen (e.g. when a InputText widget is active).\r\n    get WantTextInput(): boolean { return this.native.WantTextInput; } set WantTextInput(value: boolean) { this.native.WantTextInput = value; }\r\n    // bool        WantSetMousePos;              // [BETA-NAV] MousePos has been altered, back-end should reposition mouse on next frame. Set only when 'NavMovesMouse=true'.\r\n    get WantSetMousePos(): boolean { return this.native.WantSetMousePos; } set WantSetMousePos(value: boolean) { this.native.WantSetMousePos = value; }\r\n    // bool        WantSaveIniSettings;        // When manual .ini load/save is active (io.IniFilename == NULL), this will be set to notify your application that you can call SaveIniSettingsToMemory() and save yourself. IMPORTANT: You need to clear io.WantSaveIniSettings yourself.\r\n    get WantSaveIniSettings(): boolean { return this.native.WantSaveIniSettings; } set WantSaveIniSettings(value: boolean) { this.native.WantSaveIniSettings = value; }\r\n    // bool        NavActive;                  // Directional navigation is currently allowed (will handle ImGuiKey_NavXXX events) = a window is focused and it doesn't use the ImGuiWindowFlags_NoNavInputs flag.\r\n    get NavActive(): boolean { return this.native.NavActive; } set NavActive(value: boolean) { this.native.NavActive = value; }\r\n    // bool        NavVisible;                 // Directional navigation is visible and allowed (will handle ImGuiKey_NavXXX events).\r\n    get NavVisible(): boolean { return this.native.NavVisible; } set NavVisible(value: boolean) { this.native.NavVisible = value; }\r\n    // float       Framerate;                  // Application framerate estimation, in frame per second. Solely for convenience. Rolling average estimation based on IO.DeltaTime over 120 frames\r\n    get Framerate(): number { return this.native.Framerate; }\r\n    // int         MetricsRenderVertices;      // Vertices output during last call to Render()\r\n    get MetricsRenderVertices(): number { return this.native.MetricsRenderVertices; }\r\n    // int         MetricsRenderIndices;       // Indices output during last call to Render() = number of triangles * 3\r\n    get MetricsRenderIndices(): number { return this.native.MetricsRenderIndices; }\r\n    // int         MetricsRenderWindows;       // Number of visible windows\r\n    get MetricsRenderWindows(): number { return this.native.MetricsRenderWindows; }\r\n    // int         MetricsActiveWindows;       // Number of visible root windows (exclude child windows)\r\n    get MetricsActiveWindows(): number { return this.native.MetricsActiveWindows; }\r\n    // int         MetricsActiveAllocations;   // Number of active allocations, updated by MemAlloc/MemFree based on current context. May be off if you have multiple imgui contexts.\r\n    get MetricsActiveAllocations(): number { return this.native.MetricsActiveAllocations; }\r\n    // ImVec2      MouseDelta;                 // Mouse delta. Note that this is zero if either current or previous position are invalid (-FLT_MAX,-FLT_MAX), so a disappearing/reappearing mouse won't have a huge delta.\r\n    get MouseDelta(): Readonly<Bind.reference_ImVec2> { return this.native.MouseDelta; }\r\n\r\n    //------------------------------------------------------------------\r\n    // [Internal] ImGui will maintain those fields. Forward compatibility not guaranteed!\r\n    //------------------------------------------------------------------\r\n\r\n    // ImVec2      MousePosPrev;               // Previous mouse position temporary storage (nb: not for public use, set to MousePos in NewFrame())\r\n    // ImVec2      MouseClickedPos[5];         // Position at time of clicking\r\n    public MouseClickedPos: Array<Readonly<Bind.reference_ImVec2>> = new Proxy([], {\r\n        get: (target: Array<Readonly<Bind.reference_ImVec2>>, key: PropertyKey): number | Readonly<Bind.reference_ImVec2> => {\r\n            if (key === \"length\") { return 5; }\r\n            return this.native._getAt_MouseClickedPos(Number(key));\r\n        },\r\n    });\r\n    // float       MouseClickedTime[5];        // Time of last click (used to figure out double-click)\r\n    // bool        MouseClicked[5];            // Mouse button went from !Down to Down\r\n    // bool        MouseDoubleClicked[5];      // Has mouse button been double-clicked?\r\n    // bool        MouseReleased[5];           // Mouse button went from Down to !Down\r\n    // bool        MouseDownOwned[5];          // Track if button was clicked inside a window. We don't request mouse capture from the application if click started outside ImGui bounds.\r\n    // float       MouseDownDuration[5];       // Duration the mouse button has been down (0.0f == just clicked)\r\n    public MouseDownDuration: number[] = new Proxy([], {\r\n        get: (target: number[], key: PropertyKey): number => {\r\n            if (key === \"length\") { return 5; }\r\n            return this.native._getAt_MouseDownDuration(Number(key));\r\n        },\r\n    });\r\n    // float       MouseDownDurationPrev[5];   // Previous time the mouse button has been down\r\n    // ImVec2      MouseDragMaxDistanceAbs[5]; // Maximum distance, absolute, on each axis, of how much mouse has traveled from the clicking point\r\n    // float       MouseDragMaxDistanceSqr[5]; // Squared maximum distance of how much mouse has traveled from the clicking point\r\n    // float       KeysDownDuration[512];      // Duration the keyboard key has been down (0.0f == just pressed)\r\n    public KeysDownDuration: number[] = new Proxy([], {\r\n        get: (target: number[], key: PropertyKey): number => {\r\n            if (key === \"length\") { return 512; }\r\n            return this.native._getAt_KeysDownDuration(Number(key));\r\n        },\r\n    });\r\n    // float       KeysDownDurationPrev[512];  // Previous duration the key has been down\r\n    // float       NavInputsDownDuration[ImGuiNavInput_COUNT];\r\n    public NavInputsDownDuration: number[] = new Proxy([], {\r\n        get: (target: number[], key: PropertyKey): number => {\r\n            if (key === \"length\") { return ImGuiNavInput.COUNT; }\r\n            return this.native._getAt_NavInputsDownDuration(Number(key));\r\n        },\r\n    });\r\n    // float       NavInputsDownDurationPrev[ImGuiNavInput_COUNT];\r\n\r\n    // IMGUI_API   ImGuiIO();\r\n}\r\n\r\n// Context creation and access, if you want to use multiple context, share context between modules (e.g. DLL).\r\n// All contexts share a same ImFontAtlas by default. If you want different font atlas, you can new() them and overwrite the GetIO().Fonts variable of an ImGui context.\r\n// All those functions are not reliant on the current context.\r\nexport class ImGuiContext {\r\n    public static current_ctx: ImGuiContext | null = null;\r\n    public static getTexture(index: number): ImTextureID | null {\r\n        if (ImGuiContext.current_ctx === null) { throw new Error(); }\r\n        return ImGuiContext.current_ctx._getTexture(index);\r\n    }\r\n    public static setTexture(texture: ImTextureID | null): number {\r\n        if (ImGuiContext.current_ctx === null) { throw new Error(); }\r\n        return ImGuiContext.current_ctx._setTexture(texture);\r\n    }\r\n\r\n    private textures: Array<ImTextureID | null> = [];\r\n    constructor(public readonly native: Bind.WrapImGuiContext) {}\r\n    private _getTexture(index: number): ImTextureID | null {\r\n        return this.textures[index] || null;\r\n    }\r\n    private _setTexture(texture: ImTextureID | null): number {\r\n        let index = this.textures.indexOf(texture);\r\n        if (index === -1) {\r\n            for (let i = 0; i < this.textures.length; ++i) {\r\n                if (this.textures[i] === null) {\r\n                    this.textures[i] = texture;\r\n                    return i;\r\n                }\r\n            }\r\n            index = this.textures.length;\r\n            this.textures.push(texture);\r\n        }\r\n        return index;\r\n    }\r\n}\r\n// IMGUI_API ImGuiContext* CreateContext(ImFontAtlas* shared_font_atlas = NULL);\r\nexport function CreateContext(shared_font_atlas: ImFontAtlas | null = null): ImGuiContext | null {\r\n    const ctx: ImGuiContext = new ImGuiContext(bind.CreateContext());\r\n    if (ImGuiContext.current_ctx === null) {\r\n        ImGuiContext.current_ctx = ctx;\r\n    }\r\n    return ctx;\r\n}\r\n// IMGUI_API void          DestroyContext(ImGuiContext* ctx = NULL);   // NULL = Destroy current context\r\nexport function DestroyContext(ctx: ImGuiContext | null = null): void {\r\n    if (ctx === null) {\r\n        ctx = ImGuiContext.current_ctx;\r\n        ImGuiContext.current_ctx = null;\r\n    }\r\n    bind.DestroyContext((ctx === null) ? null : ctx.native);\r\n}\r\n// IMGUI_API ImGuiContext* GetCurrentContext();\r\nexport function GetCurrentContext(): ImGuiContext | null {\r\n    // const ctx_native: BindImGui.ImGuiContext | null = bind.GetCurrentContext();\r\n    return ImGuiContext.current_ctx;\r\n}\r\n// IMGUI_API void          SetCurrentContext(ImGuiContext* ctx);\r\nexport function SetCurrentContext(ctx: ImGuiContext | null): void {\r\n    bind.SetCurrentContext((ctx === null) ? null : ctx.native);\r\n    ImGuiContext.current_ctx = ctx;\r\n}\r\n\r\n// IMGUI_API bool          DebugCheckVersionAndDataLayout(const char* version_str, size_t sz_io, size_t sz_style, size_t sz_vec2, size_t sz_vec4, size_t sz_drawvert);\r\nexport function DebugCheckVersionAndDataLayout(version_str: string, sz_io: number, sz_style: number, sz_vec2: number, sz_vec4: number, sz_draw_vert: number): boolean {\r\n    return bind.DebugCheckVersionAndDataLayout(version_str, sz_io, sz_style, sz_vec2, sz_vec4, sz_draw_vert);\r\n}\r\n\r\n// Main\r\n// IMGUI_API ImGuiIO&      GetIO();\r\nexport function GetIO(): ImGuiIO { return new ImGuiIO(bind.GetIO()); }\r\n// IMGUI_API ImGuiStyle&   GetStyle();\r\nexport function GetStyle(): ImGuiStyle { return new ImGuiStyle(bind.GetStyle()); }\r\n// IMGUI_API void          NewFrame();                                 // start a new ImGui frame, you can submit any command from this point until Render()/EndFrame().\r\nexport function NewFrame(): void { bind.NewFrame(); }\r\n// IMGUI_API void          EndFrame();                                 // ends the ImGui frame. automatically called by Render(), so most likely don't need to ever call that yourself directly. If you don't need to render you may call EndFrame() but you'll have wasted CPU already. If you don't need to render, better to not create any imgui windows instead!\r\nexport function EndFrame(): void { bind.EndFrame(); }\r\n// IMGUI_API void          Render();                                   // ends the ImGui frame, finalize the draw data, then call your io.RenderDrawListsFn() function if set.\r\nexport function Render(): void { bind.Render(); }\r\n// IMGUI_API ImDrawData*   GetDrawData();                              // same value as passed to your io.RenderDrawListsFn() function. valid after Render() and until the next call to NewFrame()\r\nexport function GetDrawData(): ImDrawData | null {\r\n    const draw_data: Bind.reference_ImDrawData | null = bind.GetDrawData();\r\n    return (draw_data === null) ? null : new ImDrawData(draw_data);\r\n}\r\n\r\n// Demo, Debug, Informations\r\n// IMGUI_API void          ShowDemoWindow(bool* p_open = NULL);        // create demo/test window (previously called ShowTestWindow). demonstrate most ImGui features. call this to learn about the library! try to make it always available in your application!\r\nexport function ShowDemoWindow(p_open: Bind.ImScalar<boolean> | null = null): void { bind.ShowDemoWindow(p_open); }\r\n// IMGUI_API void          ShowMetricsWindow(bool* p_open = NULL);     // create metrics window. display ImGui internals: draw commands (with individual draw calls and vertices), window list, basic internal state, etc.\r\nexport function ShowMetricsWindow(p_open: Bind.ImScalar<boolean> | Bind.ImAccess<boolean> | null = null): void {\r\n    if (p_open === null) {\r\n        bind.ShowMetricsWindow(null);\r\n    } else if (Array.isArray(p_open)) {\r\n        bind.ShowMetricsWindow(p_open);\r\n    } else {\r\n        const ref_open: Bind.ImScalar<boolean> = [ p_open() ];\r\n        const ret = bind.ShowMetricsWindow(ref_open);\r\n        p_open(ref_open[0]);\r\n        return ret;\r\n    }\r\n}\r\n// IMGUI_API void          ShowStyleEditor(ImGuiStyle* ref = NULL);    // add style editor block (not a window). you can pass in a reference ImGuiStyle structure to compare to, revert to and save to (else it uses the default style)\r\nexport function ShowStyleEditor(ref: ImGuiStyle | null = null): void {\r\n    if (ref === null) {\r\n        bind.ShowStyleEditor(null);\r\n    } else if (ref.internal instanceof bind.ImGuiStyle) {\r\n        bind.ShowStyleEditor(ref.internal);\r\n    } else {\r\n        const native = new bind.ImGuiStyle();\r\n        const wrap = new ImGuiStyle(native);\r\n        wrap.Copy(ref);\r\n        bind.ShowStyleEditor(native);\r\n        ref.Copy(wrap);\r\n        native.delete();\r\n    }\r\n}\r\n// IMGUI_API bool          ShowStyleSelector(const char* label);\r\nexport function ShowStyleSelector(label: string): boolean { return bind.ShowStyleSelector(label); }\r\n// IMGUI_API void          ShowFontSelector(const char* label);\r\nexport function ShowFontSelector(label: string): void { bind.ShowFontSelector(label); }\r\n// IMGUI_API void          ShowUserGuide();                            // add basic help/info block (not a window): how to manipulate ImGui as a end-user (mouse/keyboard controls).\r\nexport function ShowUserGuide(): void { bind.ShowUserGuide(); }\r\n// IMGUI_API const char*   GetVersion();\r\nexport function GetVersion(): string { return bind.GetVersion(); }\r\n\r\n// Styles\r\n// IMGUI_API void          StyleColorsClassic(ImGuiStyle* dst = NULL);\r\nexport function StyleColorsClassic(dst: ImGuiStyle | null = null): void {\r\n    if (dst === null) {\r\n        bind.StyleColorsClassic(null);\r\n    } else if (dst.internal instanceof bind.ImGuiStyle) {\r\n        bind.StyleColorsClassic(dst.internal);\r\n    } else {\r\n        const native = new bind.ImGuiStyle();\r\n        const wrap = new ImGuiStyle(native);\r\n        wrap.Copy(dst);\r\n        bind.StyleColorsClassic(native);\r\n        dst.Copy(wrap);\r\n        native.delete();\r\n    }\r\n}\r\n// IMGUI_API void          StyleColorsDark(ImGuiStyle* dst = NULL);\r\nexport function StyleColorsDark(dst: ImGuiStyle | null = null): void {\r\n    if (dst === null) {\r\n        bind.StyleColorsDark(null);\r\n    } else if (dst.internal instanceof bind.ImGuiStyle) {\r\n        bind.StyleColorsDark(dst.internal);\r\n    } else {\r\n        const native = new bind.ImGuiStyle();\r\n        const wrap = new ImGuiStyle(native);\r\n        wrap.Copy(dst);\r\n        bind.StyleColorsDark(native);\r\n        dst.Copy(wrap);\r\n        native.delete();\r\n    }\r\n}\r\n// IMGUI_API void          StyleColorsLight(ImGuiStyle* dst = NULL);\r\nexport function StyleColorsLight(dst: ImGuiStyle | null = null): void {\r\n    if (dst === null) {\r\n        bind.StyleColorsLight(null);\r\n    } else if (dst.internal instanceof bind.ImGuiStyle) {\r\n        bind.StyleColorsLight(dst.internal);\r\n    } else {\r\n        const native = new bind.ImGuiStyle();\r\n        const wrap = new ImGuiStyle(native);\r\n        wrap.Copy(dst);\r\n        bind.StyleColorsLight(native);\r\n        dst.Copy(wrap);\r\n        native.delete();\r\n    }\r\n}\r\n\r\n// Window\r\n// IMGUI_API bool          Begin(const char* name, bool* p_open = NULL, ImGuiWindowFlags flags = 0);                                                   // push window to the stack and start appending to it. see .cpp for details. return false when window is collapsed, so you can early out in your code. 'bool* p_open' creates a widget on the upper-right to close the window (which sets your bool to false).\r\nexport function Begin(name: string, open: Bind.ImScalar<boolean> | Bind.ImAccess<boolean> | null = null, flags: ImGuiWindowFlags = 0): boolean {\r\n    if (open === null) {\r\n        return bind.Begin(name, null, flags);\r\n    } else if (Array.isArray(open)) {\r\n        return bind.Begin(name, open, flags);\r\n    } else {\r\n        const ref_open: Bind.ImScalar<boolean> = [ open() ];\r\n        const opened: boolean = bind.Begin(name, ref_open, flags);\r\n        open(ref_open[0]);\r\n        return opened;\r\n    }\r\n}\r\n// IMGUI_API void          End();                                                                                                                      // finish appending to current window, pop it off the window stack.\r\nexport function End(): void { bind.End(); }\r\n// IMGUI_API bool          BeginChild(const char* str_id, const ImVec2& size = ImVec2(0,0), bool border = false, ImGuiWindowFlags extra_flags = 0);    // begin a scrolling region. size==0.0f: use remaining window size, size<0.0f: use remaining window size minus abs(size). size>0.0f: fixed size. each axis can use a different mode, e.g. ImVec2(0,400).\r\n// IMGUI_API bool          BeginChild(ImGuiID id, const ImVec2& size = ImVec2(0,0), bool border = false, ImGuiWindowFlags extra_flags = 0);            // \"\r\nexport function BeginChild(id: string | Bind.ImGuiID, size: Readonly<Bind.interface_ImVec2> = ImVec2.ZERO, border: boolean = false, extra_flags: ImGuiWindowFlags = 0): boolean {\r\n    return bind.BeginChild(id, size, border, extra_flags);\r\n}\r\n// IMGUI_API void          EndChild();\r\nexport function EndChild(): void { bind.EndChild(); }\r\n// IMGUI_API ImVec2        GetContentRegionMax();                                              // current content boundaries (typically window boundaries including scrolling, or current column boundaries), in windows coordinates\r\nexport function GetContentRegionMax(out: Bind.interface_ImVec2 = new ImVec2()): typeof out {\r\n    return bind.GetContentRegionMax(out);\r\n}\r\n// IMGUI_API ImVec2        GetContentRegionAvail();                                            // == GetContentRegionMax() - GetCursorPos()\r\nexport function GetContentRegionAvail(out: Bind.interface_ImVec2 = new ImVec2()): typeof out {\r\n    return bind.GetContentRegionAvail(out);\r\n}\r\n// IMGUI_API float         GetContentRegionAvailWidth();                                       //\r\nexport function GetContentRegionAvailWidth(): number { return bind.GetContentRegionAvailWidth(); }\r\n// IMGUI_API ImVec2        GetWindowContentRegionMin();                                        // content boundaries min (roughly (0,0)-Scroll), in window coordinates\r\nexport function GetWindowContentRegionMin(out: Bind.interface_ImVec2 = new ImVec2()): typeof out {\r\n    return bind.GetWindowContentRegionMin(out);\r\n}\r\n// IMGUI_API ImVec2        GetWindowContentRegionMax();                                        // content boundaries max (roughly (0,0)+Size-Scroll) where Size can be override with SetNextWindowContentSize(), in window coordinates\r\nexport function GetWindowContentRegionMax(out: Bind.interface_ImVec2 = new ImVec2()): typeof out {\r\n    return bind.GetWindowContentRegionMax(out);\r\n}\r\n// IMGUI_API float         GetWindowContentRegionWidth();                                      //\r\nexport function GetWindowContentRegionWidth(): number { return bind.GetWindowContentRegionWidth(); }\r\n// IMGUI_API ImDrawList*   GetWindowDrawList();                                                // get rendering command-list if you want to append your own draw primitives\r\nexport function GetWindowDrawList(): ImDrawList {\r\n    return new ImDrawList(bind.GetWindowDrawList());\r\n}\r\n// IMGUI_API ImVec2        GetWindowPos();                                                     // get current window position in screen space (useful if you want to do your own drawing via the DrawList api)\r\nexport function GetWindowPos(out: Bind.interface_ImVec2 = new ImVec2()): typeof out {\r\n    return bind.GetWindowPos(out);\r\n}\r\n// IMGUI_API ImVec2        GetWindowSize();                                                    // get current window size\r\nexport function GetWindowSize(out: Bind.interface_ImVec2 = new ImVec2()): typeof out {\r\n    return bind.GetWindowSize(out);\r\n}\r\n// IMGUI_API float         GetWindowWidth();\r\nexport function GetWindowWidth(): number { return bind.GetWindowWidth(); }\r\n// IMGUI_API float         GetWindowHeight();\r\nexport function GetWindowHeight(): number { return bind.GetWindowHeight(); }\r\n// IMGUI_API bool          IsWindowCollapsed();\r\nexport function IsWindowCollapsed(): boolean { return bind.IsWindowCollapsed(); }\r\n// IMGUI_API bool          IsWindowAppearing();\r\nexport function IsWindowAppearing(): boolean { return bind.IsWindowAppearing(); }\r\n// IMGUI_API void          SetWindowFontScale(float scale);                                    // per-window font scale. Adjust IO.FontGlobalScale if you want to scale all windows\r\nexport function SetWindowFontScale(scale: number): void { bind.SetWindowFontScale(scale); }\r\n\r\n// IMGUI_API void          SetNextWindowPos(const ImVec2& pos, ImGuiCond cond = 0, const ImVec2& pivot = ImVec2(0,0)); // set next window position. call before Begin(). use pivot=(0.5f,0.5f) to center on given point, etc.\r\nexport function SetNextWindowPos(pos: Readonly<Bind.interface_ImVec2>, cond: ImGuiCond = 0, pivot: Readonly<Bind.interface_ImVec2> = ImVec2.ZERO): void {\r\n    bind.SetNextWindowPos(pos, cond, pivot);\r\n}\r\n// IMGUI_API void          SetNextWindowSize(const ImVec2& size, ImGuiCond cond = 0);          // set next window size. set axis to 0.0f to force an auto-fit on this axis. call before Begin()\r\nexport function SetNextWindowSize(pos: Readonly<Bind.interface_ImVec2>, cond: ImGuiCond = 0): void {\r\n    bind.SetNextWindowSize(pos, cond);\r\n}\r\n// IMGUI_API void          SetNextWindowSizeConstraints(const ImVec2& size_min, const ImVec2& size_max, ImGuiSizeConstraintCallback custom_callback = NULL, void* custom_callback_data = NULL); // set next window size limits. use -1,-1 on either X/Y axis to preserve the current size. Use callback to apply non-trivial programmatic constraints.\r\nexport function SetNextWindowSizeConstraints(size_min: Readonly<Bind.interface_ImVec2>, size_max: Readonly<Bind.interface_ImVec2>, custom_callback: ImGuiSizeConstraintCallback | null = null, custom_callback_data: any = null): void {\r\n    if (custom_callback) {\r\n        bind.SetNextWindowSizeConstraints(size_min, size_max, (data: Bind.reference_ImGuiSizeCallbackData): void => {\r\n            custom_callback(new ImGuiSizeCallbackData(data, custom_callback_data));\r\n        }, null);\r\n    } else {\r\n        bind.SetNextWindowSizeConstraints(size_min, size_max, null, null);\r\n    }\r\n}\r\n// IMGUI_API void          SetNextWindowContentSize(const ImVec2& size);                       // set next window content size (~ enforce the range of scrollbars). not including window decorations (title bar, menu bar, etc.). set an axis to 0.0f to leave it automatic. call before Begin()\r\nexport function SetNextWindowContentSize(size: Readonly<Bind.interface_ImVec2>): void {\r\n    bind.SetNextWindowContentSize(size);\r\n}\r\n// IMGUI_API void          SetNextWindowCollapsed(bool collapsed, ImGuiCond cond = 0);         // set next window collapsed state. call before Begin()\r\nexport function SetNextWindowCollapsed(collapsed: boolean, cond: ImGuiCond = 0): void {\r\n    bind.SetNextWindowCollapsed(collapsed, cond);\r\n}\r\n// IMGUI_API void          SetNextWindowFocus();                                               // set next window to be focused / front-most. call before Begin()\r\nexport function SetNextWindowFocus(): void { bind.SetNextWindowFocus(); }\r\n// IMGUI_API void          SetNextWindowBgAlpha(float alpha);                                  // set next window background color alpha. helper to easily modify ImGuiCol_WindowBg/ChildBg/PopupBg.\r\nexport function SetNextWindowBgAlpha(alpha: number): void { bind.SetNextWindowBgAlpha(alpha); }\r\n// IMGUI_API void          SetWindowPos(const ImVec2& pos, ImGuiCond cond = 0);                // (not recommended) set current window position - call within Begin()/End(). prefer using SetNextWindowPos(), as this may incur tearing and side-effects.\r\n// IMGUI_API void          SetWindowSize(const ImVec2& size, ImGuiCond cond = 0);              // (not recommended) set current window size - call within Begin()/End(). set to ImVec2(0,0) to force an auto-fit. prefer using SetNextWindowSize(), as this may incur tearing and minor side-effects.\r\n// IMGUI_API void          SetWindowCollapsed(bool collapsed, ImGuiCond cond = 0);             // (not recommended) set current window collapsed state. prefer using SetNextWindowCollapsed().\r\n// IMGUI_API void          SetWindowFocus();                                                   // (not recommended) set current window to be focused / front-most. prefer using SetNextWindowFocus().\r\n// IMGUI_API void          SetWindowPos(const char* name, const ImVec2& pos, ImGuiCond cond = 0);      // set named window position.\r\n// IMGUI_API void          SetWindowSize(const char* name, const ImVec2& size, ImGuiCond cond = 0);    // set named window size. set axis to 0.0f to force an auto-fit on this axis.\r\n// IMGUI_API void          SetWindowCollapsed(const char* name, bool collapsed, ImGuiCond cond = 0);   // set named window collapsed state\r\n// IMGUI_API void          SetWindowFocus(const char* name);                                           // set named window to be focused / front-most. use NULL to remove focus.\r\nexport function SetWindowPos(name_or_pos: string | Readonly<Bind.interface_ImVec2>, pos_or_cond: Readonly<Bind.interface_ImVec2> | ImGuiCond = 0, cond: ImGuiCond = 0): void {\r\n    if (typeof(name_or_pos) === \"string\") {\r\n        bind.SetWindowNamePos(name_or_pos, pos_or_cond as Readonly<Bind.interface_ImVec2>, cond);\r\n        return;\r\n    } else {\r\n        bind.SetWindowPos(name_or_pos, pos_or_cond as ImGuiCond);\r\n    }\r\n}\r\nexport function SetWindowSize(name_or_size: string | Readonly<Bind.interface_ImVec2>, size_or_cond: Readonly<Bind.interface_ImVec2> | ImGuiCond = 0, cond: ImGuiCond = 0): void {\r\n    if (typeof(name_or_size) === \"string\") {\r\n        bind.SetWindowNamePos(name_or_size, size_or_cond as Readonly<Bind.interface_ImVec2>, cond);\r\n    } else {\r\n        bind.SetWindowSize(name_or_size, size_or_cond as ImGuiCond);\r\n    }\r\n}\r\nexport function SetWindowCollapsed(name_or_collapsed: string | boolean, collapsed_or_cond: boolean | ImGuiCond = 0, cond: ImGuiCond = 0): void {\r\n    if (typeof(name_or_collapsed) === \"string\") {\r\n        bind.SetWindowNameCollapsed(name_or_collapsed, collapsed_or_cond as boolean, cond);\r\n    } else {\r\n        bind.SetWindowCollapsed(name_or_collapsed, collapsed_or_cond as ImGuiCond);\r\n    }\r\n}\r\nexport function SetWindowFocus(name?: string): void {\r\n    if (typeof(name) === \"string\") {\r\n        bind.SetWindowNameFocus(name);\r\n    } else {\r\n        bind.SetWindowFocus();\r\n    }\r\n}\r\n\r\n// IMGUI_API float         GetScrollX();                                                       // get scrolling amount [0..GetScrollMaxX()]\r\nexport function GetScrollX(): number { return bind.GetScrollX(); }\r\n// IMGUI_API float         GetScrollY();                                                       // get scrolling amount [0..GetScrollMaxY()]\r\nexport function GetScrollY(): number { return bind.GetScrollY(); }\r\n// IMGUI_API float         GetScrollMaxX();                                                    // get maximum scrolling amount ~~ ContentSize.X - WindowSize.X\r\nexport function GetScrollMaxX(): number { return bind.GetScrollMaxX(); }\r\n// IMGUI_API float         GetScrollMaxY();                                                    // get maximum scrolling amount ~~ ContentSize.Y - WindowSize.Y\r\nexport function GetScrollMaxY(): number { return bind.GetScrollMaxY(); }\r\n// IMGUI_API void          SetScrollX(float scroll_x);                                         // set scrolling amount [0..GetScrollMaxX()]\r\nexport function SetScrollX(scroll_x: number): void { bind.SetScrollX(scroll_x); }\r\n// IMGUI_API void          SetScrollY(float scroll_y);                                         // set scrolling amount [0..GetScrollMaxY()]\r\nexport function SetScrollY(scroll_y: number): void { bind.SetScrollY(scroll_y); }\r\n// IMGUI_API void          SetScrollHereY(float center_y_ratio = 0.5f);                         // adjust scrolling amount to make current cursor position visible. center_y_ratio=0.0: top, 0.5: center, 1.0: bottom. When using to make a \"default/current item\" visible, consider using SetItemDefaultFocus() instead.\r\nexport function SetScrollHereY(center_y_ratio: number = 0.5): void {\r\n    bind.SetScrollHereY(center_y_ratio);\r\n}\r\n// IMGUI_API void          SetScrollFromPosY(float pos_y, float center_y_ratio = 0.5f);        // adjust scrolling amount to make given position valid. use GetCursorPos() or GetCursorStartPos()+offset to get valid positions.\r\nexport function SetScrollFromPosY(pos_y: number, center_y_ratio: number = 0.5): void {\r\n    bind.SetScrollFromPosY(pos_y, center_y_ratio);\r\n}\r\n// IMGUI_API void          SetStateStorage(ImGuiStorage* tree);                                // replace tree state storage with our own (if you want to manipulate it yourself, typically clear subsection of it)\r\n// IMGUI_API ImGuiStorage* GetStateStorage();\r\n\r\n// Parameters stacks (shared)\r\n// IMGUI_API void          PushFont(ImFont* font);                                             // use NULL as a shortcut to push default font\r\nexport function PushFont(font: ImFont | null): void { bind.PushFont(font ? font.native : null); }\r\n// IMGUI_API void          PopFont();\r\nexport function PopFont(): void { bind.PopFont(); }\r\n// IMGUI_API void          PushStyleColor(ImGuiCol idx, ImU32 col);\r\n// IMGUI_API void          PushStyleColor(ImGuiCol idx, const ImVec4& col);\r\nexport function PushStyleColor(idx: ImGuiCol, col: Bind.ImU32 | Readonly<Bind.interface_ImVec4> | Readonly<ImColor>): void {\r\n    if (col instanceof ImColor) {\r\n        bind.PushStyleColor(idx, col.Value);\r\n    } else {\r\n        bind.PushStyleColor(idx, col as (Bind.ImU32 | Readonly<Bind.interface_ImVec4>));\r\n    }\r\n}\r\n// IMGUI_API void          PopStyleColor(int count = 1);\r\nexport function PopStyleColor(count: number = 1): void {\r\n    bind.PopStyleColor(count);\r\n}\r\n// IMGUI_API void          PushStyleVar(ImGuiStyleVar idx, float val);\r\n// IMGUI_API void          PushStyleVar(ImGuiStyleVar idx, const ImVec2& val);\r\nexport function PushStyleVar(idx: ImGuiStyleVar, val: number | Readonly<Bind.interface_ImVec2>): void {\r\n    bind.PushStyleVar(idx, val);\r\n}\r\n// IMGUI_API void          PopStyleVar(int count = 1);\r\nexport function PopStyleVar(count: number = 1): void {\r\n    bind.PopStyleVar(count);\r\n}\r\n// IMGUI_API const ImVec4& GetStyleColorVec4(ImGuiCol idx);                                    // retrieve style color as stored in ImGuiStyle structure. use to feed back into PushStyleColor(), otherwhise use GetColorU32() to get style color + style alpha.\r\nexport function GetStyleColorVec4(idx: ImGuiCol): Readonly<Bind.reference_ImVec4> {\r\n    return bind.GetStyleColorVec4(idx);\r\n}\r\n// IMGUI_API ImFont*       GetFont();                                                          // get current font\r\nexport function GetFont(): ImFont {\r\n    return new ImFont(bind.GetFont());\r\n}\r\n// IMGUI_API float         GetFontSize();                                                      // get current font size (= height in pixels) of current font with current scale applied\r\nexport function GetFontSize(): number { return bind.GetFontSize(); }\r\n// IMGUI_API ImVec2        GetFontTexUvWhitePixel();                                           // get UV coordinate for a while pixel, useful to draw custom shapes via the ImDrawList API\r\nexport function GetFontTexUvWhitePixel(out: Bind.interface_ImVec2 = new ImVec2()): typeof out {\r\n    return bind.GetFontTexUvWhitePixel(out);\r\n}\r\n// IMGUI_API ImU32         GetColorU32(ImGuiCol idx, float alpha_mul = 1.0f);                  // retrieve given style color with style alpha applied and optional extra alpha multiplier\r\n// IMGUI_API ImU32         GetColorU32(const ImVec4& col);                                     // retrieve given color with style alpha applied\r\n// IMGUI_API ImU32         GetColorU32(ImU32 col);                                             // retrieve given color with style alpha applied\r\nexport function GetColorU32(idx: ImGuiCol, alpha_mul?: number): Bind.ImU32;\r\nexport function GetColorU32(col: Readonly<Bind.reference_ImVec4>): Bind.ImU32;\r\nexport function GetColorU32(col: Bind.ImU32): Bind.ImU32;\r\nexport function GetColorU32(...args: any[]): Bind.ImU32 {\r\n    if (args.length === 1) {\r\n        if (typeof(args[0]) === \"number\") {\r\n            // TODO: ImGuiCol or ImU32\r\n            const idx: ImGuiCol = args[0];\r\n            return bind.GetColorU32_A(idx, 1.0);\r\n        } else {\r\n            const col: Readonly<Bind.reference_ImVec4> = args[0];\r\n            return bind.GetColorU32_B(col);\r\n        }\r\n    } else {\r\n        const idx: ImGuiCol = args[0];\r\n        const alpha_mul: number = args[1];\r\n        return bind.GetColorU32_A(idx, alpha_mul);\r\n    }\r\n}\r\n\r\n// Parameters stacks (current window)\r\n// IMGUI_API void          PushItemWidth(float item_width);                                    // width of items for the common item+label case, pixels. 0.0f = default to ~2/3 of windows width, >0.0f: width in pixels, <0.0f align xx pixels to the right of window (so -1.0f always align width to the right side)\r\nexport function PushItemWidth(item_width: number): void { bind.PushItemWidth(item_width); }\r\n// IMGUI_API void          PopItemWidth();\r\nexport function PopItemWidth(): void { bind.PopItemWidth(); }\r\n// IMGUI_API float         CalcItemWidth();                                                    // width of item given pushed settings and current cursor position\r\nexport function CalcItemWidth(): number { return bind.CalcItemWidth(); }\r\n// IMGUI_API void          PushTextWrapPos(float wrap_pos_x = 0.0f);                           // word-wrapping for Text*() commands. < 0.0f: no wrapping; 0.0f: wrap to end of window (or column); > 0.0f: wrap at 'wrap_pos_x' position in window local space\r\nexport function PushTextWrapPos(wrap_pos_x: number = 0.0): void {\r\n    bind.PushTextWrapPos(wrap_pos_x);\r\n}\r\n// IMGUI_API void          PopTextWrapPos();\r\nexport function PopTextWrapPos(): void { bind.PopTextWrapPos(); }\r\n// IMGUI_API void          PushAllowKeyboardFocus(bool allow_keyboard_focus);                  // allow focusing using TAB/Shift-TAB, enabled by default but you can disable it for certain widgets\r\nexport function PushAllowKeyboardFocus(allow_keyboard_focus: boolean): void { bind.PushAllowKeyboardFocus(allow_keyboard_focus); }\r\n// IMGUI_API void          PopAllowKeyboardFocus();\r\nexport function PopAllowKeyboardFocus(): void { bind.PopAllowKeyboardFocus(); }\r\n// IMGUI_API void          PushButtonRepeat(bool repeat);                                      // in 'repeat' mode, Button*() functions return repeated true in a typematic manner (using io.KeyRepeatDelay/io.KeyRepeatRate setting). Note that you can call IsItemActive() after any Button() to tell if the button is held in the current frame.\r\nexport function PushButtonRepeat(repeat: boolean): void { bind.PushButtonRepeat(repeat); }\r\n// IMGUI_API void          PopButtonRepeat();\r\nexport function PopButtonRepeat(): void { bind.PopButtonRepeat(); }\r\n\r\n// Cursor / Layout\r\n// IMGUI_API void          Separator();                                                        // separator, generally horizontal. inside a menu bar or in horizontal layout mode, this becomes a vertical separator.\r\nexport function Separator(): void { bind.Separator(); }\r\n// IMGUI_API void          SameLine(float pos_x = 0.0f, float spacing_w = -1.0f);              // call between widgets or groups to layout them horizontally\r\nexport function SameLine(pos_x: number = 0.0, spacing_w: number = -1.0): void {\r\n    bind.SameLine(pos_x, spacing_w);\r\n}\r\n// IMGUI_API void          NewLine();                                                          // undo a SameLine()\r\nexport function NewLine(): void { bind.NewLine(); }\r\n// IMGUI_API void          Spacing();                                                          // add vertical spacing\r\nexport function Spacing(): void { bind.Spacing(); }\r\n// IMGUI_API void          Dummy(const ImVec2& size);                                          // add a dummy item of given size\r\nexport function Dummy(size: Readonly<Bind.interface_ImVec2>): void { bind.Dummy(size); }\r\n// IMGUI_API void          Indent(float indent_w = 0.0f);                                      // move content position toward the right, by style.IndentSpacing or indent_w if != 0\r\nexport function Indent(indent_w: number = 0.0) { bind.Indent(indent_w); }\r\n// IMGUI_API void          Unindent(float indent_w = 0.0f);                                    // move content position back to the left, by style.IndentSpacing or indent_w if != 0\r\nexport function Unindent(indent_w: number = 0.0) { bind.Unindent(indent_w); }\r\n// IMGUI_API void          BeginGroup();                                                       // lock horizontal starting position + capture group bounding box into one \"item\" (so you can use IsItemHovered() or layout primitives such as SameLine() on whole group, etc.)\r\nexport function BeginGroup(): void { bind.BeginGroup(); }\r\n// IMGUI_API void          EndGroup();\r\nexport function EndGroup(): void { bind.EndGroup(); }\r\n// IMGUI_API ImVec2        GetCursorPos();                                                     // cursor position is relative to window position\r\nexport function GetCursorPos(out: Bind.interface_ImVec2 = new ImVec2()): typeof out { return bind.GetCursorPos(out); }\r\n// IMGUI_API float         GetCursorPosX();                                                    // \"\r\nexport function GetCursorPosX(): number { return bind.GetCursorPosX(); }\r\n// IMGUI_API float         GetCursorPosY();                                                    // \"\r\nexport function GetCursorPosY(): number { return bind.GetCursorPosY(); }\r\n// IMGUI_API void          SetCursorPos(const ImVec2& local_pos);                              // \"\r\nexport function SetCursorPos(local_pos: Readonly<Bind.interface_ImVec2>): void { bind.SetCursorPos(local_pos); }\r\n// IMGUI_API void          SetCursorPosX(float x);                                             // \"\r\nexport function SetCursorPosX(x: number): void { bind.SetCursorPosX(x); }\r\n// IMGUI_API void          SetCursorPosY(float y);                                             // \"\r\nexport function SetCursorPosY(y: number): void { bind.SetCursorPosY(y); }\r\n// IMGUI_API ImVec2        GetCursorStartPos();                                                // initial cursor position\r\nexport function GetCursorStartPos(out: Bind.interface_ImVec2 = new ImVec2()): typeof out { return bind.GetCursorStartPos(out); }\r\n// IMGUI_API ImVec2        GetCursorScreenPos();                                               // cursor position in absolute screen coordinates [0..io.DisplaySize] (useful to work with ImDrawList API)\r\nexport function GetCursorScreenPos(out: Bind.interface_ImVec2 = new ImVec2()): typeof out { return bind.GetCursorScreenPos(out); }\r\n// IMGUI_API void          SetCursorScreenPos(const ImVec2& pos);                              // cursor position in absolute screen coordinates [0..io.DisplaySize]\r\nexport function SetCursorScreenPos(pos: Readonly<Bind.interface_ImVec2>): void { bind.SetCursorScreenPos(pos); }\r\n// IMGUI_API void          AlignTextToFramePadding();                                          // vertically align/lower upcoming text to FramePadding.y so that it will aligns to upcoming widgets (call if you have text on a line before regular widgets)\r\nexport function AlignTextToFramePadding(): void { bind.AlignTextToFramePadding(); }\r\n// IMGUI_API float         GetTextLineHeight();                                                // ~ FontSize\r\nexport function GetTextLineHeight(): number { return bind.GetTextLineHeight(); }\r\n// IMGUI_API float         GetTextLineHeightWithSpacing();                                     // ~ FontSize + style.ItemSpacing.y (distance in pixels between 2 consecutive lines of text)\r\nexport function GetTextLineHeightWithSpacing(): number { return bind.GetTextLineHeightWithSpacing(); }\r\n// IMGUI_API float         GetFrameHeight();                                                   // ~ FontSize + style.FramePadding.y * 2\r\nexport function GetFrameHeight(): number { return bind.GetFrameHeight(); }\r\n// IMGUI_API float         GetFrameHeightWithSpacing();                                        // ~ FontSize + style.FramePadding.y * 2 + style.ItemSpacing.y (distance in pixels between 2 consecutive lines of framed widgets)\r\nexport function GetFrameHeightWithSpacing(): number { return bind.GetFrameHeightWithSpacing(); }\r\n\r\n// Columns\r\n// You can also use SameLine(pos_x) for simplified columns. The columns API is still work-in-progress and rather lacking.\r\n// IMGUI_API void          Columns(int count = 1, const char* id = NULL, bool border = true);\r\nexport function Columns(count: number = 1, id: string | null = null, border: boolean = true): void {\r\n    id = id || \"\";\r\n    bind.Columns(count, id, border);\r\n}\r\n// IMGUI_API void          NextColumn();                                                       // next column, defaults to current row or next row if the current row is finished\r\nexport function NextColumn(): void { bind.NextColumn(); }\r\n// IMGUI_API int           GetColumnIndex();                                                   // get current column index\r\nexport function GetColumnIndex(): number { return bind.GetColumnIndex(); }\r\n// IMGUI_API float         GetColumnWidth(int column_index = -1);                              // get column width (in pixels). pass -1 to use current column\r\nexport function GetColumnWidth(column_index: number = -1): number {\r\n    return bind.GetColumnWidth(column_index);\r\n}\r\n// IMGUI_API void          SetColumnWidth(int column_index, float width);                      // set column width (in pixels). pass -1 to use current column\r\nexport function SetColumnWidth(column_index: number, width: number): void { bind.SetColumnWidth(column_index, width); }\r\n// IMGUI_API float         GetColumnOffset(int column_index = -1);                             // get position of column line (in pixels, from the left side of the contents region). pass -1 to use current column, otherwise 0..GetColumnsCount() inclusive. column 0 is typically 0.0f\r\nexport function GetColumnOffset(column_index: number = -1): number {\r\n    return bind.GetColumnOffset(column_index);\r\n}\r\n// IMGUI_API void          SetColumnOffset(int column_index, float offset_x);                  // set position of column line (in pixels, from the left side of the contents region). pass -1 to use current column\r\nexport function SetColumnOffset(column_index: number, offset_x: number): void { bind.SetColumnOffset(column_index, offset_x); }\r\n// IMGUI_API int           GetColumnsCount();\r\nexport function GetColumnsCount(): number { return bind.GetColumnsCount(); }\r\n\r\n// ID scopes\r\n// If you are creating widgets in a loop you most likely want to push a unique identifier (e.g. object pointer, loop index) so ImGui can differentiate them.\r\n// You can also use the \"##foobar\" syntax within widget label to distinguish them from each others. Read \"A primer on the use of labels/IDs\" in the FAQ for more details.\r\n// IMGUI_API void          PushID(const char* str_id);                                         // push identifier into the ID stack. IDs are hash of the entire stack!\r\n// IMGUI_API void          PushID(const char* str_id_begin, const char* str_id_end);\r\n// IMGUI_API void          PushID(const void* ptr_id);\r\n// IMGUI_API void          PushID(int int_id);\r\nexport function PushID(id: string | number): void { bind.PushID(id); }\r\n// IMGUI_API void          PopID();\r\nexport function PopID(): void { bind.PopID(); }\r\n// IMGUI_API ImGuiID       GetID(const char* str_id);                                          // calculate unique ID (hash of whole ID stack + given parameter). e.g. if you want to query into ImGuiStorage yourself\r\n// IMGUI_API ImGuiID       GetID(const char* str_id_begin, const char* str_id_end);\r\n// IMGUI_API ImGuiID       GetID(const void* ptr_id);\r\nexport function GetID(id: string | number): Bind.ImGuiID { return bind.GetID(id); }\r\n\r\n// Widgets: Text\r\n// IMGUI_API void          TextUnformatted(const char* text, const char* text_end = NULL);               // raw text without formatting. Roughly equivalent to Text(\"%s\", text) but: A) doesn't require null terminated string if 'text_end' is specified, B) it's faster, no memory copy is done, no buffer size limits, recommended for long chunks of text.\r\nexport function TextUnformatted(text: string, text_end: number | null = null): void { bind.TextUnformatted(text_end !== null ? text.substring(0, text_end) : text); }\r\n// IMGUI_API void          Text(const char* fmt, ...)                                     IM_FMTARGS(1); // simple formatted text\r\n// IMGUI_API void          TextV(const char* fmt, va_list args)                           IM_FMTLIST(1);\r\nexport function Text(fmt: string/*, ...args: any[]*/): void { bind.Text(fmt/*, ...args*/); }\r\n// IMGUI_API void          TextColored(const ImVec4& col, const char* fmt, ...)           IM_FMTARGS(2); // shortcut for PushStyleColor(ImGuiCol_Text, col); Text(fmt, ...); PopStyleColor();\r\n// IMGUI_API void          TextColoredV(const ImVec4& col, const char* fmt, va_list args) IM_FMTLIST(2);\r\nexport function TextColored(col: Readonly<Bind.interface_ImVec4> | Readonly<ImColor>, fmt: string/*, ...args: any[]*/): void {\r\n    bind.TextColored((col instanceof ImColor) ? col.Value : col as Readonly<Bind.interface_ImVec4>, fmt/*, ...args*/);\r\n}\r\n// IMGUI_API void          TextDisabled(const char* fmt, ...)                             IM_FMTARGS(1); // shortcut for PushStyleColor(ImGuiCol_Text, style.Colors[ImGuiCol_TextDisabled]); Text(fmt, ...); PopStyleColor();\r\n// IMGUI_API void          TextDisabledV(const char* fmt, va_list args)                   IM_FMTLIST(1);\r\nexport function TextDisabled(fmt: string/*, ...args: any[]*/): void { bind.TextDisabled(fmt/*, ...args*/); }\r\n// IMGUI_API void          TextWrapped(const char* fmt, ...)                              IM_FMTARGS(1); // shortcut for PushTextWrapPos(0.0f); Text(fmt, ...); PopTextWrapPos();. Note that this won't work on an auto-resizing window if there's no other widgets to extend the window width, yoy may need to set a size using SetNextWindowSize().\r\n// IMGUI_API void          TextWrappedV(const char* fmt, va_list args)                    IM_FMTLIST(1);\r\nexport function TextWrapped(fmt: string/*, ...args: any[]*/): void { bind.TextWrapped(fmt/*, ...args*/); }\r\n// IMGUI_API void          LabelText(const char* label, const char* fmt, ...)             IM_FMTARGS(2); // display text+label aligned the same way as value+label widgets\r\n// IMGUI_API void          LabelTextV(const char* label, const char* fmt, va_list args)   IM_FMTLIST(2);\r\nexport function LabelText(label: string, fmt: string/*, ...args: any[]*/): void { bind.LabelText(label, fmt/*, ...args*/); }\r\n// IMGUI_API void          BulletText(const char* fmt, ...)                               IM_FMTARGS(1); // shortcut for Bullet()+Text()\r\n// IMGUI_API void          BulletTextV(const char* fmt, va_list args)                     IM_FMTLIST(1);\r\nexport function BulletText(fmt: string/*, ...args: any[]*/): void { bind.BulletText(fmt/*, ...args*/); }\r\n// IMGUI_API void          Bullet();                                                                     // draw a small circle and keep the cursor on the same line. advance cursor x position by GetTreeNodeToLabelSpacing(), same distance that TreeNode() uses\r\nexport function Bullet(): void { bind.Bullet(); }\r\n\r\n// Widgets: Main\r\n// IMGUI_API bool          Button(const char* label, const ImVec2& size = ImVec2(0,0));            // button\r\nexport function Button(label: string, size: Readonly<Bind.interface_ImVec2> = ImVec2.ZERO): boolean {\r\n    return bind.Button(label, size);\r\n}\r\n// IMGUI_API bool          SmallButton(const char* label);                                         // button with FramePadding=(0,0) to easily embed within text\r\nexport function SmallButton(label: string): boolean { return bind.SmallButton(label); }\r\n// IMGUI_API bool          ArrowButton(const char* str_id, ImGuiDir dir);                  // square button with an arrow shape\r\nexport function ArrowButton(str_id: string, dir: ImGuiDir): boolean { return bind.ArrowButton(str_id, dir); }\r\n// IMGUI_API bool          InvisibleButton(const char* str_id, const ImVec2& size);                // button behavior without the visuals, useful to build custom behaviors using the public api (along with IsItemActive, IsItemHovered, etc.)\r\nexport function InvisibleButton(str_id: string, size: Readonly<Bind.interface_ImVec2>): boolean {\r\n    return bind.InvisibleButton(str_id, size);\r\n}\r\n// IMGUI_API void          Image(ImTextureID user_texture_id, const ImVec2& size, const ImVec2& uv0 = ImVec2(0,0), const ImVec2& uv1 = ImVec2(1,1), const ImVec4& tint_col = ImVec4(1,1,1,1), const ImVec4& border_col = ImVec4(0,0,0,0));\r\nexport function Image(user_texture_id: ImTextureID | null, size: Readonly<Bind.interface_ImVec2>, uv0: Readonly<Bind.interface_ImVec2> = ImVec2.ZERO, uv1: Readonly<Bind.interface_ImVec2> = ImVec2.UNIT, tint_col: Readonly<Bind.interface_ImVec4> = ImVec4.WHITE, border_col: Readonly<Bind.interface_ImVec4> = ImVec4.ZERO): void {\r\n    bind.Image(ImGuiContext.setTexture(user_texture_id), size, uv0, uv1, tint_col, border_col);\r\n}\r\n// IMGUI_API bool          ImageButton(ImTextureID user_texture_id, const ImVec2& size, const ImVec2& uv0 = ImVec2(0,0),  const ImVec2& uv1 = ImVec2(1,1), int frame_padding = -1, const ImVec4& bg_col = ImVec4(0,0,0,0), const ImVec4& tint_col = ImVec4(1,1,1,1));    // <0 frame_padding uses default frame padding settings. 0 for no padding\r\nexport function ImageButton(user_texture_id: ImTextureID | null, size: Readonly<Bind.interface_ImVec2>, uv0: Readonly<Bind.interface_ImVec2> = ImVec2.ZERO, uv1: Readonly<Bind.interface_ImVec2> = ImVec2.UNIT, frame_padding: number = -1, bg_col: Readonly<Bind.interface_ImVec4> = ImVec4.ZERO, tint_col: Readonly<Bind.interface_ImVec4> = ImVec4.WHITE): boolean {\r\n    return bind.ImageButton(ImGuiContext.setTexture(user_texture_id), size, uv0, uv1, frame_padding, bg_col, tint_col);\r\n}\r\n// IMGUI_API bool          Checkbox(const char* label, bool* v);\r\nexport function Checkbox(label: string, v: Bind.ImScalar<boolean> | Bind.ImAccess<boolean>): boolean {\r\n    if (Array.isArray(v)) {\r\n        return bind.Checkbox(label, v);\r\n    } else {\r\n        const ref_v: Bind.ImScalar<boolean> = [ v() ];\r\n        const ret = bind.Checkbox(label, ref_v);\r\n        v(ref_v[0]);\r\n        return ret;\r\n    }\r\n}\r\n// IMGUI_API bool          CheckboxFlags(const char* label, unsigned int* flags, unsigned int flags_value);\r\nexport function CheckboxFlags(label: string, flags: Bind.ImAccess<number> | Bind.ImScalar<number>, flags_value: number): boolean {\r\n    if (Array.isArray(flags)) {\r\n        return bind.CheckboxFlags(label, flags, flags_value);\r\n    } else {\r\n        const ref_flags: Bind.ImScalar<number> = [ flags() ];\r\n        const ret = bind.CheckboxFlags(label, ref_flags, flags_value);\r\n        flags(ref_flags[0]);\r\n        return ret;\r\n    }\r\n}\r\n// IMGUI_API bool          RadioButton(const char* label, bool active);\r\n// IMGUI_API bool          RadioButton(const char* label, int* v, int v_button);\r\nexport function RadioButton(label: string, active: boolean): boolean;\r\nexport function RadioButton(label: string, v: Bind.ImAccess<number> | Bind.ImScalar<number>, v_button: number): boolean;\r\nexport function RadioButton(label: string, ...args: any[]): boolean {\r\n    if (typeof(args[0]) === \"boolean\") {\r\n        const active: boolean = args[0];\r\n        return bind.RadioButton_A(label, active);\r\n    } else {\r\n        const v: Bind.ImAccess<number> | Bind.ImScalar<number> = args[0];\r\n        const v_button: number = args[1];\r\n        const _v: Bind.ImScalar<number> = Array.isArray(v) ? v : [ v() ];\r\n        const ret = bind.RadioButton_B(label, _v, v_button);\r\n        if (!Array.isArray(v)) { v(_v[0]); }\r\n        return ret;\r\n    }\r\n}\r\n// IMGUI_API void          PlotLines(const char* label, const float* values, int values_count, int values_offset = 0, const char* overlay_text = NULL, float scale_min = FLT_MAX, float scale_max = FLT_MAX, ImVec2 graph_size = ImVec2(0,0), int stride = sizeof(float));\r\n// IMGUI_API void          PlotLines(const char* label, float (*values_getter)(void* data, int idx), void* data, int values_count, int values_offset = 0, const char* overlay_text = NULL, float scale_min = FLT_MAX, float scale_max = FLT_MAX, ImVec2 graph_size = ImVec2(0,0));\r\nexport type PlotLinesValueGetter = (data: any, idx: number) => number;\r\nexport function PlotLines(label: string, values: ArrayLike<number>, values_count?: number, value_offset?: number, overlay_text?: string | null, scale_min?: number, scale_max?: number, graph_size?: Readonly<Bind.interface_ImVec2>, stride?: number): void;\r\nexport function PlotLines(label: string, values_getter: PlotLinesValueGetter, data: any, values_count?: number, value_offset?: number, overlay_text?: string | null, scale_min?: number, scale_max?: number, graph_size?: Readonly<Bind.interface_ImVec2>): void;\r\nexport function PlotLines(label: string, ...args: any[]): void {\r\n    if (Array.isArray(args[0])) {\r\n        const values: ArrayLike<number> = args[0];\r\n        const values_getter: PlotLinesValueGetter = (data: any, idx: number): number => values[idx * stride];\r\n        const values_count: number = typeof(args[1]) === \"number\" ? args[1] : values.length;\r\n        const values_offset: number = typeof(args[2]) === \"number\" ? args[2] : 0;\r\n        const overlay_text: string | null = typeof(args[3]) === \"string\" ? args[3] : null;\r\n        const scale_min: number = typeof(args[4]) === \"number\" ? args[4] : Number.MAX_VALUE;\r\n        const scale_max: number = typeof(args[5]) === \"number\" ? args[5] : Number.MAX_VALUE;\r\n        const graph_size: Readonly<Bind.interface_ImVec2> = args[6] || ImVec2.ZERO;\r\n        const stride: number = typeof(args[7]) === \"number\" ? args[7] : 1;\r\n        bind.PlotLines(label, values_getter, null, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size);\r\n    } else {\r\n        const values_getter: PlotLinesValueGetter = args[0];\r\n        const data: any = args[1];\r\n        const values_count: number = args[2];\r\n        const values_offset: number = typeof(args[3]) === \"number\" ? args[3] : 0;\r\n        const overlay_text: string | null = typeof(args[4]) === \"string\" ? args[4] : null;\r\n        const scale_min: number = typeof(args[5]) === \"number\" ? args[5] : Number.MAX_VALUE;\r\n        const scale_max: number = typeof(args[6]) === \"number\" ? args[6] : Number.MAX_VALUE;\r\n        const graph_size: Readonly<Bind.interface_ImVec2> = args[7] || ImVec2.ZERO;\r\n        bind.PlotLines(label, values_getter, data, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size);\r\n    }\r\n}\r\n// IMGUI_API void          PlotHistogram(const char* label, const float* values, int values_count, int values_offset = 0, const char* overlay_text = NULL, float scale_min = FLT_MAX, float scale_max = FLT_MAX, ImVec2 graph_size = ImVec2(0,0), int stride = sizeof(float));\r\n// IMGUI_API void          PlotHistogram(const char* label, float (*values_getter)(void* data, int idx), void* data, int values_count, int values_offset = 0, const char* overlay_text = NULL, float scale_min = FLT_MAX, float scale_max = FLT_MAX, ImVec2 graph_size = ImVec2(0,0));\r\nexport type PlotHistogramValueGetter = (data: any, idx: number) => number;\r\nexport function PlotHistogram(label: string, values: ArrayLike<number>, values_count?: number, value_offset?: number, overlay_text?: string | null, scale_min?: number, scale_max?: number, graph_size?: Readonly<Bind.interface_ImVec2>, stride?: number): void;\r\nexport function PlotHistogram(label: string, values_getter: PlotHistogramValueGetter, data: any, values_count?: number, value_offset?: number, overlay_text?: string | null, scale_min?: number, scale_max?: number, graph_size?: Readonly<Bind.interface_ImVec2>): void;\r\nexport function PlotHistogram(label: string, ...args: any[]): void {\r\n    if (Array.isArray(args[0])) {\r\n        const values: ArrayLike<number> = args[0];\r\n        const values_getter: PlotHistogramValueGetter = (data: any, idx: number): number => values[idx * stride];\r\n        const values_count: number = typeof(args[1]) === \"number\" ? args[1] : values.length;\r\n        const values_offset: number = typeof(args[2]) === \"number\" ? args[2] : 0;\r\n        const overlay_text: string | null = typeof(args[3]) === \"string\" ? args[3] : null;\r\n        const scale_min: number = typeof(args[4]) === \"number\" ? args[4] : Number.MAX_VALUE;\r\n        const scale_max: number = typeof(args[5]) === \"number\" ? args[5] : Number.MAX_VALUE;\r\n        const graph_size: Readonly<Bind.interface_ImVec2> = args[6] || ImVec2.ZERO;\r\n        const stride: number = typeof(args[7]) === \"number\" ? args[7] : 1;\r\n        bind.PlotHistogram(label, values_getter, null, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size);\r\n    } else {\r\n        const values_getter: PlotHistogramValueGetter = args[0];\r\n        const data: any = args[1];\r\n        const values_count: number = args[2];\r\n        const values_offset: number = typeof(args[3]) === \"number\" ? args[3] : 0;\r\n        const overlay_text: string | null = typeof(args[4]) === \"string\" ? args[4] : null;\r\n        const scale_min: number = typeof(args[5]) === \"number\" ? args[5] : Number.MAX_VALUE;\r\n        const scale_max: number = typeof(args[6]) === \"number\" ? args[6] : Number.MAX_VALUE;\r\n        const graph_size: Readonly<Bind.interface_ImVec2> = args[7] || ImVec2.ZERO;\r\n        bind.PlotHistogram(label, values_getter, data, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size);\r\n    }\r\n}\r\n// IMGUI_API void          ProgressBar(float fraction, const ImVec2& size_arg = ImVec2(-1,0), const char* overlay = NULL);\r\nexport function ProgressBar(fraction: number, size_arg: Readonly<Bind.interface_ImVec2> = new ImVec2(-1, 0), overlay: string | null = null): void {\r\n    bind.ProgressBar(fraction, size_arg, overlay);\r\n}\r\n\r\n// Widgets: Combo Box\r\n// The new BeginCombo()/EndCombo() api allows you to manage your contents and selection state however you want it.\r\n// The old Combo() api are helpers over BeginCombo()/EndCombo() which are kept available for convenience purpose.\r\n// IMGUI_API bool          BeginCombo(const char* label, const char* preview_value, ImGuiComboFlags flags = 0);\r\nexport function BeginCombo(label: string, preview_value: string | null = null, flags: ImGuiComboFlags = 0): boolean {\r\n    return bind.BeginCombo(label, preview_value, flags);\r\n}\r\n// IMGUI_API void          EndCombo();\r\nexport function EndCombo(): void { bind.EndCombo(); }\r\n// IMGUI_API bool          Combo(const char* label, int* current_item, const char* const items[], int items_count, int popup_max_height_in_items = -1);\r\n// IMGUI_API bool          Combo(const char* label, int* current_item, const char* items_separated_by_zeros, int popup_max_height_in_items = -1);      // Separate items with \\0 within a string, end item-list with \\0\\0. e.g. \"One\\0Two\\0Three\\0\"\r\n// IMGUI_API bool          Combo(const char* label, int* current_item, bool(*items_getter)(void* data, int idx, const char** out_text), void* data, int items_count, int popup_max_height_in_items = -1);\r\nexport type ComboValueGetter = (data: any, idx: number, out_text: [string]) => boolean;\r\nexport function Combo(label: string, current_item: Bind.ImAccess<number> | Bind.ImScalar<number>, items: string[], items_count?: number, popup_max_height_in_items?: number): boolean;\r\nexport function Combo(label: string, current_item: Bind.ImAccess<number> | Bind.ImScalar<number>, items_separated_by_zeros: string, popup_max_height_in_items?: number): boolean;\r\nexport function Combo(label: string, current_item: Bind.ImAccess<number> | Bind.ImScalar<number>, items_getter: ComboValueGetter, data: any, items_count: number, popup_max_height_in_items?: number): boolean;\r\nexport function Combo(label: string, current_item: Bind.ImAccess<number> | Bind.ImScalar<number>, ...args: any[]): boolean {\r\n    let ret = false;\r\n    const _current_item: Bind.ImScalar<number> = Array.isArray(current_item) ? current_item : [ current_item() ];\r\n    if (Array.isArray(args[0])) {\r\n        const items: string[] = args[0];\r\n        const items_count = typeof(args[1]) === \"number\" ? args[1] : items.length;\r\n        const popup_max_height_in_items: number = typeof(args[2]) === \"number\" ? args[2] : -1;\r\n        const items_getter = (data: any, idx: number, out_text: [string]): boolean => { out_text[0] = items[idx]; return true; };\r\n        ret = bind.Combo(label, _current_item, items_getter, null, items_count, popup_max_height_in_items);\r\n    } else if (typeof(args[0]) === \"string\") {\r\n        const items_separated_by_zeros: string = args[0]\r\n        const popup_max_height_in_items: number = typeof(args[1]) === \"number\" ? args[1] : -1;\r\n        const items: string[] = items_separated_by_zeros.replace(/^\\0+|\\0+$/g, \"\").split(\"\\0\");\r\n        const items_count: number = items.length;\r\n        const items_getter = (data: any, idx: number, out_text: [string]): boolean => { out_text[0] = items[idx]; return true; };\r\n        ret = bind.Combo(label, _current_item, items_getter, null, items_count, popup_max_height_in_items);\r\n    } else {\r\n        const items_getter: (data: any, idx: number, out_text: [string]) => boolean = args[0];\r\n        const data: any = args[1];\r\n        const items_count = args[2];\r\n        const popup_max_height_in_items: number = typeof(args[3]) === \"number\" ? args[3] : -1;\r\n        ret = bind.Combo(label, _current_item, items_getter, data, items_count, popup_max_height_in_items);\r\n    }\r\n    if (!Array.isArray(current_item)) { current_item(_current_item[0]); }\r\n    return ret;\r\n}\r\n\r\n// Widgets: Drags (tip: ctrl+click on a drag box to input with keyboard. manually input values aren't clamped, can go off-bounds)\r\n// For all the Float2/Float3/Float4/Int2/Int3/Int4 versions of every functions, note that a 'float v[X]' function argument is the same as 'float* v', the array syntax is just a way to document the number of elements that are expected to be accessible. You can pass address of your first element out of a contiguous set, e.g. &myvector.x\r\n// IMGUI_API bool          DragFloat(const char* label, float* v, float v_speed = 1.0f, float v_min = 0.0f, float v_max = 0.0f, const char* display_format = \"%.3f\", float power = 1.0f);     // If v_min >= v_max we have no bound\r\nexport function DragFloat(label: string, v: Bind.ImAccess<number> | Bind.ImScalar<number> | XY | XYZ | XYZW | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number>, v_speed: number = 1.0, v_min: number = 0.0, v_max: number = 0.0, display_format: string | null = \"%.3f\", power: number = 1.0): boolean {\r\n    const _v = import_Scalar(v);\r\n    const ret = bind.DragFloat(label, _v, v_speed, v_min, v_max, display_format, power);\r\n    export_Scalar(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          DragFloat2(const char* label, float v[2], float v_speed = 1.0f, float v_min = 0.0f, float v_max = 0.0f, const char* display_format = \"%.3f\", float power = 1.0f);\r\nexport function DragFloat2(label: string, v: XY | XYZ | XYZW | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number> | ImVec2, v_speed: number = 1.0, v_min: number = 0.0, v_max: number = 0.0, display_format: string = \"%.3f\", power: number = 1.0): boolean {\r\n    const _v = import_Vector2(v);\r\n    const ret = bind.DragFloat2(label, _v, v_speed, v_min, v_max, display_format, power);\r\n    export_Vector2(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          DragFloat3(const char* label, float v[3], float v_speed = 1.0f, float v_min = 0.0f, float v_max = 0.0f, const char* display_format = \"%.3f\", float power = 1.0f);\r\nexport function DragFloat3(label: string, v: XYZ | XYZW | Bind.ImTuple3<number> | Bind.ImTuple4<number>, v_speed: number = 1.0, v_min: number = 0.0, v_max: number = 0.0, display_format: string = \"%.3f\", power: number = 1.0): boolean {\r\n    const _v = import_Vector3(v);\r\n    const ret = bind.DragFloat3(label, _v, v_speed, v_min, v_max, display_format, power);\r\n    export_Vector3(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          DragFloat4(const char* label, float v[4], float v_speed = 1.0f, float v_min = 0.0f, float v_max = 0.0f, const char* display_format = \"%.3f\", float power = 1.0f);\r\nexport function DragFloat4(label: string, v: XYZW | Bind.ImTuple4<number> | ImVec4, v_speed: number = 1.0, v_min: number = 0.0, v_max: number = 0.0, display_format: string = \"%.3f\", power: number = 1.0): boolean {\r\n    const _v = import_Vector4(v);\r\n    const ret = bind.DragFloat4(label, _v, v_speed, v_min, v_max, display_format, power);\r\n    export_Vector4(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          DragFloatRange2(const char* label, float* v_current_min, float* v_current_max, float v_speed = 1.0f, float v_min = 0.0f, float v_max = 0.0f, const char* display_format = \"%.3f\", const char* display_format_max = NULL, float power = 1.0f);\r\nexport function DragFloatRange2(label: string, v_current_min: Bind.ImAccess<number> | Bind.ImScalar<number> | XY | XYZ | XYZW | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number>, v_current_max: Bind.ImAccess<number> | Bind.ImScalar<number> | XY | XYZ | XYZW | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number>, v_speed: number = 1.0, v_min: number = 0.0, v_max: number = 0.0, display_format: string = \"%.3f\", display_format_max: string | null = null, power: number = 1.0): boolean {\r\n    const _v_current_min = import_Scalar(v_current_min);\r\n    const _v_current_max = import_Scalar(v_current_max);\r\n    const ret = bind.DragFloatRange2(label, _v_current_min, _v_current_max, v_speed, v_min, v_max, display_format, display_format_max, power);\r\n    export_Scalar(_v_current_min, v_current_min);\r\n    export_Scalar(_v_current_max, v_current_max);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          DragInt(const char* label, int* v, float v_speed = 1.0f, int v_min = 0, int v_max = 0, const char* display_format = \"%d\");                                       // If v_min >= v_max we have no bound\r\nexport function DragInt(label: string, v: Bind.ImAccess<number> | Bind.ImScalar<number> | XY | XYZ | XYZW | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number>, v_speed: number = 1.0, v_min: number = 0, v_max: number = 0, format: string = \"%d\"): boolean {\r\n    const _v = import_Scalar(v);\r\n    const ret = bind.DragInt(label, _v, v_speed, v_min, v_max, format);\r\n    export_Scalar(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          DragInt2(const char* label, int v[2], float v_speed = 1.0f, int v_min = 0, int v_max = 0, const char* format = \"%d\");\r\nexport function DragInt2(label: string, v: XY | XYZ | XYZW | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number>, v_speed: number = 1.0, v_min: number = 0, v_max: number = 0, format: string = \"%d\"): boolean {\r\n    const _v = import_Vector2(v);\r\n    const ret = bind.DragInt2(label, _v, v_speed, v_min, v_max, format);\r\n    export_Vector2(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          DragInt3(const char* label, int v[3], float v_speed = 1.0f, int v_min = 0, int v_max = 0, const char* format = \"%d\");\r\nexport function DragInt3(label: string, v: XYZ | XYZW | Bind.ImTuple3<number> | Bind.ImTuple4<number>, v_speed: number = 1.0, v_min: number = 0, v_max: number = 0, format: string = \"%d\"): boolean {\r\n    const _v = import_Vector3(v);\r\n    const ret = bind.DragInt3(label, _v, v_speed, v_min, v_max, format);\r\n    export_Vector3(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          DragInt4(const char* label, int v[4], float v_speed = 1.0f, int v_min = 0, int v_max = 0, const char* format = \"%d\");\r\nexport function DragInt4(label: string, v: XYZW | Bind.ImTuple4<number>, v_speed: number = 1.0, v_min: number = 0, v_max: number = 0, format: string = \"%d\"): boolean {\r\n    const _v = import_Vector4(v);\r\n    const ret = bind.DragInt4(label, _v, v_speed, v_min, v_max, format);\r\n    export_Vector4(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          DragIntRange2(const char* label, int* v_current_min, int* v_current_max, float v_speed = 1.0f, int v_min = 0, int v_max = 0, const char* display_format = \"%.0f\", const char* display_format_max = NULL);\r\nexport function DragIntRange2(label: string, v_current_min: Bind.ImAccess<number> | Bind.ImScalar<number> | XY | XYZ | XYZW | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number>, v_current_max: Bind.ImAccess<number> | Bind.ImScalar<number> | XY | XYZ | XYZW | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number>, v_speed: number = 1.0, v_min: number = 0, v_max: number = 0, format: string = \"%d\", format_max: string | null = null): boolean {\r\n    const _v_current_min = import_Scalar(v_current_min);\r\n    const _v_current_max = import_Scalar(v_current_max);\r\n    const ret = bind.DragIntRange2(label, _v_current_min, _v_current_max, v_speed, v_min, v_max, format, format_max);\r\n    export_Scalar(_v_current_min, v_current_min);\r\n    export_Scalar(_v_current_max, v_current_max);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          DragScalar(const char* label, ImGuiDataType data_type, void* v, float v_speed, const void* v_min = NULL, const void* v_max = NULL, const char* format = NULL, float power = 1.0f);\r\n// IMGUI_API bool          DragScalarN(const char* label, ImGuiDataType data_type, void* v, int components, float v_speed, const void* v_min = NULL, const void* v_max = NULL, const char* format = NULL, float power = 1.0f);\r\nexport function DragScalar(label: string, v: Int32Array | Uint32Array | Float32Array | Float64Array, v_speed: number, v_min: number | null = null, v_max: number | null = null, format: string | null = null, power: number = 1.0): boolean {\r\n    if (v instanceof Int32Array) { return bind.DragScalar(label, ImGuiDataType.S32, v, v_speed, v_min, v_max, format, power); }\r\n    if (v instanceof Uint32Array) { return bind.DragScalar(label, ImGuiDataType.U32, v, v_speed, v_min, v_max, format, power); }\r\n    // if (v instanceof Int64Array) { return bind.DragScalar(label, ImGuiDataType.S64, v, v_speed, v_min, v_max, format, power); }\r\n    // if (v instanceof Uint64Array) { return bind.DragScalar(label, ImGuiDataType.U64, v, v_speed, v_min, v_max, format, power); }\r\n    if (v instanceof Float32Array) { return bind.DragScalar(label, ImGuiDataType.Float, v, v_speed, v_min, v_max, format, power); }\r\n    if (v instanceof Float64Array) { return bind.DragScalar(label, ImGuiDataType.Double, v, v_speed, v_min, v_max, format, power); }\r\n    throw new Error();\r\n}\r\n\r\n// Widgets: Input with Keyboard\r\n// IMGUI_API bool          InputText(const char* label, char* buf, size_t buf_size, ImGuiInputTextFlags flags = 0, ImGuiInputTextCallback callback = NULL, void* user_data = NULL);\r\nexport function InputText(label: string, buf: ImStringBuffer | Bind.ImAccess<string> | Bind.ImScalar<string>, buf_size: number = buf instanceof ImStringBuffer ? buf.size : ImGuiInputTextDefaultSize, flags: ImGuiInputTextFlags = 0, callback: ImGuiInputTextCallback | null = null, user_data: any = null): boolean {\r\n    const _callback = callback && ((data: Bind.reference_ImGuiInputTextCallbackData): number => callback(new ImGuiInputTextCallbackData(data, user_data))) || null;\r\n    if (Array.isArray(buf)) {\r\n        return bind.InputText(label, buf, buf_size, flags, _callback, null);\r\n    } else if (buf instanceof ImStringBuffer) {\r\n        const ref_buf: Bind.ImScalar<string> = [ buf.buffer ];\r\n        const _buf_size: number = Math.min(buf_size, buf.size);\r\n        const ret: boolean = bind.InputText(label, ref_buf, _buf_size, flags, _callback, null);\r\n        buf.buffer = ref_buf[0];\r\n        return ret;\r\n    } else {\r\n        const ref_buf: Bind.ImScalar<string> = [ buf() ];\r\n        const ret: boolean = bind.InputText(label, ref_buf, buf_size, flags, _callback, null);\r\n        buf(ref_buf[0]);\r\n        return ret;\r\n    }\r\n}\r\n// IMGUI_API bool          InputTextMultiline(const char* label, char* buf, size_t buf_size, const ImVec2& size = ImVec2(0,0), ImGuiInputTextFlags flags = 0, ImGuiInputTextCallback callback = NULL, void* user_data = NULL);\r\nexport function InputTextMultiline(label: string, buf: ImStringBuffer | Bind.ImAccess<string> | Bind.ImScalar<string>, buf_size: number = buf instanceof ImStringBuffer ? buf.size : ImGuiInputTextDefaultSize, size: Readonly<Bind.interface_ImVec2> = ImVec2.ZERO, flags: ImGuiInputTextFlags = 0, callback: ImGuiInputTextCallback | null = null, user_data: any = null): boolean {\r\n    const _callback = callback && ((data: Bind.reference_ImGuiInputTextCallbackData): number => callback(new ImGuiInputTextCallbackData(data, user_data))) || null;\r\n    if (Array.isArray(buf)) {\r\n        return bind.InputTextMultiline(label, buf, buf_size, size, flags, _callback, null);\r\n    } else if (buf instanceof ImStringBuffer) {\r\n        const ref_buf: Bind.ImScalar<string> = [ buf.buffer ];\r\n        const _buf_size: number = Math.min(buf_size, buf.size);\r\n        const ret: boolean = bind.InputTextMultiline(label, ref_buf, _buf_size, size, flags, _callback, null);\r\n        buf.buffer = ref_buf[0];\r\n        return ret;\r\n    } else {\r\n        const ref_buf: Bind.ImScalar<string> = [ buf() ];\r\n        const ret: boolean = bind.InputTextMultiline(label, ref_buf, buf_size, size, flags, _callback, null);\r\n        buf(ref_buf[0]);\r\n        return ret;\r\n    }\r\n}\r\n// IMGUI_API bool          InputFloat(const char* label, float* v, float step = 0.0f, float step_fast = 0.0f, const char* format = \"%.3f\", ImGuiInputTextFlags extra_flags = 0);\r\nexport function InputFloat(label: string, v: Bind.ImAccess<number> | Bind.ImScalar<number> | XY | XYZ | XYZW | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number>, step: number = 0.0, step_fast: number = 0.0, format: string = \"%.3f\", extra_flags: ImGuiInputTextFlags = 0): boolean {\r\n    const _v = import_Scalar(v);\r\n    const ret = bind.InputFloat(label, _v, step, step_fast, format, extra_flags);\r\n    export_Scalar(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          InputFloat2(const char* label, float v[2], const char* format = \"%.3f\", ImGuiInputTextFlags extra_flags = 0);\r\nexport function InputFloat2(label: string, v: XY | XYZ | XYZW | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number>, format: string = \"%.3f\", extra_flags: ImGuiInputTextFlags = 0): boolean {\r\n    const _v = import_Vector2(v);\r\n    const ret = bind.InputFloat2(label, _v, format, extra_flags);\r\n    export_Vector2(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          InputFloat3(const char* label, float v[3], const char* format = \"%.3f\", ImGuiInputTextFlags extra_flags = 0);\r\nexport function InputFloat3(label: string, v: XYZ | XYZW | Bind.ImTuple3<number> | Bind.ImTuple4<number>, format: string = \"%.3f\", extra_flags: ImGuiInputTextFlags = 0): boolean {\r\n    const _v = import_Vector3(v);\r\n    const ret = bind.InputFloat3(label, _v, format, extra_flags);\r\n    export_Vector3(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          InputFloat4(const char* label, float v[4], const char* format = \"%.3f\", ImGuiInputTextFlags extra_flags = 0);\r\nexport function InputFloat4(label: string, v: XYZW | Bind.ImTuple4<number>, format: string = \"%.3f\", extra_flags: ImGuiInputTextFlags = 0): boolean {\r\n    const _v = import_Vector4(v);\r\n    const ret = bind.InputFloat4(label, _v, format, extra_flags);\r\n    export_Vector4(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          InputInt(const char* label, int* v, int step = 1, int step_fast = 100, ImGuiInputTextFlags extra_flags = 0);\r\nexport function InputInt(label: string, v: Bind.ImAccess<number> | Bind.ImScalar<number> | XY | XYZ | XYZW | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number>, step: number = 1, step_fast: number = 100, extra_flags: ImGuiInputTextFlags = 0): boolean {\r\n    const _v = import_Scalar(v);\r\n    const ret = bind.InputInt(label, _v, step, step_fast, extra_flags);\r\n    export_Scalar(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          InputInt2(const char* label, int v[2], ImGuiInputTextFlags extra_flags = 0);\r\nexport function InputInt2(label: string, v: XY | XYZ | XYZW | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number>, extra_flags: ImGuiInputTextFlags = 0): boolean {\r\n    const _v = import_Vector2(v);\r\n    const ret = bind.InputInt2(label, _v, extra_flags);\r\n    export_Vector2(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          InputInt3(const char* label, int v[3], ImGuiInputTextFlags extra_flags = 0);\r\nexport function InputInt3(label: string, v: XYZ | XYZW | Bind.ImTuple3<number> | Bind.ImTuple4<number>, extra_flags: ImGuiInputTextFlags = 0): boolean {\r\n    const _v = import_Vector3(v);\r\n    const ret = bind.InputInt3(label, _v, extra_flags);\r\n    export_Vector3(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          InputInt4(const char* label, int v[4], ImGuiInputTextFlags extra_flags = 0);\r\nexport function InputInt4(label: string, v: XYZW | Bind.ImTuple4<number>, extra_flags: ImGuiInputTextFlags = 0): boolean {\r\n    const _v = import_Vector4(v);\r\n    const ret = bind.InputInt4(label, _v, extra_flags);\r\n    export_Vector4(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          InputDouble(const char* label, float* v, float step = 0.0f, float step_fast = 0.0f, const char* format = \"%.6f\", ImGuiInputTextFlags extra_flags = 0);\r\nexport function InputDouble(label: string, v: Bind.ImAccess<number> | Bind.ImScalar<number> | XY | XYZ | XYZW | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number>, step: number = 0.0, step_fast: number = 0.0, format: string = \"%.6f\", extra_flags: ImGuiInputTextFlags = 0): boolean {\r\n    const _v = import_Scalar(v);\r\n    const ret = bind.InputDouble(label, _v, step, step_fast, format, extra_flags);\r\n    export_Scalar(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          InputScalar(const char* label, ImGuiDataType data_type, void* v, const void* step = NULL, const void* step_fast = NULL, const char* format = NULL, ImGuiInputTextFlags extra_flags = 0);\r\n// IMGUI_API bool          InputScalarN(const char* label, ImGuiDataType data_type, void* v, int components, const void* step = NULL, const void* step_fast = NULL, const char* format = NULL, ImGuiInputTextFlags extra_flags = 0);\r\nexport function InputScalar(label: string, v: Int32Array | Uint32Array | Float32Array | Float64Array, step: number | null = null, step_fast: number | null = null, format: string | null = null, extra_flags: ImGuiInputTextFlags = 0): boolean {\r\n    if (v instanceof Int32Array) { return bind.InputScalar(label, ImGuiDataType.S32, v, step, step_fast, format, extra_flags); }\r\n    if (v instanceof Uint32Array) { return bind.InputScalar(label, ImGuiDataType.U32, v, step, step_fast, format, extra_flags); }\r\n    // if (v instanceof Int64Array) { return bind.InputScalar(label, ImGuiDataType.S64, v, step, step_fast, format, extra_flags); }\r\n    // if (v instanceof Uint64Array) { return bind.InputScalar(label, ImGuiDataType.U64, v, step, step_fast, format, extra_flags); }\r\n    if (v instanceof Float32Array) { return bind.InputScalar(label, ImGuiDataType.Float, v, step, step_fast, format, extra_flags); }\r\n    if (v instanceof Float64Array) { return bind.InputScalar(label, ImGuiDataType.Double, v, step, step_fast, format, extra_flags); }\r\n    throw new Error();\r\n}\r\n\r\n// Widgets: Sliders (tip: ctrl+click on a slider to input with keyboard. manually input values aren't clamped, can go off-bounds)\r\n// IMGUI_API bool          SliderFloat(const char* label, float* v, float v_min, float v_max, const char* format = \"%.3f\", float power = 1.0f);     // adjust format to decorate the value with a prefix or a suffix for in-slider labels or unit display. Use power!=1.0 for logarithmic sliders\r\nexport function SliderFloat(label: string, v: Bind.ImAccess<number> | Bind.ImScalar<number> | XY | XYZ | XYZW | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number>, v_min: number, v_max: number, format: string = \"%.3f\", power: number = 1.0): boolean {\r\n    const _v = import_Scalar(v);\r\n    const ret = bind.SliderFloat(label, _v, v_min, v_max, format, power);\r\n    export_Scalar(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          SliderFloat2(const char* label, float v[2], float v_min, float v_max, const char* format = \"%.3f\", float power = 1.0f);\r\nexport function SliderFloat2(label: string, v: XY | XYZ | XYZW | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number> | Bind.interface_ImVec2, v_min: number, v_max: number, format: string = \"%.3f\", power: number = 1.0): boolean {\r\n    const _v = import_Vector2(v);\r\n    const ret = bind.SliderFloat2(label, _v, v_min, v_max, format, power);\r\n    export_Vector2(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          SliderFloat3(const char* label, float v[3], float v_min, float v_max, const char* format = \"%.3f\", float power = 1.0f);\r\nexport function SliderFloat3(label: string, v: XYZ | XYZW | Bind.ImTuple3<number> | Bind.ImTuple4<number>, v_min: number, v_max: number, format: string = \"%.3f\", power: number = 1.0): boolean {\r\n    const _v = import_Vector3(v);\r\n    const ret = bind.SliderFloat3(label, _v, v_min, v_max, format, power);\r\n    export_Vector3(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          SliderFloat4(const char* label, float v[4], float v_min, float v_max, const char* format = \"%.3f\", float power = 1.0f);\r\nexport function SliderFloat4(label: string, v: XYZW | Bind.ImTuple4<number> | XYZW, v_min: number, v_max: number, format: string = \"%.3f\", power: number = 1.0): boolean {\r\n    const _v = import_Vector4(v);\r\n    const ret = bind.SliderFloat4(label, _v, v_min, v_max, format, power);\r\n    export_Vector4(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          SliderAngle(const char* label, float* v_rad, float v_degrees_min = -360.0f, float v_degrees_max = +360.0f);\r\nexport function SliderAngle(label: string, v_rad: Bind.ImAccess<number> | Bind.ImScalar<number> | XY | XYZ | XYZW | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number>, v_degrees_min: number = -360.0, v_degrees_max: number = +360.0): boolean {\r\n    const _v_rad = import_Scalar(v_rad);\r\n    const ret = bind.SliderAngle(label, _v_rad, v_degrees_min, v_degrees_max);\r\n    export_Scalar(_v_rad, v_rad);\r\n    return ret;\r\n}\r\nexport function SliderAngle3(label: string, v_rad: XYZ | XYZW | Bind.ImTuple3<number> | Bind.ImTuple4<number>, v_degrees_min: number = -360.0, v_degrees_max: number = +360.0): boolean {\r\n    const _v_rad = import_Vector3(v_rad);\r\n    _v_rad[0] = Math.floor(_v_rad[0] * 180 / Math.PI);\r\n    _v_rad[1] = Math.floor(_v_rad[1] * 180 / Math.PI);\r\n    _v_rad[2] = Math.floor(_v_rad[2] * 180 / Math.PI);\r\n    const ret = bind.SliderInt3(label, _v_rad, v_degrees_min, v_degrees_max, \"%d deg\");\r\n    _v_rad[0] = _v_rad[0] * Math.PI / 180;\r\n    _v_rad[1] = _v_rad[1] * Math.PI / 180;\r\n    _v_rad[2] = _v_rad[2] * Math.PI / 180;\r\n    export_Vector3(_v_rad, v_rad);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          SliderInt(const char* label, int* v, int v_min, int v_max, const char* format = \"%d\");\r\nexport function SliderInt(label: string, v: Bind.ImAccess<number> | Bind.ImScalar<number> | XY | XYZ | XYZW | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number>, v_min: number, v_max: number, format: string = \"%d\"): boolean {\r\n    const _v = import_Scalar(v);\r\n    const ret = bind.SliderInt(label, _v, v_min, v_max, format);\r\n    export_Scalar(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          SliderInt2(const char* label, int v[2], int v_min, int v_max, const char* format = \"%d\");\r\nexport function SliderInt2(label: string, v: XY | XYZ | XYZW | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number>, v_min: number, v_max: number, format: string = \"%d\"): boolean {\r\n    const _v = import_Vector2(v);\r\n    const ret = bind.SliderInt2(label, _v, v_min, v_max, format);\r\n    export_Vector2(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          SliderInt3(const char* label, int v[3], int v_min, int v_max, const char* format = \"%d\");\r\nexport function SliderInt3(label: string, v: XYZ | XYZW | Bind.ImTuple3<number> | Bind.ImTuple4<number>, v_min: number, v_max: number, format: string = \"%d\"): boolean {\r\n    const _v = import_Vector3(v);\r\n    const ret = bind.SliderInt3(label, _v, v_min, v_max, format);\r\n    export_Vector3(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          SliderInt4(const char* label, int v[4], int v_min, int v_max, const char* format = \"%d\");\r\nexport function SliderInt4(label: string, v: XYZW | Bind.ImTuple4<number>, v_min: number, v_max: number, format: string = \"%d\"): boolean {\r\n    const _v = import_Vector4(v);\r\n    const ret = bind.SliderInt4(label, _v, v_min, v_max, format);\r\n    export_Vector4(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          SliderScalar(const char* label, ImGuiDataType data_type, void* v, const void* v_min, const void* v_max, const char* format = NULL, float power = 1.0f);\r\n// IMGUI_API bool          SliderScalarN(const char* label, ImGuiDataType data_type, void* v, int components, const void* v_min, const void* v_max, const char* format = NULL, float power = 1.0f);\r\nexport function SliderScalar(label: string, v: Int32Array | Uint32Array | Float32Array | Float64Array, v_min: number, v_max: number, format: string | null = null, power: number = 1.0): boolean {\r\n    if (v instanceof Int32Array) { return bind.SliderScalar(label, ImGuiDataType.S32, v, v_min, v_max, format, power); }\r\n    if (v instanceof Uint32Array) { return bind.SliderScalar(label, ImGuiDataType.U32, v, v_min, v_max, format, power); }\r\n    // if (v instanceof Int64Array) { return bind.SliderScalar(label, ImGuiDataType.S64, v, v_min, v_max, format, power); }\r\n    // if (v instanceof Uint64Array) { return bind.SliderScalar(label, ImGuiDataType.U64, v, v_min, v_max, format, power); }\r\n    if (v instanceof Float32Array) { return bind.SliderScalar(label, ImGuiDataType.Float, v, v_min, v_max, format, power); }\r\n    if (v instanceof Float64Array) { return bind.SliderScalar(label, ImGuiDataType.Double, v, v_min, v_max, format, power); }\r\n    throw new Error();\r\n}\r\n// IMGUI_API bool          VSliderFloat(const char* label, const ImVec2& size, float* v, float v_min, float v_max, const char* format = \"%.3f\", float power = 1.0f);\r\nexport function VSliderFloat(label: string, size: Readonly<Bind.interface_ImVec2>, v: Bind.ImAccess<number> | Bind.ImScalar<number> | XY | XYZ | XYZW | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number>, v_min: number, v_max: number, format: string = \"%.3f\", power: number = 1.0): boolean {\r\n    const _v = import_Scalar(v);\r\n    const ret = bind.VSliderFloat(label, size, _v, v_min, v_max, format, power);\r\n    export_Scalar(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          VSliderInt(const char* label, const ImVec2& size, int* v, int v_min, int v_max, const char* format = \"%d\");\r\nexport function VSliderInt(label: string, size: Readonly<Bind.interface_ImVec2>, v: Bind.ImAccess<number> | Bind.ImScalar<number> | XY | XYZ | XYZW | Bind.ImTuple2<number> | Bind.ImTuple3<number> | Bind.ImTuple4<number>, v_min: number, v_max: number, format: string = \"%d\"): boolean {\r\n    const _v = import_Scalar(v);\r\n    const ret = bind.VSliderInt(label, size, _v, v_min, v_max, format);\r\n    export_Scalar(_v, v);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          VSliderScalar(const char* label, const ImVec2& size, ImGuiDataType data_type, void* v, const void* v_min, const void* v_max, const char* format = NULL, float power = 1.0f);\r\nexport function VSliderScalar(label: string, size: Readonly<Bind.interface_ImVec2>, data_type: ImGuiDataType, v: Bind.ImAccess<number> | Bind.ImScalar<number>, v_min: number, v_max: number, format: string | null = null, power: number = 1.0): boolean {\r\n    if (v instanceof Int32Array) { return bind.VSliderScalar(label, size, ImGuiDataType.S32, v, v_min, v_max, format, power); }\r\n    if (v instanceof Uint32Array) { return bind.VSliderScalar(label, size, ImGuiDataType.U32, v, v_min, v_max, format, power); }\r\n    // if (v instanceof Int64Array) { return bind.VSliderScalar(label, size, ImGuiDataType.S64, v, v_min, v_max, format, power); }\r\n    // if (v instanceof Uint64Array) { return bind.VSliderScalar(label, size, ImGuiDataType.U64, v, v_min, v_max, format, power); }\r\n    if (v instanceof Float32Array) { return bind.VSliderScalar(label, size, ImGuiDataType.Float, v, v_min, v_max, format, power); }\r\n    if (v instanceof Float64Array) { return bind.VSliderScalar(label, size, ImGuiDataType.Double, v, v_min, v_max, format, power); }\r\n    throw new Error();\r\n}\r\n\r\n// Widgets: Color Editor/Picker (tip: the ColorEdit* functions have a little colored preview square that can be left-clicked to open a picker, and right-clicked to open an option menu.)\r\n// Note that a 'float v[X]' function argument is the same as 'float* v', the array syntax is just a way to document the number of elements that are expected to be accessible. You can the pass the address of a first float element out of a contiguous structure, e.g. &myvector.x\r\n// IMGUI_API bool          ColorEdit3(const char* label, float col[3], ImGuiColorEditFlags flags = 0);\r\nexport function ColorEdit3(label: string, col: RGB | RGBA | Bind.ImTuple3<number> | Bind.ImTuple4<number> | Bind.interface_ImVec4, flags: ImGuiColorEditFlags = 0): boolean {\r\n    const _col = import_Color3(col);\r\n    const ret = bind.ColorEdit3(label, _col, flags);\r\n    export_Color3(_col, col);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          ColorEdit4(const char* label, float col[4], ImGuiColorEditFlags flags = 0);\r\nexport function ColorEdit4(label: string, col: RGBA | Bind.ImTuple4<number> | Bind.interface_ImVec4, flags: ImGuiColorEditFlags = 0): boolean {\r\n    const _col = import_Color4(col);\r\n    const ret = bind.ColorEdit4(label, _col, flags);\r\n    export_Color4(_col, col);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          ColorPicker3(const char* label, float col[3], ImGuiColorEditFlags flags = 0);\r\nexport function ColorPicker3(label: string, col: RGB | RGBA | Bind.ImTuple3<number> | Bind.ImTuple4<number> | Bind.interface_ImVec4, flags: ImGuiColorEditFlags = 0): boolean {\r\n    const _col = import_Color3(col);\r\n    const ret = bind.ColorPicker3(label, _col, flags);\r\n    export_Color3(_col, col);\r\n    return ret;\r\n}\r\n// IMGUI_API bool          ColorPicker4(const char* label, float col[4], ImGuiColorEditFlags flags = 0, const float* ref_col = NULL);\r\nexport function ColorPicker4(label: string, col: RGBA | Bind.ImTuple4<number> | Bind.interface_ImVec4, flags: ImGuiColorEditFlags = 0, ref_col: Bind.ImTuple4<number> | Bind.interface_ImVec4 | null = null): boolean {\r\n    const _col = import_Color4(col);\r\n    const _ref_col = ref_col ? import_Color4(ref_col) : null;\r\n    const ret = bind.ColorPicker4(label, _col, flags, _ref_col);\r\n    export_Color4(_col, col);\r\n    if (_ref_col && ref_col) { export_Color4(_ref_col, ref_col); }\r\n    return ret;\r\n}\r\n// IMGUI_API bool          ColorButton(const char* desc_id, const ImVec4& col, ImGuiColorEditFlags flags = 0, ImVec2 size = ImVec2(0,0));  // display a colored square/button, hover for details, return true when pressed.\r\nexport function ColorButton(desc_id: string, col: Readonly<Bind.interface_ImVec4>, flags: ImGuiColorEditFlags = 0, size: Readonly<Bind.interface_ImVec2> = ImVec2.ZERO): boolean {\r\n    return bind.ColorButton(desc_id, col, flags, size);\r\n}\r\n// IMGUI_API void          SetColorEditOptions(ImGuiColorEditFlags flags);                         // initialize current options (generally on application startup) if you want to select a default format, picker type, etc. User will be able to change many settings, unless you pass the _NoOptions flag to your calls.\r\nexport function SetColorEditOptions(flags: ImGuiColorEditFlags): void {\r\n    bind.SetColorEditOptions(flags);\r\n}\r\n\r\n// Widgets: Trees\r\n// IMGUI_API bool          TreeNode(const char* label);                                            // if returning 'true' the node is open and the tree id is pushed into the id stack. user is responsible for calling TreePop().\r\n// IMGUI_API bool          TreeNode(const char* str_id, const char* fmt, ...) IM_FMTARGS(2);       // read the FAQ about why and how to use ID. to align arbitrary text at the same level as a TreeNode() you can use Bullet().\r\n// IMGUI_API bool          TreeNode(const void* ptr_id, const char* fmt, ...) IM_FMTARGS(2);       // \"\r\n// IMGUI_API bool          TreeNodeV(const char* str_id, const char* fmt, va_list args) IM_FMTLIST(2);\r\n// IMGUI_API bool          TreeNodeV(const void* ptr_id, const char* fmt, va_list args) IM_FMTLIST(2);\r\nexport function TreeNode(label: string): boolean;\r\nexport function TreeNode(label: string, fmt: string): boolean;\r\nexport function TreeNode(label: number, fmt: string): boolean;\r\nexport function TreeNode(...args: any[]): boolean {\r\n    if (typeof(args[0]) === \"string\") {\r\n        if (args.length === 1) {\r\n            const label: string = args[0];\r\n            return bind.TreeNode_A(label);\r\n        } else {\r\n            const str_id: string = args[0];\r\n            const fmt: string = args[1];\r\n            return bind.TreeNode_B(str_id, fmt);\r\n        }\r\n    } else {\r\n        const ptr_id: number = args[0];\r\n        const fmt: string = args[1];\r\n        return bind.TreeNode_C(ptr_id, fmt);\r\n    }\r\n}\r\n// IMGUI_API bool          TreeNodeEx(const char* label, ImGuiTreeNodeFlags flags = 0);\r\n// IMGUI_API bool          TreeNodeEx(const char* str_id, ImGuiTreeNodeFlags flags, const char* fmt, ...) IM_FMTARGS(3);\r\n// IMGUI_API bool          TreeNodeEx(const void* ptr_id, ImGuiTreeNodeFlags flags, const char* fmt, ...) IM_FMTARGS(3);\r\n// IMGUI_API bool          TreeNodeExV(const char* str_id, ImGuiTreeNodeFlags flags, const char* fmt, va_list args) IM_FMTLIST(3);\r\n// IMGUI_API bool          TreeNodeExV(const void* ptr_id, ImGuiTreeNodeFlags flags, const char* fmt, va_list args) IM_FMTLIST(3);\r\nexport function TreeNodeEx(label: string, flags?: ImGuiTreeNodeFlags): boolean;\r\nexport function TreeNodeEx(str_id: string, flags: ImGuiTreeNodeFlags, fmt: string): boolean;\r\nexport function TreeNodeEx(ptr_id: number, flags: ImGuiTreeNodeFlags, fmt: string): boolean;\r\nexport function TreeNodeEx(...args: any[]): boolean {\r\n    if (typeof(args[0]) === \"string\") {\r\n        if (args.length < 3) {\r\n            const label: string = args[0];\r\n            const flags: ImGuiTreeNodeFlags = args[1] || 0;\r\n            return bind.TreeNodeEx_A(label, flags);\r\n        } else {\r\n            const str_id: string = args[0];\r\n            const flags: ImGuiTreeNodeFlags = args[1];\r\n            const fmt: string = args[2];\r\n            return bind.TreeNodeEx_B(str_id, flags, fmt);\r\n        }\r\n    } else {\r\n        const ptr_id: number = args[0];\r\n        const flags: ImGuiTreeNodeFlags = args[1];\r\n        const fmt: string = args[2];\r\n        return bind.TreeNodeEx_C(ptr_id, flags, fmt);\r\n    }\r\n}\r\n// IMGUI_API void          TreePush(const char* str_id);                                           // ~ Indent()+PushId(). Already called by TreeNode() when returning true, but you can call Push/Pop yourself for layout purpose\r\n// IMGUI_API void          TreePush(const void* ptr_id = NULL);                                    // \"\r\nexport function TreePush(str_id: string): void;\r\nexport function TreePush(ptr_id: number): void;\r\nexport function TreePush(...args: any[]): void {\r\n    if (typeof(args[0]) === \"string\") {\r\n        const str_id: string = args[0];\r\n        bind.TreePush_A(str_id);\r\n    } else {\r\n        const ptr_id: number = args[0];\r\n        bind.TreePush_B(ptr_id);\r\n    }\r\n}\r\n// IMGUI_API void          TreePop();                                                              // ~ Unindent()+PopId()\r\nexport function TreePop(): void { bind.TreePop(); }\r\n// IMGUI_API void          TreeAdvanceToLabelPos();                                                // advance cursor x position by GetTreeNodeToLabelSpacing()\r\nexport function TreeAdvanceToLabelPos(): void { bind.TreeAdvanceToLabelPos(); }\r\n// IMGUI_API float         GetTreeNodeToLabelSpacing();                                            // horizontal distance preceding label when using TreeNode*() or Bullet() == (g.FontSize + style.FramePadding.x*2) for a regular unframed TreeNode\r\nexport function GetTreeNodeToLabelSpacing(): number { return bind.GetTreeNodeToLabelSpacing(); }\r\n// IMGUI_API void          SetNextTreeNodeOpen(bool is_open, ImGuiCond cond = 0);                  // set next TreeNode/CollapsingHeader open state.\r\nexport function SetNextTreeNodeOpen(is_open: boolean, cond: ImGuiCond = 0): void {\r\n    bind.SetNextTreeNodeOpen(is_open, cond);\r\n}\r\n// IMGUI_API bool          CollapsingHeader(const char* label, ImGuiTreeNodeFlags flags = 0);      // if returning 'true' the header is open. doesn't indent nor push on ID stack. user doesn't have to call TreePop().\r\n// IMGUI_API bool          CollapsingHeader(const char* label, bool* p_open, ImGuiTreeNodeFlags flags = 0); // when 'p_open' isn't NULL, display an additional small close button on upper right of the header\r\nexport function CollapsingHeader(label: string, flags?: ImGuiTreeNodeFlags): boolean;\r\nexport function CollapsingHeader(label: string, p_open: Bind.ImScalar<boolean> | Bind.ImAccess<boolean>, flags?: ImGuiTreeNodeFlags): boolean;\r\nexport function CollapsingHeader(label: string, ...args: any[]): boolean {\r\n    if (args.length === 0) {\r\n        return bind.CollapsingHeader_A(label, 0);\r\n    } else {\r\n        if (typeof(args[0]) === \"number\") {\r\n            const flags: ImGuiTreeNodeFlags = args[0];\r\n            return bind.CollapsingHeader_A(label, flags);\r\n        } else {\r\n            const p_open: Bind.ImScalar<boolean> | Bind.ImAccess<boolean> = args[0];\r\n            const flags: ImGuiTreeNodeFlags = args[1] || 0;\r\n            const ref_open: Bind.ImScalar<boolean> = Array.isArray(p_open) ? p_open : [ p_open() ];\r\n            const ret = bind.CollapsingHeader_B(label, ref_open, flags);\r\n            if (!Array.isArray(p_open)) { p_open(ref_open[0]); }\r\n            return ret;\r\n        }\r\n    }\r\n}\r\n\r\n// Widgets: Selectable / Lists\r\n// IMGUI_API bool          Selectable(const char* label, bool selected = false, ImGuiSelectableFlags flags = 0, const ImVec2& size = ImVec2(0,0));  // size.x==0.0: use remaining width, size.x>0.0: specify width. size.y==0.0: use label height, size.y>0.0: specify height\r\n// IMGUI_API bool          Selectable(const char* label, bool* p_selected, ImGuiSelectableFlags flags = 0, const ImVec2& size = ImVec2(0,0));\r\nexport function Selectable(label: string, selected?: boolean, flags?: ImGuiSelectableFlags, size?: Readonly<Bind.interface_ImVec2>): boolean;\r\nexport function Selectable(label: string, p_selected: Bind.ImScalar<boolean> | Bind.ImAccess<boolean>, flags?: ImGuiSelectableFlags, size?: Readonly<Bind.interface_ImVec2>): boolean;\r\nexport function Selectable(label: string, ...args: any[]): boolean {\r\n    if (args.length === 0) {\r\n        return bind.Selectable_A(label, false, 0, ImVec2.ZERO);\r\n    } else {\r\n        if (typeof(args[0]) === \"boolean\") {\r\n            const selected: boolean = args[0];\r\n            const flags: ImGuiSelectableFlags = args[1] || 0;\r\n            const size: Readonly<Bind.interface_ImVec2> = args[2] || ImVec2.ZERO;\r\n            return bind.Selectable_A(label, selected, flags, size);\r\n        } else {\r\n            const p_selected: Bind.ImScalar<boolean> | Bind.ImAccess<boolean> = args[0];\r\n            const flags: ImGuiSelectableFlags = args[1] || 0;\r\n            const size: Readonly<Bind.interface_ImVec2> = args[2] || ImVec2.ZERO;\r\n            const ref_selected: Bind.ImScalar<boolean> = Array.isArray(p_selected) ? p_selected : [ p_selected() ];\r\n            const ret = bind.Selectable_B(label, ref_selected, flags, size);\r\n            if (!Array.isArray(p_selected)) { p_selected(ref_selected[0]); }\r\n            return ret;\r\n        }\r\n    }\r\n}\r\n// IMGUI_API bool          ListBox(const char* label, int* current_item, const char* const* items, int items_count, int height_in_items = -1);\r\n// IMGUI_API bool          ListBox(const char* label, int* current_item, bool (*items_getter)(void* data, int idx, const char** out_text), void* data, int items_count, int height_in_items = -1);\r\nexport type ListBoxItemGetter = (data: any, idx: number, out_text: [string]) => boolean;\r\nexport function ListBox(label: string, current_item: Bind.ImAccess<number> | Bind.ImScalar<number>, items: string[], items_count?: number, height_in_items?: number): boolean;\r\nexport function ListBox(label: string, current_item: Bind.ImAccess<number> | Bind.ImScalar<number>, items_getter: ListBoxItemGetter, data: any, items_count: number, height_in_items?: number): boolean;\r\nexport function ListBox(label: string, current_item: Bind.ImAccess<number> | Bind.ImScalar<number>, ...args: any[]): boolean {\r\n    let ret: boolean = false;\r\n    const _current_item: Bind.ImScalar<number> = Array.isArray(current_item) ? current_item : [ current_item() ];\r\n    if (Array.isArray(args[0])) {\r\n        const items: string[] = args[0];\r\n        const items_count: number = typeof(args[1]) === \"number\" ? args[1] : items.length;\r\n        const height_in_items: number = typeof(args[2]) === \"number\" ? args[2] : -1;\r\n        ret = bind.ListBox_A(label, _current_item, items, items_count, height_in_items);\r\n    } else {\r\n        const items_getter: ListBoxItemGetter = args[0];\r\n        const data: any = args[1];\r\n        const items_count: number = args[2];\r\n        const height_in_items: number = typeof(args[3]) === \"number\" ? args[3] : -1;\r\n        ret = bind.ListBox_B(label, _current_item, items_getter, data, items_count, height_in_items);\r\n    }\r\n    if (!Array.isArray(current_item)) { current_item(_current_item[0]); }\r\n    return ret;\r\n}\r\n// IMGUI_API bool          ListBoxHeader(const char* label, const ImVec2& size = ImVec2(0,0));     // use if you want to reimplement ListBox() will custom data or interactions. make sure to call ListBoxFooter() afterwards.\r\n// IMGUI_API bool          ListBoxHeader(const char* label, int items_count, int height_in_items = -1); // \"\r\nexport function ListBoxHeader(label: string, size: Readonly<Bind.interface_ImVec2>): boolean;\r\nexport function ListBoxHeader(label: string, items_count: number, height_in_items?: number): boolean;\r\nexport function ListBoxHeader(label: string, ...args: any[]): boolean {\r\n    if (typeof(args[0]) === \"object\") {\r\n        const size: Readonly<Bind.interface_ImVec2> = args[0];\r\n        return bind.ListBoxHeader_A(label, size);\r\n    } else {\r\n        const items_count: number = args[0];\r\n        const height_in_items: number = typeof(args[1]) === \"number\" ? args[1] : -1;\r\n        return bind.ListBoxHeader_B(label, items_count, height_in_items);\r\n    }\r\n}\r\n// IMGUI_API void          ListBoxFooter();                                                        // terminate the scrolling region\r\nexport function ListBoxFooter(): void {\r\n    bind.ListBoxFooter();\r\n}\r\n\r\n// Widgets: Value() Helpers. Output single value in \"name: value\" format (tip: freely declare more in your code to handle your types. you can add functions to the ImGui namespace)\r\n// IMGUI_API void          Value(const char* prefix, bool b);\r\n// IMGUI_API void          Value(const char* prefix, int v);\r\n// IMGUI_API void          Value(const char* prefix, unsigned int v);\r\n// IMGUI_API void          Value(const char* prefix, float v, const char* float_format = NULL);\r\nexport function Value(prefix: string, b: boolean): void;\r\nexport function Value(prefix: string, v: number): void;\r\nexport function Value(prefix: string, v: number, float_format?: string | null): void;\r\nexport function Value(prefix: string, v: any): void;\r\nexport function Value(prefix: string, ...args: any[]): void {\r\n    if (typeof(args[0]) === \"boolean\") {\r\n        bind.Value_A(prefix, args[0]);\r\n    } else if (typeof(args[0]) === \"number\") {\r\n        if (Number.isInteger(args[0])) {\r\n            bind.Value_B(prefix, args[0]);\r\n        } else {\r\n            bind.Value_D(prefix, args[0], typeof(args[1]) === \"string\" ? args[1] : null);\r\n        }\r\n    } else {\r\n        bind.Text(prefix + String(args[0]));\r\n    }\r\n}\r\n\r\n// Tooltips\r\n// IMGUI_API void          BeginTooltip();                                                     // begin/append a tooltip window. to create full-featured tooltip (with any kind of contents).\r\nexport function BeginTooltip(): void { bind.BeginTooltip(); }\r\n// IMGUI_API void          EndTooltip();\r\nexport function EndTooltip(): void { bind.EndTooltip(); }\r\n// IMGUI_API void          SetTooltip(const char* fmt, ...) IM_FMTARGS(1);                     // set text tooltip under mouse-cursor, typically use with ImGui::IsItemHovered(). overidde any previous call to SetTooltip().\r\n// IMGUI_API void          SetTooltipV(const char* fmt, va_list args) IM_FMTLIST(1);\r\nexport function SetTooltip(fmt: string): void {\r\n    bind.SetTooltip(fmt);\r\n}\r\n\r\n// Menus\r\n// IMGUI_API bool          BeginMainMenuBar();                                                 // create and append to a full screen menu-bar. only call EndMainMenuBar() if this returns true!\r\nexport function BeginMainMenuBar(): boolean { return bind.BeginMainMenuBar(); }\r\n// IMGUI_API void          EndMainMenuBar();\r\nexport function EndMainMenuBar(): void { bind.EndMainMenuBar(); }\r\n// IMGUI_API bool          BeginMenuBar();                                                     // append to menu-bar of current window (requires ImGuiWindowFlags_MenuBar flag set on parent window). only call EndMenuBar() if this returns true!\r\nexport function BeginMenuBar(): boolean { return bind.BeginMenuBar(); }\r\n// IMGUI_API void          EndMenuBar();\r\nexport function EndMenuBar(): void { bind.EndMenuBar(); }\r\n// IMGUI_API bool          BeginMenu(const char* label, bool enabled = true);                  // create a sub-menu entry. only call EndMenu() if this returns true!\r\nexport function BeginMenu(label: string, enabled: boolean = true): boolean { return bind.BeginMenu(label, enabled); }\r\n// IMGUI_API void          EndMenu();\r\nexport function EndMenu(): void { bind.EndMenu(); }\r\n// IMGUI_API bool          MenuItem(const char* label, const char* shortcut = NULL, bool selected = false, bool enabled = true);  // return true when activated. shortcuts are displayed for convenience but not processed by ImGui at the moment\r\n// IMGUI_API bool          MenuItem(const char* label, const char* shortcut, bool* p_selected, bool enabled = true);              // return true when activated + toggle (*p_selected) if p_selected != NULL\r\nexport function MenuItem(label: string, shortcut?: string | null, selected?: boolean, enabled?: boolean): boolean;\r\nexport function MenuItem(label: string, shortcut: string | null, p_selected: Bind.ImScalar<boolean> | Bind.ImAccess<boolean> | null, enabled?: boolean): boolean;\r\nexport function MenuItem(label: string, ...args: any[]): boolean {\r\n    if (args.length === 0) {\r\n        return bind.MenuItem_A(label, null, false, true);\r\n    } else if (args.length === 1) {\r\n        const shortcut: string | null = args[0];\r\n        return bind.MenuItem_A(label, shortcut, false, true);\r\n    } else {\r\n        const shortcut: string | null = args[0];\r\n        if (typeof(args[1]) === \"boolean\") {\r\n            const selected: boolean = args[1];\r\n            const enabled: boolean = typeof(args[2]) === \"boolean\" ? args[2] : true;\r\n            return bind.MenuItem_A(label, shortcut, selected, enabled);\r\n        } else {\r\n            const p_selected: Bind.ImScalar<boolean> | Bind.ImAccess<boolean> = args[1];\r\n            const enabled: boolean = typeof(args[2]) === \"boolean\" ? args[2] : true;\r\n            const ref_selected: Bind.ImScalar<boolean> = Array.isArray(p_selected) ? p_selected : [ p_selected() ];\r\n            const ret = bind.MenuItem_B(label, shortcut, ref_selected, enabled);\r\n            if (!Array.isArray(p_selected)) { p_selected(ref_selected[0]); }\r\n            return ret;\r\n        }\r\n    }\r\n}\r\n\r\n// Popups\r\n// IMGUI_API void          OpenPopup(const char* str_id);                                      // call to mark popup as open (don't call every frame!). popups are closed when user click outside, or if CloseCurrentPopup() is called within a BeginPopup()/EndPopup() block. By default, Selectable()/MenuItem() are calling CloseCurrentPopup(). Popup identifiers are relative to the current ID-stack (so OpenPopup and BeginPopup needs to be at the same level).\r\nexport function OpenPopup(str_id: string): void { bind.OpenPopup(str_id); }\r\n// IMGUI_API bool          OpenPopupOnItemClick(const char* str_id = NULL, int mouse_button = 1);                                  // helper to open popup when clicked on last item. return true when just opened.\r\nexport function OpenPopupOnItemClick(str_id: string | null = null, mouse_button: number = 1): boolean {\r\n    return bind.OpenPopupOnItemClick(str_id, mouse_button);\r\n}\r\n// IMGUI_API bool          BeginPopup(const char* str_id);                                     // return true if the popup is open, and you can start outputting to it. only call EndPopup() if BeginPopup() returned true!\r\nexport function BeginPopup(str_id: string): boolean { return bind.BeginPopup(str_id); }\r\n// IMGUI_API bool          BeginPopupModal(const char* name, bool* p_open = NULL, ImGuiWindowFlags extra_flags = 0);               // modal dialog (block interactions behind the modal window, can't close the modal window by clicking outside)\r\nexport function BeginPopupModal(str_id: string = \"\", p_open: Bind.ImScalar<boolean> | Bind.ImAccess<boolean> | null = null, extra_flags: ImGuiWindowFlags = 0): boolean {\r\n    if (Array.isArray(p_open)) {\r\n        return bind.BeginPopupModal(str_id, p_open, extra_flags);\r\n    } else if (typeof(p_open) === \"function\") {\r\n        const _p_open: Bind.ImScalar<boolean> = [ p_open() ];\r\n        const ret = bind.BeginPopupModal(str_id, _p_open, extra_flags);\r\n        p_open(_p_open[0]);\r\n        return ret;\r\n    } else {\r\n        return bind.BeginPopupModal(str_id, null, extra_flags);\r\n    }\r\n}\r\n// IMGUI_API bool          BeginPopupContextItem(const char* str_id = NULL, int mouse_button = 1);                                 // helper to open and begin popup when clicked on last item. if you can pass a NULL str_id only if the previous item had an id. If you want to use that on a non-interactive item such as Text() you need to pass in an explicit ID here. read comments in .cpp!\r\nexport function BeginPopupContextItem(str_id: string | null = null, mouse_button: number = 1): boolean {\r\n    return bind.BeginPopupContextItem(str_id, mouse_button);\r\n}\r\n// IMGUI_API bool          BeginPopupContextWindow(const char* str_id = NULL, int mouse_button = 1, bool also_over_items = true);  // helper to open and begin popup when clicked on current window.\r\nexport function BeginPopupContextWindow(str_id: string | null = null, mouse_button: number = 1, also_over_items: boolean = true): boolean {\r\n    return bind.BeginPopupContextWindow(str_id, mouse_button, also_over_items);\r\n}\r\n// IMGUI_API bool          BeginPopupContextVoid(const char* str_id = NULL, int mouse_button = 1);                                 // helper to open and begin popup when clicked in void (where there are no imgui windows).\r\nexport function BeginPopupContextVoid(str_id: string | null = null, mouse_button: number = 1): boolean {\r\n    return bind.BeginPopupContextVoid(str_id, mouse_button);\r\n}\r\n// IMGUI_API void          EndPopup();\r\nexport function EndPopup(): void { bind.EndPopup(); }\r\n// IMGUI_API bool          IsPopupOpen(const char* str_id);                                    // return true if the popup is open\r\nexport function IsPopupOpen(str_id: string): boolean { return bind.IsPopupOpen(str_id); }\r\n// IMGUI_API void          CloseCurrentPopup();                                                // close the popup we have begin-ed into. clicking on a MenuItem or Selectable automatically close the current popup.\r\nexport function CloseCurrentPopup(): void { bind.CloseCurrentPopup(); }\r\n\r\n// Logging/Capture: all text output from interface is captured to tty/file/clipboard. By default, tree nodes are automatically opened during logging.\r\n// IMGUI_API void          LogToTTY(int max_depth = -1);                                       // start logging to tty\r\nexport function LogToTTY(max_depth: number = -1): void {\r\n    bind.LogToTTY(max_depth);\r\n}\r\n// IMGUI_API void          LogToFile(int max_depth = -1, const char* filename = NULL);         // start logging to file\r\nexport function LogToFile(max_depth: number = -1, filename: string | null = null): void {\r\n    bind.LogToFile(max_depth, filename);\r\n}\r\n// IMGUI_API void          LogToClipboard(int max_depth = -1);                                 // start logging to OS clipboard\r\nexport function LogToClipboard(max_depth: number = -1): void {\r\n    bind.LogToClipboard(max_depth);\r\n}\r\n// IMGUI_API void          LogFinish();                                                        // stop logging (close file, etc.)\r\nexport function LogFinish(): void { bind.LogFinish(); }\r\n// IMGUI_API void          LogButtons();                                                       // helper to display buttons for logging to tty/file/clipboard\r\nexport function LogButtons(): void { bind.LogButtons(); }\r\n// IMGUI_API void          LogText(const char* fmt, ...) IM_FMTARGS(1);                        // pass text data straight to log (without being displayed)\r\nexport function LogText(fmt: string): void {\r\n    bind.LogText(fmt);\r\n}\r\n\r\n// Drag and Drop\r\n// [BETA API] Missing Demo code. API may evolve.\r\n// IMGUI_API bool          BeginDragDropSource(ImGuiDragDropFlags flags = 0, int mouse_button = 0);                // call when the current item is active. If this return true, you can call SetDragDropPayload() + EndDragDropSource()\r\nexport function BeginDragDropSource(flags: ImGuiDragDropFlags = 0, mouse_button: number = 0): boolean {\r\n    return bind.BeginDragDropSource(flags);\r\n}\r\n// IMGUI_API bool          SetDragDropPayload(const char* type, const void* data, size_t size, ImGuiCond cond = 0);// type is a user defined string of maximum 8 characters. Strings starting with '_' are reserved for dear imgui internal types. Data is copied and held by imgui.\r\nexport function SetDragDropPayload<T>(type: string, data: T, cond: ImGuiCond = 0): boolean {\r\n    return bind.SetDragDropPayload(type, data, 0, cond);\r\n}\r\n// IMGUI_API void          EndDragDropSource();\r\nexport function EndDragDropSource(): void {\r\n    bind.EndDragDropSource();\r\n}\r\n// IMGUI_API bool          BeginDragDropTarget();                                                                  // call after submitting an item that may receive an item. If this returns true, you can call AcceptDragDropPayload() + EndDragDropTarget()\r\nexport function BeginDragDropTarget(): boolean {\r\n    return bind.BeginDragDropTarget();\r\n}\r\n// IMGUI_API const ImGuiPayload* AcceptDragDropPayload(const char* type, ImGuiDragDropFlags flags = 0);            // accept contents of a given type. If ImGuiDragDropFlags_AcceptBeforeDelivery is set you can peek into the payload before the mouse button is released.\r\nexport function AcceptDragDropPayload<T>(type: string, flags: ImGuiDragDropFlags = 0): ImGuiPayload<T> | null {\r\n    return bind.AcceptDragDropPayload(type, flags);\r\n}\r\n// IMGUI_API void          EndDragDropTarget();\r\nexport function EndDragDropTarget(): void {\r\n    bind.EndDragDropTarget();\r\n}\r\n\r\n// Clipping\r\n// IMGUI_API void          PushClipRect(const ImVec2& clip_rect_min, const ImVec2& clip_rect_max, bool intersect_with_current_clip_rect);\r\nexport function PushClipRect(clip_rect_min: Readonly<Bind.interface_ImVec2>, clip_rect_max: Readonly<Bind.interface_ImVec2>, intersect_with_current_clip_rect: boolean): void {\r\n    bind.PushClipRect(clip_rect_min, clip_rect_max, intersect_with_current_clip_rect);\r\n}\r\n// IMGUI_API void          PopClipRect();\r\nexport function PopClipRect(): void {\r\n    bind.PopClipRect();\r\n}\r\n\r\n// Focus\r\n// (FIXME: Those functions will be reworked after we merge the navigation branch + have a pass at focusing/tabbing features.)\r\n// (Prefer using \"SetItemDefaultFocus()\" over \"if (IsWindowAppearing()) SetScrollHere()\" when applicable, to make your code more forward compatible when navigation branch is merged)\r\n// IMGUI_API void          SetItemDefaultFocus();                                              // make last item the default focused item of a window (WIP navigation branch only). Pleaase use instead of SetScrollHere().\r\nexport function SetItemDefaultFocus(): void { bind.SetItemDefaultFocus(); }\r\n// IMGUI_API void          SetKeyboardFocusHere(int offset = 0);                               // focus keyboard on the next widget. Use positive 'offset' to access sub components of a multiple component widget. Use -1 to access previous widget.\r\nexport function SetKeyboardFocusHere(offset: number = 0): void {\r\n    bind.SetKeyboardFocusHere(offset);\r\n}\r\n\r\n// Utilities\r\n// IMGUI_API bool          IsItemHovered(ImGuiHoveredFlags flags = 0);                         // is the last item hovered? (and usable, aka not blocked by a popup, etc.). See ImGuiHoveredFlags for more options.\r\nexport function IsItemHovered(flags: ImGuiHoveredFlags = 0): boolean {\r\n    return bind.IsItemHovered(flags);\r\n}\r\n// IMGUI_API bool          IsItemActive();                                                     // is the last item active? (e.g. button being held, text field being edited- items that don't interact will always return false)\r\nexport function IsItemActive(): boolean { return bind.IsItemActive(); }\r\n// IMGUI_API bool          IsItemEdited();                                                     // is the last item active? (e.g. button being held, text field being edited- items that don't interact will always return false)\r\nexport function IsItemEdited(): boolean { return bind.IsItemEdited(); }\r\n// IMGUI_API bool          IsItemFocused();                                                    // is the last item focused for keyboard/gamepad navigation?\r\nexport function IsItemFocused(): boolean { return bind.IsItemFocused(); }\r\n// IMGUI_API bool          IsItemClicked(int mouse_button = 0);                                // is the last item clicked? (e.g. button/node just clicked on)\r\nexport function IsItemClicked(mouse_button: number = 0): boolean {\r\n    return bind.IsItemClicked(mouse_button);\r\n}\r\n// IMGUI_API bool          IsItemVisible();                                                    // is the last item visible? (aka not out of sight due to clipping/scrolling.)\r\nexport function IsItemVisible(): boolean { return bind.IsItemVisible(); }\r\n// IMGUI_API bool          IsItemDeactivated();                                                // was the last item just made inactive (item was previously active). Useful for Undo/Redo patterns with widgets that requires continuous editing.\r\nexport function IsItemDeactivated(): boolean { return bind.IsItemDeactivated(); }\r\n// IMGUI_API bool          IsItemDeactivatedAfterEdit();                                     // was the last item just made inactive and made a value change when it was active? (e.g. Slider/Drag moved). Useful for Undo/Redo patterns with widgets that requires continuous editing. Note that you may get false positives (some widgets such as Combo()/ListBox()/Selectable() will return true even when clicking an already selected item).\r\nexport function IsItemDeactivatedAfterEdit(): boolean { return bind.IsItemDeactivatedAfterEdit(); }\r\n// IMGUI_API bool          IsAnyItemHovered();\r\nexport function IsAnyItemHovered(): boolean { return bind.IsAnyItemHovered(); }\r\n// IMGUI_API bool          IsAnyItemActive();\r\nexport function IsAnyItemActive(): boolean { return bind.IsAnyItemActive(); }\r\n// IMGUI_API bool          IsAnyItemFocused();\r\nexport function IsAnyItemFocused(): boolean { return bind.IsAnyItemFocused(); }\r\n// IMGUI_API ImVec2        GetItemRectMin();                                                   // get bounding rectangle of last item, in screen space\r\nexport function GetItemRectMin(out: Bind.interface_ImVec2 = new ImVec2()): typeof out {\r\n    return bind.GetItemRectMin(out);\r\n}\r\n// IMGUI_API ImVec2        GetItemRectMax();                                                   // \"\r\nexport function GetItemRectMax(out: Bind.interface_ImVec2 = new ImVec2()): typeof out {\r\n    return bind.GetItemRectMax(out);\r\n}\r\n// IMGUI_API ImVec2        GetItemRectSize();                                                  // get size of last item, in screen space\r\nexport function GetItemRectSize(out: Bind.interface_ImVec2 = new ImVec2()): typeof out {\r\n    return bind.GetItemRectSize(out);\r\n}\r\n// IMGUI_API void          SetItemAllowOverlap();                                              // allow last item to be overlapped by a subsequent item. sometimes useful with invisible buttons, selectables, etc. to catch unused area.\r\nexport function SetItemAllowOverlap(): void { bind.SetItemAllowOverlap(); }\r\n// IMGUI_API bool          IsWindowFocused(ImGuiFocusedFlags flags = 0);                       // is current window focused? or its root/child, depending on flags. see flags for options.\r\nexport function IsWindowFocused(flags: ImGuiFocusedFlags = 0): boolean {\r\n    return bind.IsWindowFocused(flags);\r\n}\r\n// IMGUI_API bool          IsWindowHovered(ImGuiHoveredFlags flags = 0);                       // is current window hovered (and typically: not blocked by a popup/modal)? see flags for options.\r\nexport function IsWindowHovered(flags: ImGuiHoveredFlags = 0): boolean {\r\n    return bind.IsWindowHovered(flags);\r\n}\r\n// IMGUI_API bool          IsRectVisible(const ImVec2& size);                                  // test if rectangle (of given size, starting from cursor position) is visible / not clipped.\r\n// IMGUI_API bool          IsRectVisible(const ImVec2& rect_min, const ImVec2& rect_max);      // test if rectangle (in screen space) is visible / not clipped. to perform coarse clipping on user's side.\r\nexport function IsRectVisible(size: Readonly<Bind.interface_ImVec2>): boolean;\r\nexport function IsRectVisible(rect_min: Readonly<Bind.interface_ImVec2>, rect_max: Readonly<Bind.interface_ImVec2>): boolean;\r\nexport function IsRectVisible(...args: any[]): boolean {\r\n    if (args.length === 1) {\r\n        const size: Readonly<Bind.interface_ImVec2> = args[0];\r\n        return bind.IsRectVisible_A(size);\r\n    } else {\r\n        const rect_min: Readonly<Bind.interface_ImVec2> = args[0];\r\n        const rect_max: Readonly<Bind.interface_ImVec2> = args[1];\r\n        return bind.IsRectVisible_B(rect_min, rect_max);\r\n    }\r\n}\r\n// IMGUI_API float         GetTime();\r\nexport function GetTime(): number { return bind.GetTime(); }\r\n// IMGUI_API int           GetFrameCount();\r\nexport function GetFrameCount(): number { return bind.GetFrameCount(); }\r\n// IMGUI_API ImDrawList*   GetOverlayDrawList();                                               // this draw list will be the last rendered one, useful to quickly draw overlays shapes/text\r\nexport function GetOverlayDrawList(): ImDrawList {\r\n    return new ImDrawList(bind.GetOverlayDrawList());\r\n}\r\n// IMGUI_API ImDrawListSharedData* GetDrawListSharedData();\r\nexport function GetDrawListSharedData(): ImDrawListSharedData {\r\n    return new ImDrawListSharedData(bind.GetDrawListSharedData());\r\n}\r\n// IMGUI_API const char*   GetStyleColorName(ImGuiCol idx);\r\nexport function GetStyleColorName(idx: ImGuiCol): string { return bind.GetStyleColorName(idx); }\r\n// IMGUI_API ImVec2        CalcTextSize(const char* text, const char* text_end = NULL, bool hide_text_after_double_hash = false, float wrap_width = -1.0f);\r\nexport function CalcTextSize(text: string, text_end: number | null = null, hide_text_after_double_hash: boolean = false, wrap_width: number = -1, out: Bind.interface_ImVec2 = new ImVec2()): typeof out {\r\n    return bind.CalcTextSize(text_end !== null ? text.substring(0, text_end) : text, hide_text_after_double_hash, wrap_width, out);\r\n}\r\n// IMGUI_API void          CalcListClipping(int items_count, float items_height, int* out_items_display_start, int* out_items_display_end);    // calculate coarse clipping for large list of evenly sized items. Prefer using the ImGuiListClipper higher-level helper if you can.\r\nexport function CalcListClipping(items_count: number, items_height: number, out_items_display_start: Bind.ImScalar<number>, out_items_display_end: Bind.ImScalar<number>): void {\r\n    return bind.CalcListClipping(items_count, items_height, out_items_display_start, out_items_display_end);\r\n}\r\n\r\n// IMGUI_API bool          BeginChildFrame(ImGuiID id, const ImVec2& size, ImGuiWindowFlags extra_flags = 0);    // helper to create a child window / scrolling region that looks like a normal widget frame\r\nexport function BeginChildFrame(id: Bind.ImGuiID, size: Readonly<Bind.interface_ImVec2>, extra_flags: ImGuiWindowFlags = 0): boolean {\r\n    return bind.BeginChildFrame(id, size, extra_flags);\r\n}\r\n// IMGUI_API void          EndChildFrame();\r\nexport function EndChildFrame(): void { bind.EndChildFrame(); }\r\n\r\n// IMGUI_API ImVec4        ColorConvertU32ToFloat4(ImU32 in);\r\nexport function ColorConvertU32ToFloat4(in_: Bind.ImU32, out: Bind.interface_ImVec4 = new ImVec4()): typeof out {\r\n    return bind.ColorConvertU32ToFloat4(in_, out);\r\n}\r\n// IMGUI_API ImU32         ColorConvertFloat4ToU32(const ImVec4& in);\r\nexport function ColorConvertFloat4ToU32(in_: Readonly<Bind.interface_ImVec4>): Bind.ImU32 {\r\n    return bind.ColorConvertFloat4ToU32(in_);\r\n}\r\n// IMGUI_API void          ColorConvertRGBtoHSV(float r, float g, float b, float& out_h, float& out_s, float& out_v);\r\nexport function ColorConvertRGBtoHSV(r: number, g: number, b: number, out_h: Bind.ImScalar<number>, out_s: Bind.ImScalar<number>, out_v: Bind.ImScalar<number>): void { bind.ColorConvertRGBtoHSV(r, g, b, out_h, out_s, out_v); }\r\n// IMGUI_API void          ColorConvertHSVtoRGB(float h, float s, float v, float& out_r, float& out_g, float& out_b);\r\nexport function ColorConvertHSVtoRGB(h: number, s: number, v: number, out_r: Bind.ImScalar<number>, out_g: Bind.ImScalar<number>, out_b: Bind.ImScalar<number>): void { bind.ColorConvertHSVtoRGB(h, s, v, out_r, out_g, out_b); }\r\n\r\n// Inputs\r\n// IMGUI_API int           GetKeyIndex(ImGuiKey imgui_key);                                    // map ImGuiKey_* values into user's key index. == io.KeyMap[key]\r\nexport function GetKeyIndex(imgui_key: ImGuiKey): number {\r\n    return bind.GetKeyIndex(imgui_key);\r\n}\r\n// IMGUI_API bool          IsKeyDown(int user_key_index);                                      // is key being held. == io.KeysDown[user_key_index]. note that imgui doesn't know the semantic of each entry of io.KeyDown[]. Use your own indices/enums according to how your backend/engine stored them into KeyDown[]!\r\nexport function IsKeyDown(user_key_index: number): boolean {\r\n    return bind.IsKeyDown(user_key_index);\r\n}\r\n// IMGUI_API bool          IsKeyPressed(int user_key_index, bool repeat = true);               // was key pressed (went from !Down to Down). if repeat=true, uses io.KeyRepeatDelay / KeyRepeatRate\r\nexport function IsKeyPressed(user_key_index: number, repeat: boolean = true): boolean {\r\n    return bind.IsKeyPressed(user_key_index, repeat);\r\n}\r\n// IMGUI_API bool          IsKeyReleased(int user_key_index);                                  // was key released (went from Down to !Down)..\r\nexport function IsKeyReleased(user_key_index: number): boolean {\r\n    return bind.IsKeyReleased(user_key_index);\r\n}\r\n// IMGUI_API int           GetKeyPressedAmount(int key_index, float repeat_delay, float rate); // uses provided repeat rate/delay. return a count, most often 0 or 1 but might be >1 if RepeatRate is small enough that DeltaTime > RepeatRate\r\nexport function GetKeyPressedAmount(user_key_index: number, repeat_delay: number, rate: number): number {\r\n    return bind.GetKeyPressedAmount(user_key_index, repeat_delay, rate);\r\n}\r\n// IMGUI_API bool          IsMouseDown(int button);                                            // is mouse button held\r\nexport function IsMouseDown(button: number): boolean {\r\n    return bind.IsMouseDown(button);\r\n}\r\n// IMGUI_API bool          IsMouseClicked(int button, bool repeat = false);                    // did mouse button clicked (went from !Down to Down)\r\nexport function IsMouseClicked(button: number, repeat: boolean = false): boolean {\r\n    return bind.IsMouseClicked(button, repeat);\r\n}\r\n// IMGUI_API bool          IsMouseDoubleClicked(int button);                                   // did mouse button double-clicked. a double-click returns false in IsMouseClicked(). uses io.MouseDoubleClickTime.\r\nexport function IsMouseDoubleClicked(button: number): boolean {\r\n    return bind.IsMouseDoubleClicked(button);\r\n}\r\n// IMGUI_API bool          IsMouseReleased(int button);                                        // did mouse button released (went from Down to !Down)\r\nexport function IsMouseReleased(button: number): boolean {\r\n    return bind.IsMouseReleased(button);\r\n}\r\n// IMGUI_API bool          IsMouseDragging(int button = 0, float lock_threshold = -1.0f);      // is mouse dragging. if lock_threshold < -1.0f uses io.MouseDraggingThreshold\r\nexport function IsMouseDragging(button: number = 0, lock_threshold: number = -1.0): boolean {\r\n    return bind.IsMouseDragging(button, lock_threshold);\r\n}\r\n// IMGUI_API bool          IsMouseHoveringRect(const ImVec2& r_min, const ImVec2& r_max, bool clip = true);  // is mouse hovering given bounding rect (in screen space). clipped by current clipping settings. disregarding of consideration of focus/window ordering/blocked by a popup.\r\nexport function IsMouseHoveringRect(r_min: Readonly<Bind.interface_ImVec2>, r_max: Readonly<Bind.interface_ImVec2>, clip: boolean = true): boolean {\r\n    return bind.IsMouseHoveringRect(r_min, r_max, clip);\r\n}\r\n// IMGUI_API bool          IsMousePosValid(const ImVec2* mouse_pos = NULL);                    //\r\nexport function IsMousePosValid(mouse_pos: Readonly<Bind.interface_ImVec2> | null = null): boolean {\r\n    return bind.IsMousePosValid(mouse_pos);\r\n}\r\n// IMGUI_API ImVec2        GetMousePos();                                                      // shortcut to ImGui::GetIO().MousePos provided by user, to be consistent with other calls\r\nexport function GetMousePos(out: Bind.interface_ImVec2 = new ImVec2()): typeof out {\r\n    return bind.GetMousePos(out);\r\n}\r\n// IMGUI_API ImVec2        GetMousePosOnOpeningCurrentPopup();                                 // retrieve backup of mouse positioning at the time of opening popup we have BeginPopup() into\r\nexport function GetMousePosOnOpeningCurrentPopup(out: Bind.interface_ImVec2 = new ImVec2()): typeof out {\r\n    return bind.GetMousePosOnOpeningCurrentPopup(out);\r\n}\r\n// IMGUI_API ImVec2        GetMouseDragDelta(int button = 0, float lock_threshold = -1.0f);    // dragging amount since clicking. if lock_threshold < -1.0f uses io.MouseDraggingThreshold\r\nexport function GetMouseDragDelta(button: number = 0, lock_threshold: number = -1.0, out: Bind.interface_ImVec2 = new ImVec2()): typeof out {\r\n    return bind.GetMouseDragDelta(button, lock_threshold, out);\r\n}\r\n// IMGUI_API void          ResetMouseDragDelta(int button = 0);                                //\r\nexport function ResetMouseDragDelta(button: number = 0): void {\r\n    bind.ResetMouseDragDelta(button);\r\n}\r\n// IMGUI_API ImGuiMouseCursor GetMouseCursor();                                                // get desired cursor type, reset in ImGui::NewFrame(), this is updated during the frame. valid before Render(). If you use software rendering by setting io.MouseDrawCursor ImGui will render those for you\r\nexport function GetMouseCursor(): ImGuiMouseCursor { return bind.GetMouseCursor(); }\r\n// IMGUI_API void          SetMouseCursor(ImGuiMouseCursor type);                              // set desired cursor type\r\nexport function SetMouseCursor(type: ImGuiMouseCursor): void { bind.SetMouseCursor(type); }\r\n// IMGUI_API void          CaptureKeyboardFromApp(bool capture = true);                        // manually override io.WantCaptureKeyboard flag next frame (said flag is entirely left for your application handle). e.g. force capture keyboard when your widget is being hovered.\r\nexport function CaptureKeyboardFromApp(capture: boolean = true) {\r\n    return bind.CaptureKeyboardFromApp(capture);\r\n}\r\n// IMGUI_API void          CaptureMouseFromApp(bool capture = true);                           // manually override io.WantCaptureMouse flag next frame (said flag is entirely left for your application handle).\r\nexport function CaptureMouseFromApp(capture: boolean = true): void {\r\n    bind.CaptureMouseFromApp(capture);\r\n}\r\n\r\n// Clipboard Utilities (also see the LogToClipboard() function to capture or output text data to the clipboard)\r\n// IMGUI_API const char*   GetClipboardText();\r\nexport function GetClipboardText(): string { return bind.GetClipboardText(); }\r\n// IMGUI_API void          SetClipboardText(const char* text);\r\nexport function SetClipboardText(text: string): void { bind.SetClipboardText(text); }\r\n\r\n// Settings/.Ini Utilities\r\n// The disk functions are automatically called if io.IniFilename != NULL (default is \"imgui.ini\").\r\n// Set io.IniFilename to NULL to load/save manually. Read io.WantSaveIniSettings description about handling .ini saving manually.\r\n// IMGUI_API void          LoadIniSettingsFromDisk(const char* ini_filename);                  // call after CreateContext() and before the first call to NewFrame(). NewFrame() automatically calls LoadIniSettingsFromDisk(io.IniFilename).\r\nexport function LoadIniSettingsFromDisk(ini_filename: string): void { throw new Error(); } // TODO\r\n// IMGUI_API void          LoadIniSettingsFromMemory(const char* ini_data, size_t ini_size=0); // call after CreateContext() and before the first call to NewFrame() to provide .ini data from your own data source.\r\nexport function LoadIniSettingsFromMemory(ini_data: string, ini_size: number = 0): void { bind.LoadIniSettingsFromMemory(ini_data); }\r\n// IMGUI_API void          SaveIniSettingsToDisk(const char* ini_filename);\r\nexport function SaveIniSettingsToDisk(ini_filename: string): void { throw new Error(); } // TODO\r\n// IMGUI_API const char*   SaveIniSettingsToMemory(size_t* out_ini_size = NULL);               // return a zero-terminated string with the .ini data which you can save by your own mean. call when io.WantSaveIniSettings is set, then save data by your own mean and clear io.WantSaveIniSettings.\r\nexport function SaveIniSettingsToMemory(out_ini_size: Bind.ImScalar<number> | null = null): string { return bind.SaveIniSettingsToMemory(); }\r\n\r\n// Memory Utilities\r\n// All those functions are not reliant on the current context.\r\n// If you reload the contents of imgui.cpp at runtime, you may need to call SetCurrentContext() + SetAllocatorFunctions() again.\r\n// IMGUI_API void          SetAllocatorFunctions(void* (*alloc_func)(size_t sz, void* user_data), void(*free_func)(void* ptr, void* user_data), void* user_data = NULL);\r\nexport function SetAllocatorFunctions(alloc_func: (sz: number, user_data: any) => number, free_func: (ptr: number, user_data: any) => void, user_data: any = null): void {\r\n    bind.SetAllocatorFunctions(alloc_func, free_func, user_data);\r\n}\r\n// IMGUI_API void*         MemAlloc(size_t sz);\r\nexport function MemAlloc(sz: number): void { bind.MemAlloc(sz); }\r\n// IMGUI_API void          MemFree(void* ptr);\r\nexport function MemFree(ptr: any): void { bind.MemFree(ptr); }\r\n","import * as ImGui from \"./imgui\";\r\n\r\nlet clipboard_text: string = \"\";\r\n\r\nlet canvas: HTMLCanvasElement | null = null;\r\n\r\nexport let gl: WebGLRenderingContext | null = null;\r\nlet g_ShaderHandle: WebGLProgram | null = null;\r\nlet g_VertHandle: WebGLShader | null = null;\r\nlet g_FragHandle: WebGLShader | null = null;\r\nlet g_AttribLocationTex: WebGLUniformLocation | null = null;\r\nlet g_AttribLocationProjMtx: WebGLUniformLocation | null = null;\r\nlet g_AttribLocationPosition: GLint = -1;\r\nlet g_AttribLocationUV: GLint = -1;\r\nlet g_AttribLocationColor: GLint = -1;\r\nlet g_VboHandle: WebGLBuffer | null = null;\r\nlet g_ElementsHandle: WebGLBuffer | null = null;\r\nlet g_FontTexture: WebGLTexture | null = null;\r\n\r\nlet prev_time: number = 0;\r\n\r\nfunction document_on_copy(event: ClipboardEvent): void {\r\n    event.clipboardData.setData(\"text/plain\", clipboard_text);\r\n    // console.log(`${event.type}: \"${clipboard_text}\"`);\r\n    event.preventDefault();\r\n}\r\n\r\nfunction document_on_cut(event: ClipboardEvent): void {\r\n    event.clipboardData.setData(\"text/plain\", clipboard_text);\r\n    // console.log(`${event.type}: \"${clipboard_text}\"`);\r\n    event.preventDefault();\r\n}\r\n\r\nfunction document_on_paste(event: ClipboardEvent): void {\r\n    clipboard_text = event.clipboardData.getData(\"text/plain\");\r\n    // console.log(`${event.type}: \"${clipboard_text}\"`);\r\n    event.preventDefault();\r\n}\r\n\r\nfunction window_on_resize(): void {\r\n    if (canvas !== null) {\r\n        const devicePixelRatio: number = window.devicePixelRatio || 1;\r\n        canvas.width = canvas.scrollWidth * devicePixelRatio;\r\n        canvas.height = canvas.scrollHeight * devicePixelRatio;\r\n    }\r\n}\r\n\r\nfunction window_on_gamepadconnected(event: any /* GamepadEvent */): void {\r\n    console.log(\"Gamepad connected at index %d: %s. %d buttons, %d axes.\",\r\n        event.gamepad.index, event.gamepad.id,\r\n        event.gamepad.buttons.length, event.gamepad.axes.length);\r\n}\r\n\r\nfunction window_on_gamepaddisconnected(event: any /* GamepadEvent */): void {\r\n    console.log(\"Gamepad disconnected at index %d: %s.\",\r\n        event.gamepad.index, event.gamepad.id);\r\n}\r\n\r\nfunction canvas_on_blur(event: FocusEvent): void {\r\n    const io = ImGui.GetIO();\r\n    io.KeyCtrl = false;\r\n    io.KeyShift = false;\r\n    io.KeyAlt = false;\r\n    io.KeySuper = false;\r\n    for (let i = 0; i < io.KeysDown.length; ++i) {\r\n        io.KeysDown[i] = false;\r\n    }\r\n    for (let i = 0; i < io.MouseDown.length; ++i) {\r\n        io.MouseDown[i] = false;\r\n    }\r\n}\r\n\r\nfunction canvas_on_keydown(event: KeyboardEvent): void {\r\n    // console.log(event.type, event.key, event.keyCode);\r\n    const io = ImGui.GetIO();\r\n    io.KeyCtrl = event.ctrlKey;\r\n    io.KeyShift = event.shiftKey;\r\n    io.KeyAlt = event.altKey;\r\n    io.KeySuper = event.metaKey;\r\n    ImGui.IM_ASSERT(event.keyCode >= 0 && event.keyCode < ImGui.IM_ARRAYSIZE(io.KeysDown));\r\n    io.KeysDown[event.keyCode] = true;\r\n    // forward to the keypress event\r\n    if (/*io.WantCaptureKeyboard ||*/ event.key === \"Tab\") {\r\n        event.preventDefault();\r\n    }\r\n}\r\n\r\nfunction canvas_on_keyup(event: KeyboardEvent): void {\r\n    // console.log(event.type, event.key, event.keyCode);\r\n    const io = ImGui.GetIO();\r\n    io.KeyCtrl = event.ctrlKey;\r\n    io.KeyShift = event.shiftKey;\r\n    io.KeyAlt = event.altKey;\r\n    io.KeySuper = event.metaKey;\r\n    ImGui.IM_ASSERT(event.keyCode >= 0 && event.keyCode < ImGui.IM_ARRAYSIZE(io.KeysDown));\r\n    io.KeysDown[event.keyCode] = false;\r\n    if (io.WantCaptureKeyboard) {\r\n        event.preventDefault();\r\n    }\r\n}\r\n\r\nfunction canvas_on_keypress(event: KeyboardEvent): void {\r\n    // console.log(event.type, event.key, event.keyCode);\r\n    const io = ImGui.GetIO();\r\n    io.AddInputCharacter(event.charCode);\r\n    if (io.WantCaptureKeyboard) {\r\n        event.preventDefault();\r\n    }\r\n}\r\n\r\nfunction canvas_on_pointermove(event: PointerEvent): void {\r\n    const io = ImGui.GetIO();\r\n    io.MousePos.x = event.offsetX;\r\n    io.MousePos.y = event.offsetY;\r\n    if (io.WantCaptureMouse) {\r\n        event.preventDefault();\r\n    }\r\n}\r\n\r\n// MouseEvent.button\r\n// A number representing a given button:\r\n// 0: Main button pressed, usually the left button or the un-initialized state\r\n// 1: Auxiliary button pressed, usually the wheel button or the middle button (if present)\r\n// 2: Secondary button pressed, usually the right button\r\n// 3: Fourth button, typically the Browser Back button\r\n// 4: Fifth button, typically the Browser Forward button\r\nconst mouse_button_map: number[] = [0, 2, 1, 3, 4];\r\n\r\nfunction canvas_on_pointerdown(event: PointerEvent): void {\r\n    const io = ImGui.GetIO();\r\n    io.MousePos.x = event.offsetX;\r\n    io.MousePos.y = event.offsetY;\r\n    io.MouseDown[mouse_button_map[event.button]] = true;\r\n    if (io.WantCaptureMouse) {\r\n        event.preventDefault();\r\n    }\r\n\r\n}\r\n\r\nfunction canvas_on_contextmenu(event: Event): void {\r\n    const io = ImGui.GetIO();\r\n    if (io.WantCaptureMouse) {\r\n        event.preventDefault();\r\n    }\r\n}\r\n\r\nfunction canvas_on_pointerup(event: PointerEvent): void {\r\n    const io = ImGui.GetIO();\r\n    io.MouseDown[mouse_button_map[event.button]] = false;\r\n    if (io.WantCaptureMouse) {\r\n        event.preventDefault();\r\n    }\r\n}\r\n\r\nfunction canvas_on_wheel(event: WheelEvent): void {\r\n    const io = ImGui.GetIO();\r\n    let scale: number = 1.0;\r\n    switch (event.deltaMode) {\r\n        case event.DOM_DELTA_PIXEL:\r\n            scale = 0.01;\r\n            break;\r\n        case event.DOM_DELTA_LINE:\r\n            scale = 0.2;\r\n            break;\r\n        case event.DOM_DELTA_PAGE:\r\n            scale = 1.0;\r\n            break;\r\n    }\r\n    io.MouseWheelH = event.deltaX * scale;\r\n    io.MouseWheel = -event.deltaY * scale; // Mouse wheel: 1 unit scrolls about 5 lines text.\r\n    if (io.WantCaptureMouse) {\r\n        event.preventDefault();\r\n    }\r\n}\r\n\r\nexport function Init(value: HTMLCanvasElement | WebGLRenderingContext | null): void {\r\n    const io = ImGui.GetIO();\r\n\r\n    if (typeof(window) !== \"undefined\") {\r\n        ImGui.LoadIniSettingsFromMemory(window.localStorage.getItem(\"imgui.ini\") || \"\");\r\n    }\r\n\r\n    if (typeof(navigator) !== \"undefined\") {\r\n        io.ConfigMacOSXBehaviors = navigator.platform.match(/Mac/) !== null;\r\n    }\r\n\r\n    if (typeof(document) !== \"undefined\") {\r\n        document.body.addEventListener(\"copy\", document_on_copy);\r\n        document.body.addEventListener(\"cut\", document_on_cut);\r\n        document.body.addEventListener(\"paste\", document_on_paste);\r\n    }\r\n\r\n    io.SetClipboardTextFn = (user_data: any, text: string): void => {\r\n        clipboard_text = text;\r\n        // console.log(`set clipboard_text: \"${clipboard_text}\"`);\r\n        if (typeof navigator !== \"undefined\" && typeof (navigator as any).clipboard !== \"undefined\") {\r\n            // console.log(`clipboard.writeText: \"${clipboard_text}\"`);\r\n            (navigator as any).clipboard.writeText(clipboard_text).then((): void => {\r\n                // console.log(`clipboard.writeText: \"${clipboard_text}\" done.`);\r\n            });\r\n        }\r\n    };\r\n    io.GetClipboardTextFn = (user_data: any): string => {\r\n        // if (typeof navigator !== \"undefined\" && typeof (navigator as any).clipboard !== \"undefined\") {\r\n        //     console.log(`clipboard.readText: \"${clipboard_text}\"`);\r\n        //     (navigator as any).clipboard.readText().then((text: string): void => {\r\n        //         clipboard_text = text;\r\n        //         console.log(`clipboard.readText: \"${clipboard_text}\" done.`);\r\n        //     });\r\n        // }\r\n        // console.log(`get clipboard_text: \"${clipboard_text}\"`);\r\n        return clipboard_text;\r\n    };\r\n    io.ClipboardUserData = null;\r\n\r\n    if (typeof(window) !== \"undefined\") {\r\n        window.addEventListener(\"resize\", window_on_resize);\r\n        window.addEventListener(\"gamepadconnected\", window_on_gamepadconnected);\r\n        window.addEventListener(\"gamepaddisconnected\", window_on_gamepaddisconnected);\r\n    }\r\n\r\n    if (value && value instanceof (HTMLCanvasElement)) {\r\n        canvas = value;\r\n        gl = canvas.getContext(\"webgl\", {alpha: false});\r\n    } else if (value && (value instanceof (WebGLRenderingContext) || value instanceof (WebGL2RenderingContext))) {\r\n        canvas = value.canvas;\r\n        gl = value;\r\n    }\r\n\r\n    if (canvas !== null) {\r\n        window_on_resize();\r\n        canvas.style.touchAction = \"none\"; // Disable browser handling of all panning and zooming gestures.\r\n        canvas.addEventListener(\"blur\", canvas_on_blur);\r\n        canvas.addEventListener(\"keydown\", canvas_on_keydown);\r\n        canvas.addEventListener(\"keyup\", canvas_on_keyup);\r\n        canvas.addEventListener(\"keypress\", canvas_on_keypress);\r\n        canvas.addEventListener(\"pointermove\", canvas_on_pointermove);\r\n        canvas.addEventListener(\"pointerdown\", canvas_on_pointerdown);\r\n        canvas.addEventListener(\"contextmenu\", canvas_on_contextmenu);\r\n        canvas.addEventListener(\"pointerup\", canvas_on_pointerup);\r\n        canvas.addEventListener(\"wheel\", canvas_on_wheel);\r\n    }\r\n\r\n    // Setup back-end capabilities flags\r\n    io.BackendFlags |= ImGui.BackendFlags.HasMouseCursors;   // We can honor GetMouseCursor() values (optional)\r\n\r\n    // Keyboard mapping. ImGui will use those indices to peek into the io.KeyDown[] array.\r\n    io.KeyMap[ImGui.Key.Tab] = 9;\r\n    io.KeyMap[ImGui.Key.LeftArrow] = 37;\r\n    io.KeyMap[ImGui.Key.RightArrow] = 39;\r\n    io.KeyMap[ImGui.Key.UpArrow] = 38;\r\n    io.KeyMap[ImGui.Key.DownArrow] = 40;\r\n    io.KeyMap[ImGui.Key.PageUp] = 33;\r\n    io.KeyMap[ImGui.Key.PageDown] = 34;\r\n    io.KeyMap[ImGui.Key.Home] = 36;\r\n    io.KeyMap[ImGui.Key.End] = 35;\r\n    io.KeyMap[ImGui.Key.Insert] = 45;\r\n    io.KeyMap[ImGui.Key.Delete] = 46;\r\n    io.KeyMap[ImGui.Key.Backspace] = 8;\r\n    io.KeyMap[ImGui.Key.Space] = 32;\r\n    io.KeyMap[ImGui.Key.Enter] = 13;\r\n    io.KeyMap[ImGui.Key.Escape] = 27;\r\n    io.KeyMap[ImGui.Key.A] = 65;\r\n    io.KeyMap[ImGui.Key.C] = 67;\r\n    io.KeyMap[ImGui.Key.V] = 86;\r\n    io.KeyMap[ImGui.Key.X] = 88;\r\n    io.KeyMap[ImGui.Key.Y] = 89;\r\n    io.KeyMap[ImGui.Key.Z] = 90;\r\n\r\n    CreateDeviceObjects();\r\n}\r\n\r\nexport function Shutdown(): void {\r\n    DestroyDeviceObjects();\r\n\r\n    if (canvas !== null) {\r\n        canvas.removeEventListener(\"blur\", canvas_on_blur);\r\n        canvas.removeEventListener(\"keydown\", canvas_on_keydown);\r\n        canvas.removeEventListener(\"keyup\", canvas_on_keyup);\r\n        canvas.removeEventListener(\"keypress\", canvas_on_keypress);\r\n        canvas.removeEventListener(\"pointermove\", canvas_on_pointermove);\r\n        canvas.removeEventListener(\"pointerdown\", canvas_on_pointerdown);\r\n        canvas.removeEventListener(\"contextmenu\", canvas_on_contextmenu);\r\n        canvas.removeEventListener(\"pointerup\", canvas_on_pointerup);\r\n        canvas.removeEventListener(\"wheel\", canvas_on_wheel);\r\n    }\r\n\r\n    gl = null;\r\n    canvas = null;\r\n\r\n    if (typeof(window) !== \"undefined\") {\r\n        window.removeEventListener(\"resize\", window_on_resize);\r\n        window.removeEventListener(\"gamepadconnected\", window_on_gamepadconnected);\r\n        window.removeEventListener(\"gamepaddisconnected\", window_on_gamepaddisconnected);\r\n    }\r\n\r\n    if (typeof(document) !== \"undefined\") {\r\n        document.body.removeEventListener(\"copy\", document_on_copy);\r\n        document.body.removeEventListener(\"cut\", document_on_cut);\r\n        document.body.removeEventListener(\"paste\", document_on_paste);\r\n    }\r\n}\r\n\r\nexport function NewFrame(time: number): void {\r\n    const io = ImGui.GetIO();\r\n\r\n    if (io.WantSaveIniSettings) {\r\n        io.WantSaveIniSettings = false;\r\n        if (typeof(window) !== \"undefined\") {\r\n            window.localStorage.setItem(\"imgui.ini\", ImGui.SaveIniSettingsToMemory());\r\n        }\r\n    }\r\n\r\n    const w: number = gl && gl.canvas.scrollWidth || 640;\r\n    const h: number = gl && gl.canvas.scrollHeight || 480;\r\n    const display_w: number = gl && gl.drawingBufferWidth || w;\r\n    const display_h: number = gl && gl.drawingBufferHeight || h;\r\n    io.DisplaySize.x = w;\r\n    io.DisplaySize.y = h;\r\n    io.DisplayFramebufferScale.x = w > 0 ? (display_w / w) : 0;\r\n    io.DisplayFramebufferScale.y = h > 0 ? (display_h / h) : 0;\r\n\r\n    const dt: number = time - prev_time;\r\n    prev_time = time;\r\n    io.DeltaTime = dt / 1000;\r\n\r\n    if (io.WantSetMousePos) {\r\n        console.log(\"TODO: MousePos\", io.MousePos.x, io.MousePos.y);\r\n    }\r\n\r\n    if (typeof(document) !== \"undefined\") {\r\n        if (io.MouseDrawCursor) {\r\n            document.body.style.cursor = \"none\";\r\n        } else {\r\n            switch (ImGui.GetMouseCursor()) {\r\n                case ImGui.MouseCursor.None:\r\n                    document.body.style.cursor = \"none\";\r\n                    break;\r\n                default:\r\n                case ImGui.MouseCursor.Arrow:\r\n                    document.body.style.cursor = \"default\";\r\n                    break;\r\n                case ImGui.MouseCursor.TextInput:\r\n                    document.body.style.cursor = \"text\";\r\n                    break;         // When hovering over InputText, etc.\r\n                case ImGui.MouseCursor.ResizeAll:\r\n                    document.body.style.cursor = \"move\";\r\n                    break;         // Unused\r\n                case ImGui.MouseCursor.ResizeNS:\r\n                    document.body.style.cursor = \"ns-resize\";\r\n                    break;     // When hovering over an horizontal border\r\n                case ImGui.MouseCursor.ResizeEW:\r\n                    document.body.style.cursor = \"ew-resize\";\r\n                    break;     // When hovering over a vertical border or a column\r\n                case ImGui.MouseCursor.ResizeNESW:\r\n                    document.body.style.cursor = \"nesw-resize\";\r\n                    break; // When hovering over the bottom-left corner of a window\r\n                case ImGui.MouseCursor.ResizeNWSE:\r\n                    document.body.style.cursor = \"nwse-resize\";\r\n                    break; // When hovering over the bottom-right corner of a window\r\n                case ImGui.MouseCursor.Hand:\r\n                    document.body.style.cursor = \"move\";\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Gamepad navigation mapping [BETA]\r\n    for (let i = 0; i < io.NavInputs.length; ++i) {\r\n        io.NavInputs[i] = 0.0;\r\n    }\r\n    if (io.ConfigFlags & ImGui.ConfigFlags.NavEnableGamepad) {\r\n        // Update gamepad inputs\r\n        const gamepads: (Gamepad | null)[] = (typeof(navigator) !== \"undefined\" && typeof(navigator.getGamepads) === \"function\") ? navigator.getGamepads() : [];\r\n        for (let i = 0; i < gamepads.length; ++i) {\r\n            const gamepad: Gamepad | null = gamepads[i];\r\n            if (!gamepad) {\r\n                continue;\r\n            }\r\n            const buttons_count: number = gamepad.buttons.length;\r\n            const axes_count: number = gamepad.axes.length;\r\n\r\n            function MAP_BUTTON(NAV_NO: number, BUTTON_NO: number): void {\r\n                if (!gamepad) {\r\n                    return;\r\n                }\r\n                if (buttons_count > BUTTON_NO && gamepad.buttons[BUTTON_NO].pressed)\r\n                    io.NavInputs[NAV_NO] = 1.0;\r\n            }\r\n\r\n            function MAP_ANALOG(NAV_NO: number, AXIS_NO: number, V0: number, V1: number): void {\r\n                if (!gamepad) {\r\n                    return;\r\n                }\r\n                let v: number = (axes_count > AXIS_NO) ? gamepad.axes[AXIS_NO] : V0;\r\n                v = (v - V0) / (V1 - V0);\r\n                if (v > 1.0) v = 1.0;\r\n                if (io.NavInputs[NAV_NO] < v) io.NavInputs[NAV_NO] = v;\r\n            }\r\n\r\n            // TODO: map input based on vendor and product id\r\n            // https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/id\r\n            const match: RegExpMatchArray | null = gamepad.id.match(/^([0-9a-f]{4})-([0-9a-f]{4})-.*$/);\r\n            const match_chrome: RegExpMatchArray | null = gamepad.id.match(/^.*\\(.*Vendor: ([0-9a-f]{4}) Product: ([0-9a-f]{4})\\).*$/);\r\n            const vendor: string = (match && match[1]) || (match_chrome && match_chrome[1]) || \"0000\";\r\n            const product: string = (match && match[2]) || (match_chrome && match_chrome[2]) || \"0000\";\r\n            switch (vendor + product) {\r\n                case \"046dc216\": // Logitech Logitech Dual Action (Vendor: 046d Product: c216)\r\n                    MAP_BUTTON(ImGui.NavInput.Activate, 1); // Cross / A\r\n                    MAP_BUTTON(ImGui.NavInput.Cancel, 2); // Circle / B\r\n                    MAP_BUTTON(ImGui.NavInput.Menu, 0); // Square / X\r\n                    MAP_BUTTON(ImGui.NavInput.Input, 3); // Triangle / Y\r\n                    MAP_ANALOG(ImGui.NavInput.DpadLeft, 4, -0.3, -0.9); // D-Pad Left\r\n                    MAP_ANALOG(ImGui.NavInput.DpadRight, 4, +0.3, +0.9); // D-Pad Right\r\n                    MAP_ANALOG(ImGui.NavInput.DpadUp, 5, -0.3, -0.9); // D-Pad Up\r\n                    MAP_ANALOG(ImGui.NavInput.DpadDown, 5, +0.3, +0.9); // D-Pad Down\r\n                    MAP_BUTTON(ImGui.NavInput.FocusPrev, 4); // L1 / LB\r\n                    MAP_BUTTON(ImGui.NavInput.FocusNext, 5); // R1 / RB\r\n                    MAP_BUTTON(ImGui.NavInput.TweakSlow, 6); // L2 / LT\r\n                    MAP_BUTTON(ImGui.NavInput.TweakFast, 7); // R2 / RT\r\n                    MAP_ANALOG(ImGui.NavInput.LStickLeft, 0, -0.3, -0.9);\r\n                    MAP_ANALOG(ImGui.NavInput.LStickRight, 0, +0.3, +0.9);\r\n                    MAP_ANALOG(ImGui.NavInput.LStickUp, 1, -0.3, -0.9);\r\n                    MAP_ANALOG(ImGui.NavInput.LStickDown, 1, +0.3, +0.9);\r\n                    break;\r\n                case \"046dc21d\": // Logitech Gamepad F310 (STANDARD GAMEPAD Vendor: 046d Product: c21d)\r\n                    MAP_BUTTON(ImGui.NavInput.Activate, 0); // Cross / A\r\n                    MAP_BUTTON(ImGui.NavInput.Cancel, 1); // Circle / B\r\n                    MAP_BUTTON(ImGui.NavInput.Menu, 2); // Square / X\r\n                    MAP_BUTTON(ImGui.NavInput.Input, 3); // Triangle / Y\r\n                    MAP_BUTTON(ImGui.NavInput.DpadLeft, 14); // D-Pad Left\r\n                    MAP_BUTTON(ImGui.NavInput.DpadRight, 15); // D-Pad Right\r\n                    MAP_BUTTON(ImGui.NavInput.DpadUp, 12); // D-Pad Up\r\n                    MAP_BUTTON(ImGui.NavInput.DpadDown, 13); // D-Pad Down\r\n                    MAP_BUTTON(ImGui.NavInput.FocusPrev, 4); // L1 / LB\r\n                    MAP_BUTTON(ImGui.NavInput.FocusNext, 5); // R1 / RB\r\n                    MAP_ANALOG(ImGui.NavInput.TweakSlow, 6, +0.3, +0.9); // L2 / LT\r\n                    MAP_ANALOG(ImGui.NavInput.TweakFast, 7, +0.3, +0.9); // R2 / RT\r\n                    MAP_ANALOG(ImGui.NavInput.LStickLeft, 0, -0.3, -0.9);\r\n                    MAP_ANALOG(ImGui.NavInput.LStickRight, 0, +0.3, +0.9);\r\n                    MAP_ANALOG(ImGui.NavInput.LStickUp, 1, -0.3, -0.9);\r\n                    MAP_ANALOG(ImGui.NavInput.LStickDown, 1, +0.3, +0.9);\r\n                    break;\r\n                case \"2dc86001\": // 8Bitdo SN30 Pro  8Bitdo SN30 Pro (Vendor: 2dc8 Product: 6001)\r\n                case \"2dc86101\": // 8Bitdo SN30 Pro (Vendor: 2dc8 Product: 6101)\r\n                    MAP_BUTTON(ImGui.NavInput.Activate, 1); // Cross / A\r\n                    MAP_BUTTON(ImGui.NavInput.Cancel, 0); // Circle / B\r\n                    MAP_BUTTON(ImGui.NavInput.Menu, 4); // Square / X\r\n                    MAP_BUTTON(ImGui.NavInput.Input, 3); // Triangle / Y\r\n                    MAP_ANALOG(ImGui.NavInput.DpadLeft, 6, -0.3, -0.9); // D-Pad Left\r\n                    MAP_ANALOG(ImGui.NavInput.DpadRight, 6, +0.3, +0.9); // D-Pad Right\r\n                    MAP_ANALOG(ImGui.NavInput.DpadUp, 7, -0.3, -0.9); // D-Pad Up\r\n                    MAP_ANALOG(ImGui.NavInput.DpadDown, 7, +0.3, +0.9); // D-Pad Down\r\n                    MAP_BUTTON(ImGui.NavInput.FocusPrev, 6); // L1 / LB\r\n                    MAP_BUTTON(ImGui.NavInput.FocusNext, 7); // R1 / RB\r\n                    MAP_BUTTON(ImGui.NavInput.TweakSlow, 8); // L2 / LT\r\n                    MAP_BUTTON(ImGui.NavInput.TweakFast, 9); // R2 / RT\r\n                    MAP_ANALOG(ImGui.NavInput.LStickLeft, 0, -0.3, -0.9);\r\n                    MAP_ANALOG(ImGui.NavInput.LStickRight, 0, +0.3, +0.9);\r\n                    MAP_ANALOG(ImGui.NavInput.LStickUp, 1, -0.3, -0.9);\r\n                    MAP_ANALOG(ImGui.NavInput.LStickDown, 1, +0.3, +0.9);\r\n                    break;\r\n                default: // standard gamepad: https://w3c.github.io/gamepad/#remapping\r\n                    MAP_BUTTON(ImGui.NavInput.Activate, 0); // Cross / A\r\n                    MAP_BUTTON(ImGui.NavInput.Cancel, 1); // Circle / B\r\n                    MAP_BUTTON(ImGui.NavInput.Menu, 2); // Square / X\r\n                    MAP_BUTTON(ImGui.NavInput.Input, 3); // Triangle / Y\r\n                    MAP_BUTTON(ImGui.NavInput.DpadLeft, 14); // D-Pad Left\r\n                    MAP_BUTTON(ImGui.NavInput.DpadRight, 15); // D-Pad Right\r\n                    MAP_BUTTON(ImGui.NavInput.DpadUp, 12); // D-Pad Up\r\n                    MAP_BUTTON(ImGui.NavInput.DpadDown, 13); // D-Pad Down\r\n                    MAP_BUTTON(ImGui.NavInput.FocusPrev, 4); // L1 / LB\r\n                    MAP_BUTTON(ImGui.NavInput.FocusNext, 5); // R1 / RB\r\n                    MAP_BUTTON(ImGui.NavInput.TweakSlow, 6); // L2 / LT\r\n                    MAP_BUTTON(ImGui.NavInput.TweakFast, 7); // R2 / RT\r\n                    MAP_ANALOG(ImGui.NavInput.LStickLeft, 0, -0.3, -0.9);\r\n                    MAP_ANALOG(ImGui.NavInput.LStickRight, 0, +0.3, +0.9);\r\n                    MAP_ANALOG(ImGui.NavInput.LStickUp, 1, -0.3, -0.9);\r\n                    MAP_ANALOG(ImGui.NavInput.LStickDown, 1, +0.3, +0.9);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport function RenderDrawData(draw_data: ImGui.ImDrawData | null = ImGui.GetDrawData()): void {\r\n    const io = ImGui.GetIO();\r\n    if (draw_data === null) {\r\n        throw new Error();\r\n    }\r\n\r\n    gl || console.log(draw_data);\r\n\r\n    // Avoid rendering when minimized, scale coordinates for retina displays (screen coordinates != framebuffer coordinates)\r\n    const fb_width: number = io.DisplaySize.x * io.DisplayFramebufferScale.x;\r\n    const fb_height: number = io.DisplaySize.y * io.DisplayFramebufferScale.y;\r\n    if (fb_width === 0 || fb_height === 0) {\r\n        return;\r\n    }\r\n    draw_data.ScaleClipRects(io.DisplayFramebufferScale);\r\n\r\n    // Backup GL state\r\n    const last_active_texture: GLenum | null = gl && gl.getParameter(gl.ACTIVE_TEXTURE) || null;\r\n    gl && gl.activeTexture(gl.TEXTURE0);\r\n    const last_program: WebGLProgram | null = gl && gl.getParameter(gl.CURRENT_PROGRAM) || null;\r\n    const last_texture: WebGLTexture | null = gl && gl.getParameter(gl.TEXTURE_BINDING_2D) || null;\r\n    const last_array_buffer: WebGLBuffer | null = gl && gl.getParameter(gl.ARRAY_BUFFER_BINDING) || null;\r\n    const last_element_array_buffer: WebGLBuffer | null = gl && gl.getParameter(gl.ELEMENT_ARRAY_BUFFER_BINDING) || null;\r\n    // GLint last_polygon_mode[2]; glGetIntegerv(GL_POLYGON_MODE, last_polygon_mode);\r\n    const last_viewport: Int32Array | null = gl && gl.getParameter(gl.VIEWPORT) || null;\r\n    const last_scissor_box: Int32Array | null = gl && gl.getParameter(gl.SCISSOR_BOX) || null;\r\n    const last_blend_src_rgb: GLenum | null = gl && gl.getParameter(gl.BLEND_SRC_RGB) || null;\r\n    const last_blend_dst_rgb: GLenum | null = gl && gl.getParameter(gl.BLEND_DST_RGB) || null;\r\n    const last_blend_src_alpha: GLenum | null = gl && gl.getParameter(gl.BLEND_SRC_ALPHA) || null;\r\n    const last_blend_dst_alpha: GLenum | null = gl && gl.getParameter(gl.BLEND_DST_ALPHA) || null;\r\n    const last_blend_equation_rgb: GLenum | null = gl && gl.getParameter(gl.BLEND_EQUATION_RGB) || null;\r\n    const last_blend_equation_alpha: GLenum | null = gl && gl.getParameter(gl.BLEND_EQUATION_ALPHA) || null;\r\n    const last_enable_blend: GLboolean | null = gl && gl.getParameter(gl.BLEND) || null;\r\n    const last_enable_cull_face: GLboolean | null = gl && gl.getParameter(gl.CULL_FACE) || null;\r\n    const last_enable_depth_test: GLboolean | null = gl && gl.getParameter(gl.DEPTH_TEST) || null;\r\n    const last_enable_scissor_test: GLboolean | null = gl && gl.getParameter(gl.SCISSOR_TEST) || null;\r\n\r\n    // Setup render state: alpha-blending enabled, no face culling, no depth testing, scissor enabled, polygon fill\r\n    gl && gl.enable(gl.BLEND);\r\n    gl && gl.blendEquation(gl.FUNC_ADD);\r\n    gl && gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n    gl && gl.disable(gl.CULL_FACE);\r\n    gl && gl.disable(gl.DEPTH_TEST);\r\n    gl && gl.enable(gl.SCISSOR_TEST);\r\n    // glPolygonMode(GL_FRONT_AND_BACK, GL_FILL);\r\n\r\n    // Setup viewport, orthographic projection matrix\r\n    // Our visible imgui space lies from draw_data->DisplayPps (top left) to draw_data->DisplayPos+data_data->DisplaySize (bottom right). DisplayMin is typically (0,0) for single viewport apps.\r\n    gl && gl.viewport(0, 0, fb_width, fb_height);\r\n    const L: number = draw_data.DisplayPos.x;\r\n    const R: number = draw_data.DisplayPos.x + draw_data.DisplaySize.x;\r\n    const T: number = draw_data.DisplayPos.y;\r\n    const B: number = draw_data.DisplayPos.y + draw_data.DisplaySize.y;\r\n    const ortho_projection: Float32Array = new Float32Array([\r\n        2.0 / (R - L), 0.0, 0.0, 0.0,\r\n        0.0, 2.0 / (T - B), 0.0, 0.0,\r\n        0.0, 0.0, -1.0, 0.0,\r\n        (R + L) / (L - R), (T + B) / (B - T), 0.0, 1.0,\r\n    ]);\r\n    gl && gl.useProgram(g_ShaderHandle);\r\n    gl && gl.uniform1i(g_AttribLocationTex, 0);\r\n    gl && g_AttribLocationProjMtx && gl.uniformMatrix4fv(g_AttribLocationProjMtx, false, ortho_projection);\r\n\r\n    // Render command lists\r\n    gl && gl.bindBuffer(gl.ARRAY_BUFFER, g_VboHandle);\r\n    gl && gl.enableVertexAttribArray(g_AttribLocationPosition);\r\n    gl && gl.enableVertexAttribArray(g_AttribLocationUV);\r\n    gl && gl.enableVertexAttribArray(g_AttribLocationColor);\r\n\r\n    gl && gl.vertexAttribPointer(g_AttribLocationPosition, 2, gl.FLOAT, false, ImGui.ImDrawVertSize, ImGui.ImDrawVertPosOffset);\r\n    gl && gl.vertexAttribPointer(g_AttribLocationUV, 2, gl.FLOAT, false, ImGui.ImDrawVertSize, ImGui.ImDrawVertUVOffset);\r\n    gl && gl.vertexAttribPointer(g_AttribLocationColor, 4, gl.UNSIGNED_BYTE, true, ImGui.ImDrawVertSize, ImGui.ImDrawVertColOffset);\r\n\r\n    // Draw\r\n    const pos = draw_data.DisplayPos;\r\n    const idx_buffer_type: GLenum = gl && ((ImGui.ImDrawIdxSize === 4) ? gl.UNSIGNED_INT : gl.UNSIGNED_SHORT) || 0;\r\n    draw_data.IterateDrawLists((draw_list: ImGui.ImDrawList): void => {\r\n        // gl || console.log(draw_list);\r\n        // gl || console.log(\"VtxBuffer.length\", draw_list.VtxBuffer.length);\r\n        // gl || console.log(\"IdxBuffer.length\", draw_list.IdxBuffer.length);\r\n\r\n        let idx_buffer_offset: number = 0;\r\n\r\n        gl && gl.bindBuffer(gl.ARRAY_BUFFER, g_VboHandle);\r\n        gl && gl.bufferData(gl.ARRAY_BUFFER, draw_list.VtxBuffer, gl.STREAM_DRAW);\r\n        gl && gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, g_ElementsHandle);\r\n        gl && gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, draw_list.IdxBuffer, gl.STREAM_DRAW);\r\n\r\n        draw_list.IterateDrawCmds((draw_cmd: ImGui.ImDrawCmd): void => {\r\n            // gl || console.log(draw_cmd);\r\n            // gl || console.log(\"ElemCount\", draw_cmd.ElemCount);\r\n            // gl || console.log(\"ClipRect\", draw_cmd.ClipRect.x, fb_height - draw_cmd.ClipRect.w, draw_cmd.ClipRect.z - draw_cmd.ClipRect.x, draw_cmd.ClipRect.w - draw_cmd.ClipRect.y);\r\n            // gl || console.log(\"TextureId\", draw_cmd.TextureId);\r\n            if (!gl) {\r\n                // console.log(\"i: pos.x pos.y uv.x uv.y col\");\r\n                for (let i = 0; i < Math.min(3, draw_cmd.ElemCount); ++i) {\r\n                    const view: ImGui.ImDrawVert = new ImGui.ImDrawVert(draw_list.VtxBuffer.buffer, draw_list.VtxBuffer.byteOffset + i * ImGui.ImDrawVertSize);\r\n                    //console.log(`${i}: ${view.pos[0].toFixed(2)} ${view.pos[1].toFixed(2)} ${view.uv[0].toFixed(5)} ${view.uv[1].toFixed(5)} ${(\"00000000\" + view.col[0].toString(16)).substr(-8)}`);\r\n                }\r\n            }\r\n\r\n            if (draw_cmd.UserCallback !== null) {\r\n                // User callback (registered via ImDrawList::AddCallback)\r\n                draw_cmd.UserCallback(draw_list, draw_cmd);\r\n            } else {\r\n                const clip_rect = new ImGui.ImVec4(draw_cmd.ClipRect.x - pos.x, draw_cmd.ClipRect.y - pos.y, draw_cmd.ClipRect.z - pos.x, draw_cmd.ClipRect.w - pos.y);\r\n                if (clip_rect.x < fb_width && clip_rect.y < fb_height && clip_rect.z >= 0.0 && clip_rect.w >= 0.0) {\r\n                    // Apply scissor/clipping rectangle\r\n                    gl && gl.scissor(clip_rect.x, fb_height - clip_rect.w, clip_rect.z - clip_rect.x, clip_rect.w - clip_rect.y);\r\n\r\n                    // Bind texture, Draw\r\n                    gl && gl.bindTexture(gl.TEXTURE_2D, draw_cmd.TextureId);\r\n                    gl && gl.drawElements(gl.TRIANGLES, draw_cmd.ElemCount, idx_buffer_type, idx_buffer_offset);\r\n                }\r\n            }\r\n\r\n            idx_buffer_offset += draw_cmd.ElemCount * ImGui.ImDrawIdxSize;\r\n        });\r\n    });\r\n\r\n    // Restore modified GL state\r\n    gl && (last_program !== null) && gl.useProgram(last_program);\r\n    gl && (last_texture !== null) && gl.bindTexture(gl.TEXTURE_2D, last_texture);\r\n    gl && (last_active_texture !== null) && gl.activeTexture(last_active_texture);\r\n    gl && gl.disableVertexAttribArray(g_AttribLocationPosition);\r\n    gl && gl.disableVertexAttribArray(g_AttribLocationUV);\r\n    gl && gl.disableVertexAttribArray(g_AttribLocationColor);\r\n    gl && (last_array_buffer !== null) && gl.bindBuffer(gl.ARRAY_BUFFER, last_array_buffer);\r\n    gl && (last_element_array_buffer !== null) && gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, last_element_array_buffer);\r\n    gl && (last_blend_equation_rgb !== null && last_blend_equation_alpha !== null) && gl.blendEquationSeparate(last_blend_equation_rgb, last_blend_equation_alpha);\r\n    gl && (last_blend_src_rgb !== null && last_blend_src_alpha !== null && last_blend_dst_rgb !== null && last_blend_dst_alpha !== null) && gl.blendFuncSeparate(last_blend_src_rgb, last_blend_src_alpha, last_blend_dst_rgb, last_blend_dst_alpha);\r\n    gl && (last_enable_blend ? gl.enable(gl.BLEND) : gl.disable(gl.BLEND));\r\n    gl && (last_enable_cull_face ? gl.enable(gl.CULL_FACE) : gl.disable(gl.CULL_FACE));\r\n    gl && (last_enable_depth_test ? gl.enable(gl.DEPTH_TEST) : gl.disable(gl.DEPTH_TEST));\r\n    gl && (last_enable_scissor_test ? gl.enable(gl.SCISSOR_TEST) : gl.disable(gl.SCISSOR_TEST));\r\n    // glPolygonMode(GL_FRONT_AND_BACK, (GLenum)last_polygon_mode[0]);\r\n    gl && (last_viewport !== null) && gl.viewport(last_viewport[0], last_viewport[1], last_viewport[2], last_viewport[3]);\r\n    gl && (last_scissor_box !== null) && gl.scissor(last_scissor_box[0], last_scissor_box[1], last_scissor_box[2], last_scissor_box[3]);\r\n}\r\n\r\nexport function CreateFontsTexture(): void {\r\n    const io = ImGui.GetIO();\r\n\r\n    // Backup GL state\r\n    const last_texture: WebGLTexture | null = gl && gl.getParameter(gl.TEXTURE_BINDING_2D);\r\n\r\n    // Build texture atlas\r\n    // const width: number = 256;\r\n    // const height: number = 256;\r\n    // const pixels: Uint8Array = new Uint8Array(4 * width * height).fill(0xff);\r\n    const {width, height, pixels} = io.Fonts.GetTexDataAsRGBA32();   // Load as RGBA 32-bits (75% of the memory is wasted, but default font is so small) because it is more likely to be compatible with user's existing shaders. If your ImTextureId represent a higher-level concept than just a GL texture id, consider calling GetTexDataAsAlpha8() instead to save on GPU memory.\r\n    // console.log(`font texture ${width} x ${height} @ ${pixels.length}`);\r\n\r\n    // Upload texture to graphics system\r\n    g_FontTexture = gl && gl.createTexture();\r\n    gl && gl.bindTexture(gl.TEXTURE_2D, g_FontTexture);\r\n    gl && gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n    gl && gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n    // gl && gl.pixelStorei(gl.UNPACK_ROW_LENGTH); // WebGL2\r\n    gl && gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\r\n\r\n    // Store our identifier\r\n    io.Fonts.TexID = g_FontTexture || {foo: \"bar\"};\r\n    // console.log(\"font texture id\", g_FontTexture);\r\n\r\n    // Restore modified GL state\r\n    gl && last_texture && gl.bindTexture(gl.TEXTURE_2D, last_texture);\r\n}\r\n\r\nexport function DestroyFontsTexture(): void {\r\n    const io = ImGui.GetIO();\r\n    io.Fonts.TexID = null;\r\n    gl && gl.deleteTexture(g_FontTexture);\r\n    g_FontTexture = null;\r\n}\r\n\r\nexport function CreateDeviceObjects(): void {\r\n    const vertex_shader: string[] = [\r\n        \"uniform mat4 ProjMtx;\",\r\n        \"attribute vec2 Position;\",\r\n        \"attribute vec2 UV;\",\r\n        \"attribute vec4 Color;\",\r\n        \"varying vec2 Frag_UV;\",\r\n        \"varying vec4 Frag_Color;\",\r\n        \"void main() {\",\r\n        \"\tFrag_UV = UV;\",\r\n        \"\tFrag_Color = Color;\",\r\n        \"\tgl_Position = ProjMtx * vec4(Position.xy,0,1);\",\r\n        \"}\",\r\n    ];\r\n\r\n    const fragment_shader: string[] = [\r\n        \"precision mediump float;\", // WebGL requires precision specifiers\r\n        \"uniform sampler2D Texture;\",\r\n        \"varying vec2 Frag_UV;\",\r\n        \"varying vec4 Frag_Color;\",\r\n        \"void main() {\",\r\n        \"\tgl_FragColor = Frag_Color * texture2D(Texture, Frag_UV);\",\r\n        \"}\",\r\n    ];\r\n\r\n    g_ShaderHandle = gl && gl.createProgram();\r\n    g_VertHandle = gl && gl.createShader(gl.VERTEX_SHADER);\r\n    g_FragHandle = gl && gl.createShader(gl.FRAGMENT_SHADER);\r\n    gl && gl.shaderSource(g_VertHandle as WebGLShader, vertex_shader.join(\"\\n\"));\r\n    gl && gl.shaderSource(g_FragHandle as WebGLShader, fragment_shader.join(\"\\n\"));\r\n    gl && gl.compileShader(g_VertHandle as WebGLShader);\r\n    gl && gl.compileShader(g_FragHandle as WebGLShader);\r\n    gl && gl.attachShader(g_ShaderHandle as WebGLProgram, g_VertHandle as WebGLShader);\r\n    gl && gl.attachShader(g_ShaderHandle as WebGLProgram, g_FragHandle as WebGLShader);\r\n    gl && gl.linkProgram(g_ShaderHandle as WebGLProgram);\r\n\r\n    g_AttribLocationTex = gl && gl.getUniformLocation(g_ShaderHandle as WebGLProgram, \"Texture\");\r\n    g_AttribLocationProjMtx = gl && gl.getUniformLocation(g_ShaderHandle as WebGLProgram, \"ProjMtx\");\r\n    g_AttribLocationPosition = gl && gl.getAttribLocation(g_ShaderHandle as WebGLProgram, \"Position\") || 0;\r\n    g_AttribLocationUV = gl && gl.getAttribLocation(g_ShaderHandle as WebGLProgram, \"UV\") || 0;\r\n    g_AttribLocationColor = gl && gl.getAttribLocation(g_ShaderHandle as WebGLProgram, \"Color\") || 0;\r\n\r\n    g_VboHandle = gl && gl.createBuffer();\r\n    g_ElementsHandle = gl && gl.createBuffer();\r\n\r\n    CreateFontsTexture();\r\n}\r\n\r\nexport function DestroyDeviceObjects(): void {\r\n    DestroyFontsTexture();\r\n\r\n    gl && gl.deleteBuffer(g_VboHandle);\r\n    g_VboHandle = null;\r\n    gl && gl.deleteBuffer(g_ElementsHandle);\r\n    g_ElementsHandle = null;\r\n\r\n    g_AttribLocationTex = null;\r\n    g_AttribLocationProjMtx = null;\r\n    g_AttribLocationPosition = -1;\r\n    g_AttribLocationUV = -1;\r\n    g_AttribLocationColor = -1;\r\n\r\n    gl && gl.deleteProgram(g_ShaderHandle);\r\n    g_ShaderHandle = null;\r\n    gl && gl.deleteShader(g_VertHandle);\r\n    g_VertHandle = null;\r\n    gl && gl.deleteShader(g_FragHandle);\r\n    g_FragHandle = null;\r\n}\r\n","import {SoftwareRenderer} from \"./renderer/SoftwareRenderer\";\r\nimport {WebglRenderer} from \"./gpu_renderer/WebglRenderer\";\r\nimport {Camera_Movement} from \"./Camera\";\r\nimport {Global} from \"./globals\";\r\n\r\nlet software_renderer: SoftwareRenderer;\r\nlet webgl_renderer: WebglRenderer;\r\n\r\nlet last_time = 0;\r\n\r\nlet keys: Array<boolean> = [];\r\nlet moved = false;\r\n\r\nlet canvas_webgl2: HTMLCanvasElement;\r\n\r\n(async function loadWebGL() {\r\n    if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {\r\n        Global.is_mobile = true;\r\n        Global.max_fps = 30;\r\n    }\r\n\r\n    canvas_webgl2 = <HTMLCanvasElement>document.getElementById(\"canvas-webgl2\");\r\n    // software_renderer = new SoftwareRenderer(canvas);\r\n    \r\n    webgl_renderer = new WebglRenderer(canvas_webgl2);\r\n    await webgl_renderer.initImGui();\r\n\r\n    last_time = Date.now();\r\n\r\n    drawScene();\r\n\r\n})();\r\n\r\nfunction drawScene() {\r\n    let now = Date.now();\r\n    let dt = (now - last_time);\r\n\r\n    if (dt > 1000 / Global.max_fps) {\r\n        update(dt / 1000);\r\n        requestAnimationFrame(drawWebgl);\r\n        last_time = now;\r\n        Global.fps = 1000 / dt;\r\n    }\r\n    else\r\n        setTimeout(drawScene, (1000 / Global.max_fps) - (now - last_time))\r\n\r\n}\r\n\r\nfunction drawWebgl() {\r\n    webgl_renderer.draw();\r\n    drawScene();\r\n}\r\n\r\nfunction update(dt: number) {\r\n    let camera = webgl_renderer.camera;\r\n    if (keys[87]) {\r\n        moved = true;\r\n        camera.processKeyboard(Camera_Movement.FORWARD, dt);\r\n    }\r\n    else if (keys[83]) {\r\n        moved = true;\r\n        camera.processKeyboard(Camera_Movement.BACKWARD, dt);\r\n    }\r\n    if (keys[65]) {\r\n        moved = true;\r\n        camera.processKeyboard(Camera_Movement.LEFT, dt);\r\n    }\r\n    else if (keys[68]) {\r\n        moved = true;\r\n        camera.processKeyboard(Camera_Movement.RIGHT, dt);\r\n    }\r\n    if (keys[82]) {\r\n        moved = true;\r\n        webgl_renderer.resetCamera();\r\n    }\r\n    if (keys[32]) {\r\n        moved = true;\r\n        camera.processKeyboard(Camera_Movement.UP, dt);\r\n    }\r\n\r\n    if (moved)\r\n        webgl_renderer.resetSamples();\r\n\r\n    moved = false;\r\n}\r\n\r\nfunction drawCanvas() {\r\n    let now = Date.now();\r\n    software_renderer.draw();\r\n    document.getElementById(\"canvas-text\").textContent = \" \" + (Date.now() - now).toFixed(2) + \" ms\";\r\n}\r\n\r\nwindow.onkeydown = function (e) {\r\n    keys[e.keyCode] = true;\r\n};\r\n\r\nwindow.onkeyup = function (e) {\r\n    keys[e.keyCode] = false;\r\n};\r\n\r\n(function () {\r\n    let script = document.createElement('script');\r\n    script.onload = function () {\r\n        //@ts-ignore\r\n        let stats = new Stats();\r\n        document.body.appendChild(stats.dom);\r\n        requestAnimationFrame(function loop() {\r\n            stats.update();\r\n            requestAnimationFrame(loop)\r\n        });\r\n    };\r\n    script.src = '//mrdoob.github.io/stats.js/build/stats.min.js';\r\n    document.head.appendChild(script);\r\n})()","import {vec3} from \"gl-matrix\";\r\nimport {Ray} from \"./Ray\";\r\nimport {Material} from \"./Material\";\r\n\r\nexport class HitRecord {\r\n    public material:Material;\r\n    \r\n    constructor(public t: number = 0, public pos: vec3 = vec3.create(), public normal: vec3 = vec3.create()) {\r\n        this.material = null;\r\n    }\r\n    \r\n    clear():void{\r\n        this.t = 0;\r\n        vec3.set(this.pos,0,0,0);\r\n        vec3.set(this.normal,0,0,0);\r\n        this.material = null;\r\n}\r\n}\r\n\r\nexport abstract class Hitable {\r\n    abstract hit(ray: Ray, t_min: number, t_max: number, rec: HitRecord): boolean;\r\n}\r\n","import {Hitable, HitRecord} from \"./Hitable\";\r\nimport {Ray} from \"./Ray\";\r\n\r\nexport class HitableList extends Hitable {\r\n    public list: Hitable[];\r\n    public list_size: number;\r\n    private temp_rec: HitRecord;\r\n\r\n    constructor(list: Hitable[] = []) {\r\n        super();\r\n        this.list = list;\r\n        this.temp_rec = new HitRecord();\r\n    }\r\n\r\n    hit(ray: Ray, t_min: number, t_max: number, rec: HitRecord): boolean {\r\n        let hit_anything = false;\r\n        let closest_so_far = t_max;\r\n\r\n        for (let hitable of this.list) {\r\n            if (hitable.hit(ray, t_min, closest_so_far, rec)) {\r\n                hit_anything = true;\r\n                closest_so_far = rec.t;\r\n            }\r\n        }\r\n        return hit_anything;\r\n    }\r\n}\r\n","import {HitRecord} from \"./Hitable\";\r\nimport {Ray} from \"./Ray\";\r\nimport {vec3} from \"gl-matrix\";\r\n\r\nimport gen from \"./SoftwareRenderer\"\r\n\r\nexport abstract class Material{\r\n    \r\n    public abstract scatter(scattered_out:Ray, ray:Ray, hit_record:HitRecord, attenuation:vec3, ):boolean;\r\n}\r\n\r\nexport class Lambertian extends Material{\r\n    temp:vec3 = vec3.create();\r\n    albedo:vec3;\r\n    \r\n    constructor(albedo:vec3 = vec3.create()){\r\n        super();\r\n        this.albedo = albedo;\r\n    }\r\n    \r\n    public scatter( scattered_out:Ray, ray:Ray, rec:HitRecord, attenuation:vec3):boolean{\r\n       // vec3.add(this.temp, rec.pos, );\r\n        vec3.add(this.temp, randomInUnitSphere(this.temp), rec.normal);\r\n\r\n        vec3.copy(scattered_out.origin, rec.pos);\r\n        vec3.copy(scattered_out.direction, this.temp);\r\n        \r\n        vec3.copy(attenuation,this.albedo);\r\n        return true;\r\n    }\r\n}\r\n\r\n\r\nexport class Metal extends Material{\r\n    temp = vec3.create();\r\n    albedo = vec3.create();\r\n    fuzz:number;\r\n\r\n    constructor(albedo:vec3 = vec3.create(), fuzz = 0){\r\n        super();\r\n        this.albedo = albedo;\r\n        this.fuzz = fuzz > 1 ? 1: (fuzz < 0 ? 0: fuzz);\r\n    }\r\n    \r\n    public scatter( scattered_out:Ray, ray:Ray, rec:HitRecord, attenuation:vec3):boolean{\r\n        vec3.normalize(this.temp,ray.direction);\r\n\r\n        vec3.copy(scattered_out.origin, rec.pos);\r\n       vec3.add(scattered_out.direction, reflect(scattered_out.direction,this.temp,rec.normal), vec3.scale(randomInUnitSphere(this.temp),this.temp, this.fuzz));\r\n        \r\n        vec3.copy(attenuation, this.albedo);\r\n\r\n        return vec3.dot(scattered_out.direction, rec.normal) > 0.0;\r\n    }\r\n}\r\n\r\nexport class Dielectric extends Material{\r\n    private temp = vec3.create();\r\n    private outward_normal = vec3.create();\r\n    private refracted = vec3.create();\r\n    private reflected = vec3.create();\r\n    refraction_index:number;\r\n    \r\n    constructor(ref_idx:number){\r\n        super();\r\n        this.refraction_index = ref_idx;\r\n    }\r\n\r\n    public scatter( scattered_out:Ray, ray:Ray, rec:HitRecord, attenuation:vec3):boolean {\r\n        let ni_over_nt;\r\n        let cosine;\r\n        let reflect_prob;\r\n        \r\n\r\n        vec3.normalize(this.temp,ray.direction);\r\n        reflect(this.reflected,this.temp,rec.normal);\r\n        \r\n        vec3.set(attenuation,1,1,1);\r\n        \r\n        if(vec3.dot(ray.direction,rec.normal) > 0.0){\r\n            vec3.negate(this.outward_normal,rec.normal);\r\n            ni_over_nt = this.refraction_index;\r\n            cosine = this.refraction_index * vec3.dot(ray.direction, rec.normal) / vec3.length(ray.direction);\r\n        }else{\r\n            vec3.copy(this.outward_normal,rec.normal);\r\n            ni_over_nt = 1.0 / this.refraction_index;\r\n            cosine = -vec3.dot(ray.direction, rec.normal) / vec3.length(ray.direction);\r\n        }\r\n        \r\n       // vec3.normalize(this.outward_normal,this.outward_normal);\r\n        vec3.normalize(this.temp,ray.direction);\r\n        refract(this.refracted, this.temp,this.outward_normal, ni_over_nt);\r\n        \r\n        if(vec3.length(this.refracted) > 0.0){\r\n            reflect_prob = schlick(cosine, this.refraction_index);\r\n        }else{\r\n          reflect_prob = 1.0\r\n        }\r\n        \r\n        if(gen.nextFloat() < reflect_prob){\r\n            vec3.copy(scattered_out.direction, this.reflected)\r\n        }else{\r\n            vec3.copy(scattered_out.direction, this.refracted);\r\n        }\r\n        \r\n        vec3.copy(scattered_out.origin, rec.pos);\r\n     \r\n        return true;\r\n    }\r\n    \r\n}\r\n\r\nfunction randomInUnitSphere(out: vec3): vec3 {\r\n    do {\r\n        vec3.set(out, 2 *gen.nextFloat() - 1, 2 * gen.nextFloat() - 1, 2 * gen.nextFloat() - 1);\r\n    } while (vec3.dot(out, out) >= 1.0);\r\n    return out;\r\n}\r\n\r\nfunction reflect(out:vec3, v:vec3, n:vec3):vec3{\r\n    let dot = vec3.dot(n,v);\r\n    \r\n    out[0] = v[0] - (n[0] * 2 *dot);\r\n    out[1] = v[1] - (n[1] * 2 *dot);\r\n    out[2] = v[2] - (n[2] * 2 *dot);\r\n    return out;\r\n}\r\n\r\nfunction refract(refracted_out:vec3, v:vec3, n:vec3, ni_over_nt:number, ):boolean{\r\n    let dt = vec3.dot(v,n);\r\n    \r\n    let discriminant = 1.0 - ni_over_nt * ni_over_nt * (1.0 - dt * dt);\r\n    if(discriminant > 0.0){\r\n        //Book formula - v must be normalized\r\n        //refracted = ni_over_nt * ( v - n*dt) - n * sqrt(discriminant);\r\n        let sq = Math.sqrt(discriminant);\r\n        \r\n        refracted_out[0] = ni_over_nt * (v[0] - n[0] * dt) - n[0] * sq;\r\n        refracted_out[1] = ni_over_nt * (v[1] - n[1] * dt) - n[1] * sq;\r\n        refracted_out[2] = ni_over_nt * (v[2] - n[2] * dt) - n[2] * sq;\r\n        \r\n        //OpenGL formula - v,n must be normalized\r\n        //refracted = ni_over_nt * v - (ni_over_nt * dt + sqrt(discriminant)) * n;\r\n        \r\n        return true;\r\n    }else\r\n        vec3.set(refracted_out,0,0,0);\r\n        return false;\r\n}\r\n\r\nfunction schlick(cosine:number, ref_idx:number):number{\r\n    let r0 = (1-ref_idx) / (1+ref_idx);\r\n    r0 = r0*r0;\r\n    return r0 + (1-r0) * Math.pow((1-cosine), 5);\r\n}","import {vec3} from \"gl-matrix\";\r\n\r\nexport class Ray{\r\n    public origin:vec3;\r\n    public direction:vec3;\r\n    \r\n    constructor(origin:vec3 = vec3.create(), direction:vec3 = vec3.create())\r\n    {\r\n        this.origin = origin;\r\n        this.direction = direction;\r\n    }\r\n    \r\n    public pointAtParameter(out:vec3, t:number){\r\n        out[0] = this.origin[0] + t * this.direction[0];\r\n        out[1] = this.origin[1] + t * this.direction[1];\r\n        out[2] = this.origin[2] + t * this.direction[2];\r\n        return out;\r\n    }\r\n\r\n}","import {vec3} from \"gl-matrix\";\r\nimport {Ray} from \"./Ray\";\r\nimport {Hitable, HitRecord} from \"./Hitable\";\r\nimport {Sphere} from \"./Sphere\";\r\nimport {HitableList} from \"./HitableList\";\r\nimport {Camera} from \"../Camera\";\r\nimport {Dielectric, Lambertian, Metal} from \"./Material\";\r\nimport {Global} from \"../globals\";\r\n\r\nconst random = require(\"fast-random\");\r\n\r\nconst seed = 1;\r\nconst gen = random(seed);\r\nexport default gen;\r\n\r\nexport class SoftwareRenderer {\r\n    canvas: HTMLCanvasElement;\r\n    ctx: CanvasRenderingContext2D;\r\n    image_data: ImageData;\r\n\r\n    ambient_light = vec3.fromValues(0.5, 0.7, 1.0);\r\n    temp = vec3.create();\r\n    temp_rec = new HitRecord();\r\n\r\n    max_ray_bounce = Global.is_mobile ? 8 : 16;\r\n    num_samples = Global.is_mobile ? 12 : 16;\r\n\r\n    constructor(canvas: HTMLCanvasElement) {\r\n        this.canvas = canvas;\r\n        this.ctx = this.canvas.getContext(\"2d\");\r\n        this.image_data = this.ctx.createImageData(this.canvas.width, this.canvas.height);\r\n    }\r\n\r\n    public draw(): void {\r\n        let width = this.canvas.width;\r\n        let height = this.canvas.height;\r\n\r\n        let color = vec3.create();\r\n        let sum_color = vec3.create();\r\n\r\n        let list = Array<Hitable>(5);\r\n        list[0] = new Sphere(vec3.fromValues(0, 0, -1), 0.5, new Lambertian(vec3.fromValues(0.1, 0.2, 0.5)));\r\n        list[1] = new Sphere(vec3.fromValues(0, -100.5, -1), 100, new Lambertian(vec3.fromValues(0.8, 0.8, 0.0)));\r\n        list[2] = new Sphere(vec3.fromValues(1, 0, -1), 0.5, new Metal(vec3.fromValues(0.8, 0.6, 0.2), 0.3));\r\n        list[3] = new Sphere(vec3.fromValues(-1, 0, -1), 0.5, new Dielectric(1.5));\r\n        list[4] = new Sphere(vec3.fromValues(-1, 0, -1), -0.45, new Dielectric(1.5));\r\n\r\n        let world: Hitable = new HitableList(list);\r\n\r\n\r\n        let aperture = 0.02;\r\n        let eye = vec3.fromValues(3,3,2);\r\n        let target = vec3.fromValues(0,0,-1);\r\n        let up = vec3.fromValues(0,1,0);\r\n        let dist_to_focus = vec3.distance(eye, target);\r\n        \r\n        let cam = new Camera(eye,target,up, 20, width/height,aperture,dist_to_focus);\r\n        let ray = new Ray();\r\n\r\n        //Self Sample\r\n        // for (let s = 0; s < num_samples; s++) {\r\n        //     for (let y = 0; y < height; y++) {\r\n        //         for (let x = 0; x < width; x++) {\r\n        //             this.getPixelv3f(this.image_data, x, y, sum_color);\r\n        //             let u = (x + gen.random()) / width;\r\n        //             let v = 1 - (y + gen.random()) / height;\r\n        //             let ray = cam.getRay(u, v);\r\n        //             ray.pointAtParameter(temp, 2.0);\r\n        //             this.color(color, ray, world);\r\n        //             //vec3.add(sum_color, sum_color, color);\r\n        //             this.colorLERP(sum_color, sum_color, color, 1 / (s + 1));\r\n        //             this.setPixelv3f(this.image_data, x, y, sum_color);\r\n        //         }\r\n        //     }\r\n        //\r\n        //     this.ctx.putImageData(this.image_data, 0, 0);\r\n        // }\r\n\r\n        for (let y = 0; y < height; y++) {\r\n            for (let x = 0; x < width; x++) {\r\n                vec3.set(sum_color, 0, 0, 0);\r\n                for (let s = 0; s < this.num_samples; s++) {\r\n                    let u = (x + gen.nextFloat() - 0.5) / width;\r\n                    let v = 1 - (y + gen.nextFloat() - 0.5) / height;\r\n                    cam.getRay(ray, u, v);\r\n                    //ray.pointAtParameter(temp, 2.0);\r\n                    this.color(color, ray, world);\r\n                    vec3.add(sum_color, sum_color, color);\r\n                }\r\n                vec3.scale(sum_color, sum_color, 1 / this.num_samples);\r\n                vec3.set(sum_color, Math.sqrt(sum_color[0]), Math.sqrt(sum_color[1]), Math.sqrt(sum_color[2]));\r\n                this.setPixelv3f(this.image_data, x, y, sum_color);\r\n            }\r\n        }\r\n        this.ctx.putImageData(this.image_data, 0, 0);\r\n    }\r\n\r\n    private color(out: vec3, ray: Ray, world: Hitable): vec3 {\r\n        let frac = vec3.fromValues(1, 1, 1);\r\n        let attenuation = vec3.create();\r\n\r\n        for (let ray_bounce = 0; ray_bounce <= this.max_ray_bounce; ray_bounce++) {\r\n            if (world.hit(ray, 0.001, Number.MAX_VALUE, this.temp_rec)) {\r\n                if (this.temp_rec.material.scatter(ray, ray, this.temp_rec, attenuation)) {\r\n                    vec3.mul(frac, frac, attenuation);\r\n                } else {\r\n                    vec3.set(frac, 0, 0, 0);\r\n                }\r\n            } else {\r\n                vec3.copy(this.temp, ray.direction);\r\n                vec3.normalize(this.temp, this.temp);\r\n                let t = 0.5 * (this.temp[1] + 1.0);\r\n                vec3.set(\r\n                    out,\r\n                    1.0 - t + t * this.ambient_light[0],\r\n                    1.0 - t + t * this.ambient_light[1],\r\n                    1.0 - t + t * this.ambient_light[2]\r\n                );\r\n                break;\r\n            }\r\n        }\r\n        vec3.mul(out, out, frac);\r\n        return out;\r\n    }\r\n\r\n    private colorLERP(out_color: vec3, color1: vec3, color2: vec3, t: number): void {\r\n        out_color[0] = color1[0] * (1 - t) + color2[0] * t;\r\n        out_color[1] = color1[1] * (1 - t) + color2[1] * t;\r\n        out_color[2] = color1[2] * (1 - t) + color2[2] * t;\r\n    }\r\n\r\n    private setPixelv3f(imageData: ImageData, x: number, y: number, vec: vec3, a = 1.0): void {\r\n        let index = (x + y * imageData.width) * 4;\r\n        imageData.data[index + 0] = vec[0] * 255.99;\r\n        imageData.data[index + 1] = vec[1] * 255.99;\r\n        imageData.data[index + 2] = vec[2] * 255.99;\r\n        imageData.data[index + 3] = a * 255.99;\r\n    }\r\n\r\n    private getPixelv3f(imageData: ImageData, x: number, y: number, out_color: vec3): void {\r\n        let index = (x + y * imageData.width) * 4;\r\n        out_color[0] = imageData.data[index + 0] / 255;\r\n        out_color[1] = imageData.data[index + 1] / 255;\r\n        out_color[2] = imageData.data[index + 2] / 255;\r\n    }\r\n\r\n    private setPixelf(imageData, x, y, r, g, b, a = 1.0): void {\r\n        let index = (x + y * imageData.width) * 4;\r\n        imageData.data[index + 0] = r * 255.99;\r\n        imageData.data[index + 1] = g * 255.99;\r\n        imageData.data[index + 2] = b * 255.99;\r\n        imageData.data[index + 3] = a * 255.99;\r\n    }\r\n\r\n    private setPixel(imageData, x, y, r, g, b, a = 255): void {\r\n        let index = (x + y * imageData.width) * 4;\r\n        imageData.data[index + 0] = r;\r\n        imageData.data[index + 1] = g;\r\n        imageData.data[index + 2] = b;\r\n        imageData.data[index + 3] = a;\r\n    }\r\n\r\n    private setPixelv3(imageData: ImageData, x: number, y: number, vec: vec3, a = 255): void {\r\n        let index = (x + y * imageData.width) * 4;\r\n        imageData.data[index + 0] = vec[0];\r\n        imageData.data[index + 1] = vec[1];\r\n        imageData.data[index + 2] = vec[2];\r\n        imageData.data[index + 3] = a;\r\n    }\r\n}\r\n","import {Hitable, HitRecord} from \"./Hitable\";\r\nimport {vec3} from \"gl-matrix\";\r\nimport {Ray} from \"./Ray\";\r\nimport {Material} from \"./Material\";\r\n\r\nexport class Sphere extends Hitable {\r\n    private temp: vec3 = vec3.create();\r\n\r\n    constructor(public center: vec3, public radius: number, public material:Material) {\r\n        super();\r\n    }\r\n\r\n    hit(ray: Ray, t_min: number, t_max: number, rec: HitRecord): boolean {\r\n        let to_sphere = vec3.sub(this.temp, ray.origin, this.center);\r\n        let a = vec3.dot(ray.direction, ray.direction);\r\n        let b = vec3.dot(to_sphere, ray.direction);\r\n        let c = vec3.dot(to_sphere, to_sphere) - this.radius * this.radius;\r\n        let discriminant = b * b - a * c;\r\n        if (discriminant > 0) {\r\n            let temp = (-b - Math.sqrt(discriminant)) / a;\r\n            if (temp < t_max && temp > t_min) {\r\n                rec.t = temp;\r\n                ray.pointAtParameter(rec.pos, rec.t);\r\n                \r\n                rec.normal[0] = (rec.pos[0] - this.center[0]) / this.radius;\r\n                rec.normal[1] = (rec.pos[1] - this.center[1]) / this.radius;\r\n                rec.normal[2] = (rec.pos[2] - this.center[2]) / this.radius;\r\n                \r\n                rec.material = this.material;\r\n                return true;\r\n            }\r\n            temp = (-b + Math.sqrt(discriminant)) / a;\r\n            if (temp < t_max && temp > t_min) {\r\n                rec.t = temp;\r\n                ray.pointAtParameter(rec.pos, rec.t);\r\n\r\n                rec.normal[0] = (rec.pos[0] - this.center[0]) / this.radius;\r\n                rec.normal[1] = (rec.pos[1] - this.center[1]) / this.radius;\r\n                rec.normal[2] = (rec.pos[2] - this.center[2]) / this.radius;\r\n                \r\n                rec.material = this.material;\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n"],"sourceRoot":""}